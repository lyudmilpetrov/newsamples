(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{"+hG3":function(t,e,n){"use strict";n.d(e,"T",(function(){return st.a})),n.d(e,"U",(function(){return st.b})),n.d(e,"Ab",(function(){return Dt.a})),n.d(e,"Hb",(function(){return Dt.b})),n.d(e,"X",(function(){return _t.a})),n.d(e,"ab",(function(){return _t.b})),n.d(e,"bb",(function(){return _t.c})),n.d(e,"cb",(function(){return _t.d})),n.d(e,"db",(function(){return _t.e})),n.d(e,"fb",(function(){return _t.f})),n.d(e,"nb",(function(){return _t.i})),n.d(e,"ob",(function(){return _t.j})),n.d(e,"pb",(function(){return _t.k})),n.d(e,"sb",(function(){return _t.l})),n.d(e,"tb",(function(){return _t.m})),n.d(e,"ub",(function(){return _t.n})),n.d(e,"vb",(function(){return _t.o})),n.d(e,"xb",(function(){return _t.p})),n.d(e,"yb",(function(){return _t.q})),n.d(e,"zb",(function(){return _t.r})),n.d(e,"Bb",(function(){return _t.s})),n.d(e,"Cb",(function(){return _t.t})),n.d(e,"Db",(function(){return _t.u})),n.d(e,"Gb",(function(){return _t.w})),n.d(e,"Jb",(function(){return _t.x})),n.d(e,"Fb",(function(){return _t.v})),n.d(e,"jb",(function(){return _t.h})),n.d(e,"gb",(function(){return Mt.c})),n.d(e,"Eb",(function(){return Mt.g})),n.d(e,"lb",(function(){return Mt.e})),n.d(e,"ib",(function(){return Mt.d})),n.d(e,"qb",(function(){return Mt.f})),n.d(e,"rb",(function(){return Nt.e})),n.d(e,"hb",(function(){return d.b})),n.d(e,"Z",(function(){return o})),n.d(e,"kb",(function(){return a})),n.d(e,"Ib",(function(){return Ft})),n.d(e,"Y",(function(){return s})),n.d(e,"wb",(function(){return At})),n.d(e,"eb",(function(){return r})),n.d(e,"mb",(function(){return i})),n.d(e,"w",(function(){return Se.b})),n.d(e,"k",(function(){return Se.a})),n.d(e,"a",(function(){return Ct.a})),n.d(e,"b",(function(){return Ct.d})),n.d(e,"c",(function(){return Ct.m})),n.d(e,"d",(function(){return Ct.o})),n.d(e,"e",(function(){return Ct.r})),n.d(e,"f",(function(){return Ct.v})),n.d(e,"g",(function(){return Ct.w})),n.d(e,"h",(function(){return Ct.y})),n.d(e,"i",(function(){return Ct.z})),n.d(e,"j",(function(){return Ct.G})),n.d(e,"l",(function(){return Ct.R})),n.d(e,"m",(function(){return Ct.W})),n.d(e,"n",(function(){return Ct.X})),n.d(e,"o",(function(){return Ct.Y})),n.d(e,"p",(function(){return Ct.ab})),n.d(e,"q",(function(){return Ct.bb})),n.d(e,"s",(function(){return Ct.eb})),n.d(e,"u",(function(){return Ct.mb})),n.d(e,"t",(function(){return Ct.lb})),n.d(e,"v",(function(){return Ct.nb})),n.d(e,"x",(function(){return Ct.wb})),n.d(e,"y",(function(){return Ct.Cb})),n.d(e,"z",(function(){return Ct.Db})),n.d(e,"A",(function(){return Ct.Gb})),n.d(e,"B",(function(){return Ct.Hb})),n.d(e,"C",(function(){return Ct.Jb})),n.d(e,"D",(function(){return Ct.Mb})),n.d(e,"E",(function(){return Ct.Ob})),n.d(e,"I",(function(){return Ct.Tb})),n.d(e,"F",(function(){return Ct.Qb})),n.d(e,"G",(function(){return Ct.Rb})),n.d(e,"H",(function(){return Ct.Sb})),n.d(e,"J",(function(){return Ct.bc})),n.d(e,"K",(function(){return Ct.fc})),n.d(e,"M",(function(){return Ct.nc})),n.d(e,"O",(function(){return Ct.vc})),n.d(e,"N",(function(){return Ct.tc})),n.d(e,"Q",(function(){return Ct.Dc})),n.d(e,"P",(function(){return Ct.Cc})),n.d(e,"R",(function(){return Ct.Gc})),n.d(e,"S",(function(){return Ct.Ic})),n.d(e,"V",(function(){return Ct.Mc})),n.d(e,"W",(function(){return Ct.Nc})),n.d(e,"r",(function(){return Ct.db})),n.d(e,"L",(function(){return Ct.lc}));var r={};n.r(r),n.d(r,"isMobile",(function(){return c})),n.d(r,"isBrowser",(function(){return l}));var a={};n.r(a),n.d(a,"copyModel",(function(){return J})),n.d(a,"listModels",(function(){return Y})),n.d(a,"moveModel",(function(){return Z})),n.d(a,"removeModel",(function(){return Q})),n.d(a,"browserFiles",(function(){return dt})),n.d(a,"browserHTTPRequest",(function(){return Ot})),n.d(a,"concatenateArrayBuffers",(function(){return w})),n.d(a,"decodeWeights",(function(){return y})),n.d(a,"encodeWeights",(function(){return g})),n.d(a,"fromMemory",(function(){return jt})),n.d(a,"getLoadHandlers",(function(){return S})),n.d(a,"getModelArtifactsInfoForJSON",(function(){return I})),n.d(a,"getSaveHandlers",(function(){return T})),n.d(a,"http",(function(){return xt})),n.d(a,"isHTTPScheme",(function(){return gt})),n.d(a,"loadWeights",(function(){return ft})),n.d(a,"registerLoadRouter",(function(){return E})),n.d(a,"registerSaveRouter",(function(){return $})),n.d(a,"weightsLoaderFactory",(function(){return mt})),n.d(a,"withSaveHandler",(function(){return It}));var o={};n.r(o),n.d(o,"toPixels",(function(){return kt})),n.d(o,"fromPixels",(function(){return Rt}));var s={};n.r(s),n.d(s,"axesAreInnerMostDims",(function(){return Vt.b})),n.d(s,"combineLocations",(function(){return Vt.c})),n.d(s,"computeOutAndReduceShapes",(function(){return Vt.d})),n.d(s,"expandShapeToKeepDim",(function(){return Vt.e})),n.d(s,"assertAxesAreInnerMostDims",(function(){return Vt.a})),n.d(s,"getAxesPermutation",(function(){return Vt.f})),n.d(s,"getUndoAxesPermutation",(function(){return Vt.h})),n.d(s,"getInnerMostAxes",(function(){return Vt.g})),n.d(s,"getBroadcastDims",(function(){return zt.b})),n.d(s,"getReductionAxes",(function(){return zt.c})),n.d(s,"assertAndGetBroadcastShape",(function(){return zt.a})),n.d(s,"assertParamsConsistent",(function(){return Wt.a})),n.d(s,"computeOutShape",(function(){return Wt.b})),n.d(s,"computeDilation2DInfo",(function(){return Ut.d})),n.d(s,"computePool2DInfo",(function(){return Ut.e})),n.d(s,"computePool3DInfo",(function(){return Ut.f})),n.d(s,"computeConv2DInfo",(function(){return Ut.a})),n.d(s,"computeConv3DInfo",(function(){return Ut.b})),n.d(s,"computeDefaultPad",(function(){return Ut.c})),n.d(s,"tupleValuesAreOne",(function(){return Ut.i})),n.d(s,"eitherStridesOrDilationsAreOne",(function(){return Ut.h})),n.d(s,"convertConv2DDataFormat",(function(){return Ut.g})),n.d(s,"getFusedDyActivation",(function(){return Kt.c})),n.d(s,"getFusedBiasGradient",(function(){return Kt.b})),n.d(s,"applyActivation",(function(){return Kt.a})),n.d(s,"shouldFuse",(function(){return Kt.d})),n.d(s,"PARALLELIZE_THRESHOLD",(function(){return Gt.a})),n.d(s,"computeOptimalWindowSize",(function(){return Gt.b})),n.d(s,"slice_util",(function(){return At})),n.d(s,"upcastType",(function(){return Dt.b})),n.d(s,"getImageCenter",(function(){return Ht})),n.d(s,"getReshaped",(function(){return Xt})),n.d(s,"getPermuted",(function(){return qt})),n.d(s,"getReshapedPermuted",(function(){return Yt})),n.d(s,"getSliceBeginCoords",(function(){return Qt})),n.d(s,"getSliceSize",(function(){return Jt})),n.d(s,"prepareAndValidate",(function(){return Zt})),n.d(s,"validateUpdateShape",(function(){return te.c})),n.d(s,"validateInput",(function(){return te.b})),n.d(s,"calculateShapes",(function(){return te.a})),n.d(s,"SELU_SCALEALPHA",(function(){return ee})),n.d(s,"SELU_SCALE",(function(){return ne})),n.d(s,"ERF_P",(function(){return re})),n.d(s,"ERF_A1",(function(){return ae})),n.d(s,"ERF_A2",(function(){return oe})),n.d(s,"ERF_A3",(function(){return se})),n.d(s,"ERF_A4",(function(){return ie})),n.d(s,"ERF_A5",(function(){return ue})),n.d(s,"warn",(function(){return ce})),n.d(s,"log",(function(){return le})),n.d(s,"mergeRealAndImagArrays",(function(){return de})),n.d(s,"splitRealAndImagArrays",(function(){return pe})),n.d(s,"complexWithEvenIndex",(function(){return he})),n.d(s,"complexWithOddIndex",(function(){return fe})),n.d(s,"getComplexWithIndex",(function(){return me})),n.d(s,"assignToTypedArray",(function(){return be})),n.d(s,"exponents",(function(){return ge})),n.d(s,"exponent",(function(){return ye})),n.d(s,"prepareSplitSize",(function(){return xe.a})),n.d(s,"segment_util",(function(){return Oe})),n.d(s,"castTensor",(function(){return ve})),n.d(s,"reshapeTensor",(function(){return we})),n.d(s,"linspaceImpl",(function(){return je}));var i={};n.r(i),n.d(i,"nonMaxSuppressionV3Impl",(function(){return Ie.a})),n.d(i,"nonMaxSuppressionV4Impl",(function(){return Ie.b})),n.d(i,"nonMaxSuppressionV5Impl",(function(){return Ie.c})),n.d(i,"split",(function(){return Ne})),n.d(i,"tile",(function(){return $e})),n.d(i,"topkImpl",(function(){return Ee})),n.d(i,"whereImpl",(function(){return Te.a}));var u=n("auKK");function c(){if("undefined"!=typeof navigator&&null!=navigator){const t=navigator.userAgent||navigator.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function l(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}var d=n("szMd");const p=Object(d.b)();p.registerFlag("DEBUG",()=>!1,t=>{t&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),p.registerFlag("IS_BROWSER",()=>l()),p.registerFlag("IS_NODE",()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node),p.registerFlag("IS_CHROME",()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),p.registerFlag("PROD",()=>!1),p.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>p.getBool("DEBUG")),p.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),p.registerFlag("IS_TEST",()=>!1);var h=n("B3db"),f=n("NX3e"),m=n("atXS");const b={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};async function g(t,e){const n=[],r=[],a=Array.isArray(t)?t.map(t=>t.name):Object.keys(t);for(let o=0;o<a.length;++o){const s=a[o],i=Array.isArray(t)?t[o].tensor:t[s];if("float32"!==i.dtype&&"int32"!==i.dtype&&"bool"!==i.dtype&&"string"!==i.dtype&&"complex64"!==i.dtype)throw new Error(`Unsupported dtype in weight '${s}': ${i.dtype}`);const u={name:s,shape:i.shape,dtype:i.dtype};if("string"===i.dtype){const t=new Promise(async t=>{const e=await i.bytes(),n=e.reduce((t,e)=>t+e.length,0)+4*e.length,r=new Uint8Array(n);let a=0;for(let o=0;o<e.length;o++){const t=e[o],n=new Uint8Array(new Uint32Array([t.length]).buffer);r.set(n,a),a+=4,r.set(t,a),a+=t.length}t(r)});r.push(t)}else r.push(i.data());null!=e&&(u.group=e),n.push(u)}return{data:x(await Promise.all(r)),specs:n}}function y(t,e){const n={};let r,a=0;for(const o of e){const e=o.name,s=o.dtype,i=o.shape,u=Object(m.N)(i);let c;if("quantization"in o){const n=o.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${o.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${o.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==s)throw new Error(`Weight ${o.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${s}.`)}const i=b[n.dtype],l=t.slice(a,a+u*i),d="uint8"===n.dtype?new Uint8Array(l):new Uint16Array(l);if("float32"===s)if("uint8"===n.dtype||"uint16"===n.dtype){c=new Float32Array(d.length);for(let t=0;t<d.length;t++)c[t]=d[t]*n.scale+n.min}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===r&&(r=C()),c=r(d)}else{if("int32"!==s)throw new Error(`Unsupported dtype in weight '${e}': ${s}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);c=new Int32Array(d.length);for(let t=0;t<d.length;t++)c[t]=Math.round(d[t]*n.scale+n.min)}a+=u*i}else if("string"===s){const e=Object(m.N)(o.shape);c=[];for(let n=0;n<e;n++){const e=new Uint32Array(t.slice(a,a+4))[0];a+=4;const n=new Uint8Array(t.slice(a,a+e));c.push(n),a+=e}}else{const r=b[s],o=t.slice(a,a+u*r);if("float32"===s)c=new Float32Array(o);else if("int32"===s)c=new Int32Array(o);else if("bool"===s)c=new Uint8Array(o);else{if("complex64"!==s)throw new Error(`Unsupported dtype in weight '${e}': ${s}`);{c=new Float32Array(o);const t=new Float32Array(c.length/2),r=new Float32Array(c.length/2);for(let e=0;e<t.length;e++)t[e]=c[2*e],r[e]=c[2*e+1];const a=Object(f.a)(t,i,"float32"),s=Object(f.a)(r,i,"float32");n[e]=Object(h.a)(a,s),a.dispose(),s.dispose()}}a+=u*r}"complex64"!==s&&(n[e]=Object(f.a)(c,i,s))}return n}function x(t){if(null===t)throw new Error("Invalid input value: "+JSON.stringify(t));let e=0;const n=[];t.forEach(t=>{if(e+=t.byteLength,n.push(t.byteLength===t.buffer.byteLength?t:new t.constructor(t)),!(t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array))throw new Error("Unsupported TypedArray subtype: "+t.constructor.name)});const r=new Uint8Array(e);let a=0;return n.forEach(t=>{r.set(new Uint8Array(t.buffer),a),a+=t.byteLength}),r.buffer}const O="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function v(t){return O?Buffer.byteLength(t):new Blob([t]).size}function w(t){if(1===t.length)return t[0];let e=0;t.forEach(t=>{e+=t.byteLength});const n=new Uint8Array(e);let r=0;return t.forEach(t=>{n.set(new Uint8Array(t),r),r+=t.byteLength}),n.buffer}function j(t){for(t=t.trim();t.endsWith("/");)t=t.slice(0,t.length-1);const e=t.split("/");return e[e.length-1]}function I(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==t.modelTopology?0:v(JSON.stringify(t.modelTopology)),weightSpecsBytes:null==t.weightSpecs?0:v(JSON.stringify(t.weightSpecs)),weightDataBytes:null==t.weightData?0:t.weightData.byteLength}}function C(){const t=function(){const t=t=>{let e=t<<13,n=0;for(;0==(8388608&e);)n-=8388608,e<<=1;return e&=-8388609,n+=947912704,e|n},e=new Uint32Array(2048);e[0]=0;for(let n=1;n<1024;n++)e[n]=t(n);for(let n=1024;n<2048;n++)e[n]=939524096+(n-1024<<13);return e}(),e=function(){const t=new Uint32Array(64);t[0]=0,t[31]=1199570944,t[32]=2147483648,t[63]=3347054592;for(let e=1;e<31;e++)t[e]=e<<23;for(let e=33;e<63;e++)t[e]=2147483648+(e-32<<23);return t}(),n=function(){const t=new Uint32Array(64);for(let e=0;e<64;e++)t[e]=1024;return t[0]=t[32]=0,t}();return r=>{const a=new ArrayBuffer(4*r.length),o=new Uint32Array(a);for(let s=0;s<r.length;s++){const a=r[s];o[s]=t[n[a>>10]+(1023&a)]+e[a>>10]}return new Float32Array(a)}}class N{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==N.instance&&(N.instance=new N),N.instance}static registerSaveRouter(t){N.getInstance().saveRouters.push(t)}static registerLoadRouter(t){N.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return N.getHandlers(t,"save")}static getLoadHandlers(t,e){return N.getHandlers(t,"load",e)}static getHandlers(t,e,n){const r=[];return("load"===e?N.getInstance().loadRouters:N.getInstance().saveRouters).forEach(e=>{const a=e(t,n);null!==a&&r.push(a)}),r}}const $=t=>N.registerSaveRouter(t),E=t=>N.registerLoadRouter(t),T=t=>N.getSaveHandlers(t),S=(t,e)=>N.getLoadHandlers(t,e);function k(){if(!Object(d.b)().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const t="undefined"==typeof window?self:window,e=t.indexedDB||t.mozIndexedDB||t.webkitIndexedDB||t.msIndexedDB||t.shimIndexedDB;if(null==e)throw new Error("The current browser does not appear to support IndexedDB.");return e}function R(t){const e=t.result;e.createObjectStore("models_store",{keyPath:"modelPath"}),e.createObjectStore("model_info_store",{keyPath:"modelPath"})}class A{constructor(t){if(this.indexedDB=k(),null==t||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,e){return new Promise((t,n)=>{const r=this.indexedDB.open("tensorflowjs",1);r.onupgradeneeded=()=>R(r),r.onsuccess=()=>{const a=r.result;if(null==e){const e=a.transaction("models_store","readonly"),r=e.objectStore("models_store").get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));t(r.result.modelArtifacts)},r.onerror=t=>(a.close(),n(r.error)),e.oncomplete=()=>a.close()}else{const r=I(e),o=a.transaction("model_info_store","readwrite");let s=o.objectStore("model_info_store");const i=s.put({modelPath:this.modelPath,modelArtifactsInfo:r});let u;i.onsuccess=()=>{u=a.transaction("models_store","readwrite");const i=u.objectStore("models_store").put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:r});i.onsuccess=()=>t({modelArtifactsInfo:r}),i.onerror=t=>{s=o.objectStore("model_info_store");const e=s.delete(this.modelPath);e.onsuccess=()=>(a.close(),n(i.error)),e.onerror=t=>(a.close(),n(i.error))}},i.onerror=t=>(a.close(),n(i.error)),o.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}}},r.onerror=t=>n(r.error)})}}A.URL_SCHEME="indexeddb://";const F=t=>{return Object(d.b)().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(A.URL_SCHEME)?(e=t.slice(A.URL_SCHEME.length),new A(e)):null;var e};N.registerSaveRouter(F),N.registerLoadRouter(F);class D{constructor(){this.indexedDB=k()}async listModels(){return new Promise((t,e)=>{const n=this.indexedDB.open("tensorflowjs",1);n.onupgradeneeded=()=>R(n),n.onsuccess=()=>{const r=n.result,a=r.transaction("model_info_store","readonly"),o=a.objectStore("model_info_store").getAll();o.onsuccess=()=>{const e={};for(const t of o.result)e[t.modelPath]=t.modelArtifactsInfo;t(e)},o.onerror=t=>(r.close(),e(o.error)),a.oncomplete=()=>r.close()},n.onerror=t=>e(n.error)})}async removeModel(t){var e;return t=(e=t).startsWith(A.URL_SCHEME)?e.slice(A.URL_SCHEME.length):e,new Promise((e,n)=>{const r=this.indexedDB.open("tensorflowjs",1);r.onupgradeneeded=()=>R(r),r.onsuccess=()=>{const a=r.result,o=a.transaction("model_info_store","readwrite"),s=o.objectStore("model_info_store"),i=s.get(t);let u;i.onsuccess=()=>{if(null==i.result)return a.close(),n(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{const r=s.delete(t),o=()=>{u=a.transaction("models_store","readwrite");const r=u.objectStore("models_store").delete(t);r.onsuccess=()=>e(i.result.modelArtifactsInfo),r.onerror=t=>n(i.error)};r.onsuccess=o,r.onerror=t=>(o(),a.close(),n(i.error))}},i.onerror=t=>(a.close(),n(i.error)),o.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}},r.onerror=t=>n(r.error)})}}const _="tensorflowjs_models",M="info",P="model_topology",B="weight_specs",L="weight_data",V="model_metadata";function z(t){return{info:[_,t,M].join("/"),topology:[_,t,P].join("/"),weightSpecs:[_,t,B].join("/"),weightData:[_,t,L].join("/"),modelMetadata:[_,t,V].join("/")}}function W(t){const e=t.split("/");if(e.length<3)throw new Error("Invalid key format: "+t);return e.slice(1,e.length-1).join("/")}class U{constructor(t){if(!Object(d.b)().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==t||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=z(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(t.modelTopology),r=JSON.stringify(t.weightSpecs),a=I(t);try{return this.LS.setItem(this.keys.info,JSON.stringify(a)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,r),this.LS.setItem(this.keys.weightData,function(t){if(O)return Buffer.from(t).toString("base64");const e=new Uint8Array(t);let n="";for(let r=0,a=e.length;r<a;r++)n+=String.fromCharCode(e[r]);return btoa(n)}(t.weightData)),this.LS.setItem(this.keys.modelMetadata,JSON.stringify({format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,userDefinedMetadata:t.userDefinedMetadata})),{modelArtifactsInfo:a}}catch(e){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${a.modelTopologyBytes}, weightSpecsBytes=${a.weightSpecsBytes}, weightDataBytes=${a.weightDataBytes}.`)}}}async load(){const t=JSON.parse(this.LS.getItem(this.keys.info));if(null==t)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==t.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const e={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);e.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);e.weightSpecs=r;const a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){const t=JSON.parse(a);e.format=t.format,e.generatedBy=t.generatedBy,e.convertedBy=t.convertedBy,e.userDefinedMetadata=t.userDefinedMetadata}const o=this.LS.getItem(this.keys.weightData);if(null==o)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return e.weightData=function(t){if(O){const e=Buffer.from(t,"base64");return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)}const e=atob(t),n=new Uint8Array(e.length);for(let r=0;r<e.length;++r)n.set([e.charCodeAt(r)],r);return n.buffer}(o),e}}U.URL_SCHEME="localstorage://";const K=t=>{return Object(d.b)().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(U.URL_SCHEME)?(e=t.slice(U.URL_SCHEME.length),new U(e)):null;var e};N.registerSaveRouter(K),N.registerLoadRouter(K);class G{constructor(){Object(m.b)(Object(d.b)().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),Object(m.b)("undefined"==typeof window||void 0!==window.localStorage,()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const t={},e=_+"/",n="/"+M;for(let r=0;r<this.LS.length;++r){const a=this.LS.key(r);a.startsWith(e)&&a.endsWith(n)&&(t[W(a)]=JSON.parse(this.LS.getItem(a)))}return t}async removeModel(t){var e;const n=z(t=(e=t).startsWith(U.URL_SCHEME)?e.slice(U.URL_SCHEME.length):e);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${t}'`);const r=JSON.parse(this.LS.getItem(n.info));return this.LS.removeItem(n.info),this.LS.removeItem(n.topology),this.LS.removeItem(n.weightSpecs),this.LS.removeItem(n.weightData),r}}class H{constructor(){this.managers={}}static getInstance(){return null==H.instance&&(H.instance=new H),H.instance}static registerManager(t,e){Object(m.b)(null!=t,()=>"scheme must not be undefined or null."),t.endsWith("://")&&(t=t.slice(0,t.indexOf("://"))),Object(m.b)(t.length>0,()=>"scheme must not be an empty string.");const n=H.getInstance();Object(m.b)(null==n.managers[t],()=>`A model store manager is already registered for scheme '${t}'.`),n.managers[t]=e}static getManager(t){const e=this.getInstance().managers[t];if(null==e)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(this.getInstance().managers)}}function X(t){if(-1===t.indexOf("://"))throw new Error("The url string provided does not contain a scheme. Supported schemes are: "+H.getSchemes().join(","));return{scheme:t.split("://")[0],path:t.split("://")[1]}}async function q(t,e,n=!1){Object(m.b)(t!==e,()=>`Old path and new path are the same: '${t}'`);const r=N.getLoadHandlers(t);Object(m.b)(r.length>0,()=>`Copying failed because no load handler is found for source URL ${t}.`),Object(m.b)(r.length<2,()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${t}.`);const a=r[0],o=N.getSaveHandlers(e);Object(m.b)(o.length>0,()=>`Copying failed because no save handler is found for destination URL ${e}.`),Object(m.b)(o.length<2,()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${e}.`);const s=o[0],i=X(t).scheme,u=X(t).path,c=i===X(t).scheme,l=await a.load();n&&c&&await H.getManager(i).removeModel(u);const d=await s.save(l);return n&&!c&&await H.getManager(i).removeModel(u),d.modelArtifactsInfo}async function Y(){const t=H.getSchemes(),e={};for(const n of t){const t=await H.getManager(n).listModels();for(const r in t)e[n+"://"+r]=t[r]}return e}async function Q(t){const e=X(t);return H.getManager(e.scheme).removeModel(e.path)}async function J(t,e){return q(t,e,!1)}async function Z(t,e){return q(t,e,!0)}class tt{fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error("Browser's encoder only supports utf-8, but got "+e);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}}if(Object(d.b)().get("IS_BROWSER")){Object(d.b)().setPlatform("browser",new tt);try{H.registerManager(U.URL_SCHEME,new G)}catch(qo){}try{H.registerManager(A.URL_SCHEME,new D)}catch(qo){}}let et;Object(d.b)().get("IS_NODE")&&Object(d.b)().setPlatform("node",new class{constructor(){this.util=n(8),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return null!=Object(d.b)().global.fetch?Object(d.b)().global.fetch(t,e):(null==et&&(et=n(7)),et(t,e))}now(){const t=process.hrtime();return 1e3*t[0]+t[1]/1e6}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error("Node built-in encoder only supports utf-8, but got "+e);return this.textEncoder.encode(t)}decode(t,e){return 0===t.length?"":new this.util.TextDecoder(e).decode(t)}});var nt=n("BD40"),rt=n("3rNm"),at=n("8Km0"),ot=n("dWjR"),st=n("NNfn");Object(u.b)();const it={buffer:nt.a,cast:rt.a,clone:at.a,print:ot.a};function ut(t){return new Promise(t=>setTimeout(t)).then(t)}Object(st.e)(it);class ct{constructor(t){if(!Object(d.b)().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(ct.URL_SCHEME)&&(t=t.slice(ct.URL_SCHEME.length)),null!=t&&0!==t.length||(t="model"),this.modelTopologyFileName=t+".json",this.weightDataFileName=t+".weights.bin"}async save(t){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const e=window.URL.createObjectURL(new Blob([t.weightData],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=window.URL.createObjectURL(new Blob([JSON.stringify({modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}]})],{type:"application/json"})),r=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(r.download=this.modelTopologyFileName,r.href=n,await ut(()=>r.dispatchEvent(new MouseEvent("click"))),null!=t.weightData){const t=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;t.download=this.weightDataFileName,t.href=e,await ut(()=>t.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:I(t)}}}}ct.URL_SCHEME="downloads://";class lt{constructor(t){if(null==t||t.length<1)throw new Error("When calling browserFiles, at least 1 file is required, but received "+t);this.files=t}async load(){const t=this.files[0],e=this.files.slice(1);return new Promise((n,r)=>{const a=new FileReader;a.onload=a=>{const o=JSON.parse(a.target.result),s=o.modelTopology;if(null==s)return void r(new Error("modelTopology field is missing from file "+t.name));0===e.length&&n({modelTopology:s});const i=o.weightsManifest;if(null==i)return void r(new Error("weightManifest field is missing from file "+t.name));let u;try{u=this.checkManifestAndWeightFiles(i,e)}catch(qo){return void r(qo)}const c=[],l=[],d=[];i.forEach(t=>{t.paths.forEach(t=>{l.push(t),d.push(null)}),c.push(...t.weights)}),i.forEach(t=>{t.paths.forEach(t=>{const e=new FileReader;e.onload=e=>{const r=e.target.result,a=l.indexOf(t);d[a]=r,-1===d.indexOf(null)&&n({modelTopology:s,weightSpecs:c,weightData:w(d),format:o.format,generatedBy:o.generatedBy,convertedBy:o.convertedBy,userDefinedMetadata:o.userDefinedMetadata})},e.onerror=e=>r(`Failed to weights data from file of path '${t}'.`),e.readAsArrayBuffer(u[t])})})},a.onerror=e=>r(`Failed to read model topology and weights manifest JSON from file '${t.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),a.readAsText(t)})}checkManifestAndWeightFiles(t,e){const n=[],r=e.map(t=>j(t.name)),a={};for(const o of t)o.paths.forEach(t=>{const o=j(t);if(-1!==n.indexOf(o))throw new Error(`Duplicate file basename found in weights manifest: '${o}'`);if(n.push(o),-1===r.indexOf(o))throw new Error(`Weight file with basename '${o}' is not provided.`);a[t]=e[r.indexOf(o)]});if(n.length!==e.length)throw new Error(`Mismatch in the number of files in weights manifest (${n.length}) and the number of weight files provided (${e.length}).`);return a}}function dt(t){return new lt(t)}function pt(t,e,n,r){!function(t){Object(m.b)(null!=t&&Array.isArray(t)&&t.length>0,()=>"promises must be a none empty array")}(t),function(t,e){Object(m.b)(t>=0&&t<=1,()=>"Progress fraction must be in range [0, 1], but got startFraction "+t),Object(m.b)(e>=0&&e<=1,()=>"Progress fraction must be in range [0, 1], but got endFraction "+e),Object(m.b)(e>=t,()=>`startFraction must be no more than endFraction, but got startFraction ${t} and endFraction `+e)}(n=null==n?0:n,r=null==r?1:r);let a=0;return Promise.all(t.map(o=>(o.then(o=>{const s=n+ ++a/t.length*(r-n);return e(s),o}),o)))}async function ht(t,e){null==e&&(e={});const n=null==e.fetchFunc?Object(d.b)().platform.fetch:e.fetchFunc,r=t.map(t=>n(t,e.requestInit,{isBinary:!0})),a=(null==e.onProgress?await Promise.all(r):await pt(r,e.onProgress,0,.5)).map(t=>t.arrayBuffer());return null==e.onProgress?await Promise.all(a):await pt(a,e.onProgress,.5,1)}async function ft(t,e="",n,r){return mt(t=>ht(t,{requestInit:r}))(t,e,n)}function mt(t){return async(e,n="",r)=>{const a=e.map(()=>!1),o={},s=null!=r?r.map(()=>!1):[],i=[];if(e.forEach((t,e)=>{let n=0;t.weights.forEach(t=>{const u=b["quantization"in t?t.quantization.dtype:t.dtype]*m.N(t.shape),c=()=>{a[e]=!0,null==o[e]&&(o[e]=[]),o[e].push({manifestEntry:t,groupOffset:n,sizeBytes:u})};null!=r?r.forEach((e,n)=>{e===t.name&&(c(),s[n]=!0)}):c(),i.push(t.name),n+=u})}),!s.every(t=>t)){const t=r.filter((t,e)=>!s[e]);throw new Error("Could not find weights in manifest with names: "+t.join(", ")+". \nManifest JSON has weights with names: "+i.join(", ")+".")}const u=a.reduce((t,e,n)=>(e&&t.push(n),t),[]),c=[];u.forEach(t=>{e[t].paths.forEach(t=>{const e=n+(n.endsWith("/")?"":"/")+t;c.push(e)})});const l=await t(c),d={};let p=0;return u.forEach(t=>{const n=e[t].paths.length;let r=0;for(let e=0;e<n;e++)r+=l[p+e].byteLength;const a=new ArrayBuffer(r),s=new Uint8Array(a);let i=0;for(let e=0;e<n;e++){const t=new Uint8Array(l[p+e]);s.set(t,i),i+=t.byteLength}o[t].forEach(t=>{const e=y(a.slice(t.groupOffset,t.groupOffset+t.sizeBytes),[t.manifestEntry]);for(const n in e)d[n]=e[n]}),p+=n}),d}}N.registerSaveRouter(t=>Object(d.b)().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(ct.URL_SCHEME)?function(t="model"){return new ct(t)}(t.slice(ct.URL_SCHEME.length)):null);class bt{constructor(t,e){if(this.DEFAULT_METHOD="POST",null==e&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.onProgress=e.onProgress,this.weightUrlConverter=e.weightUrlConverter,null!=e.fetchFunc?(Object(m.b)("function"==typeof e.fetchFunc,()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=e.fetchFunc):this.fetch=Object(d.b)().platform.fetch,Object(m.b)(null!=t&&t.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(t)&&Object(m.b)(2===t.length,()=>`URL paths for http must have a length of 2, (actual length is ${t.length}).`),this.path=t,null!=e.requestInit&&null!=e.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{}}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);e.body=new FormData,e.body.append("model.json",new Blob([JSON.stringify({modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,userDefinedMetadata:t.userDefinedMetadata,weightsManifest:[{paths:["./model.weights.bin"],weights:t.weightSpecs}]})],{type:"application/json"}),"model.json"),null!=t.weightData&&e.body.append("model.weights.bin",new Blob([t.weightData],{type:"application/octet-stream"}),"model.weights.bin");const n=await this.fetch(this.path,e);if(n.ok)return{modelArtifactsInfo:I(t),responses:[n]};throw new Error("BrowserHTTPRequest.save() failed due to HTTP response status "+n.status+".")}async load(){const t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code `+t.status+". Please verify this URL points to the model JSON of the model to load.");let e;try{e=await t.json()}catch(p){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=e.modelTopology,r=e.weightsManifest,a=e.generatedBy,o=e.convertedBy,s=e.format,i=e.userDefinedMetadata;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let u,c;if(null!=r){const t=await this.loadWeights(r);[u,c]=t}const l={modelTopology:n,weightSpecs:u,weightData:c,userDefinedMetadata:i,generatedBy:a,convertedBy:o,format:s},d=e.modelInitializer;return d&&(l.modelInitializer=d),l}async loadWeights(t){const e=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(t){const e=t.lastIndexOf("/"),n=t.lastIndexOf("?");return[t.substring(0,e)+"/",n>e?t.substring(n):""]}(e),a=this.weightPathPrefix||n,o=[];for(const u of t)o.push(...u.weights);const s=[],i=[];for(const u of t)for(const t of u.paths)null!=this.weightUrlConverter?i.push(this.weightUrlConverter(t)):s.push(a+t+r);return this.weightUrlConverter&&s.push(...await Promise.all(i)),[o,w(await ht(s,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function gt(t){return null!=t.match(bt.URL_SCHEME_REGEX)}bt.URL_SCHEME_REGEX=/^https?:\/\//;const yt=(t,e)=>{if("undefined"==typeof fetch&&(null==e||null==e.fetchFunc))return null;{let n=!0;if(n=Array.isArray(t)?t.every(t=>gt(t)):gt(t),n)return xt(t,e)}return null};function xt(t,e){return new bt(t,e)}function Ot(t,e){return xt(t,e)}N.registerSaveRouter(yt),N.registerLoadRouter(yt);class vt{constructor(t){this.modelArtifacts=t}async load(){return this.modelArtifacts}}class wt{constructor(t){this.saveHandler=t}async save(t){return this.saveHandler(t)}}function jt(t,e,n,r){return 1===arguments.length?null!=t.modelTopology||null!=t.weightSpecs?new vt(t):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new vt({modelTopology:t})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new vt({modelTopology:t,weightSpecs:e,weightData:n,trainingConfig:r}))}function It(t){return new wt(t)}var Ct=n("wFtI"),Nt=n("c7gn"),$t=n("o/e8"),Et=n("VO80"),Tt=n("BbuY");let St;async function kt(t,e){let n=Object($t.a)(t,"img","toPixels");if(!(t instanceof st.a)){const t=n;n=Object(rt.a)(t,"int32"),t.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[r,a]=n.shape.slice(0,2),o=2===n.rank?1:n.shape[2];if(o>4||2===o)throw new Error("toPixels only supports depth of size 1, 3 or 4 but got "+o);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);const s=await n.data(),i="float32"===n.dtype?255:1,u=new Uint8ClampedArray(a*r*4);for(let c=0;c<r*a;++c){const t=[0,0,0,255];for(let r=0;r<o;r++){const e=s[c*o+r];if("float32"===n.dtype){if(e<0||e>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${e}.`)}else if("int32"===n.dtype&&(e<0||e>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${e}.`);1===o?(t[0]=e*i,t[1]=e*i,t[2]=e*i):t[r]=e*i}const e=4*c;u[e+0]=Math.round(t[0]),u[e+1]=Math.round(t[1]),u[e+2]=Math.round(t[2]),u[e+3]=Math.round(t[3])}if(null!=e){e.width=a,e.height=r;const t=e.getContext("2d"),n=new ImageData(u,a,r);t.putImageData(n,0,0)}return n!==t&&n.dispose(),u}const Rt=Object(Et.a)({fromPixels_:function(t,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==t)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,o=!1,s=!1;if(t.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&t instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&t instanceof HTMLVideoElement)a=!0;else if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement)o=!0;else{if(null==t.getContext)throw new Error("pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was "+t.constructor.name);s=!0}if(a){const e=2;if(a&&t.readyState<e)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=Object(Nt.b)(Ct.db,u.a.backendName))return u.a.runKernel(Ct.db,{pixels:t},{numChannels:e});const[i,c]=a?[t.videoWidth,t.videoHeight]:[t.width,t.height];let l,d;if(s?l=t.getContext("2d").getImageData(0,0,i,c).data:r||n?l=t.data:(o||a)&&(null==St&&(St=document.createElement("canvas").getContext("2d")),St.canvas.width=i,St.canvas.height=c,St.drawImage(t,0,0,i,c),l=St.getImageData(0,0,i,c).data),4===e)d=new Int32Array(l);else{const t=i*c;d=new Int32Array(t*e);for(let n=0;n<t;n++)for(let t=0;t<e;++t)d[n*e+t]=l[4*n+t]}const p=[c,i,e];return Object(Tt.a)(d,p,"int32")}});var At=n("Xr0w"),Ft=n("6366"),Dt=n("I79q"),_t=n("EysY"),Mt=n("wE5H"),Pt=n("AV8V"),Bt=n("lg8H"),Lt=n("Wiw4"),Vt=n("NuWS"),zt=n("Um8L"),Wt=n("87nf"),Ut=n("uBja"),Kt=n("R0ls"),Gt=n("9jvw");function Ht(t,e,n){return[n*("number"==typeof t?t:t[0]),e*("number"==typeof t?t:t[1])]}function Xt(t,e,n,r=!0){let a=[];if(r)a=a.concat(e.slice(0)),a.push(t[0]/n),a=a.concat(t.slice(1));else{a=a.concat(t[0]);const n=e.length;for(let r=0;r<n;++r)a=a.concat([t[r+1]/e[r],e[r]]);a=a.concat(t.slice(n+1))}return a}function qt(t,e,n=!0){const r=[];if(n){r.push(e);for(let n=e+1;n<t;++n)n<=2*e?(r.push(n),r.push(n-(e+1))):r.push(n)}else{const n=[],a=[];for(let r=1;r<t;++r)r>=2*e+1||r%2==1?a.push(r):n.push(r);r.push(...n),r.push(0),r.push(...a)}return r}function Yt(t,e,n,r=!0){const a=[];a.push(r?t[0]/n:t[0]*n);for(let o=1;o<t.length;++o)a.push(o<=e.length?r?e[o-1]*t[o]:t[o]/e[o-1]:t[o]);return a}function Qt(t,e){const n=[0];for(let r=0;r<e;++r)n.push(t[r][0]);return n}function Jt(t,e,n){const r=t.slice(0,1);for(let a=0;a<n;++a)r.push(t[a+1]-e[a][0]-e[a][1]);return r}function Zt(t,e){if(t.rank<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==e.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[e.rank-1]>t.rank)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[e.rank-1]} vs. ${t.rank}`);if(0===t.size)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${t.shape}.`);const n=e.shape,r=n[n.length-1];let a=1;for(let c=0;c<n.length-1;++c)a*=n[c];const o=t.shape,s=n.slice();s.pop();let i=1;for(let c=r;c<t.rank;++c)i*=o[c],s.push(o[c]);const u=[...Object(m.j)(t.shape).map(t=>t/i),1].slice(0,r);return[s,a,i,u]}var te=n("o0+U");const ee=1.7580993408473768,ne=1.0507009873554805,re=.3275911,ae=.254829592,oe=-.284496736,se=1.421413741,ie=-1.453152027,ue=1.061405429;function ce(...t){Object(d.b)().getBool("IS_TEST")||console.warn(...t)}function le(...t){Object(d.b)().getBool("IS_TEST")||console.log(...t)}function de(t,e){if(t.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${t.length}, imag: ${e.length}.`);const n=new Float32Array(2*t.length);for(let r=0;r<n.length;r+=2)n[r]=t[r/2],n[r+1]=e[r/2];return n}function pe(t){const e=new Float32Array(t.length/2),n=new Float32Array(t.length/2);for(let r=0;r<t.length;r+=2)e[r/2]=t[r],n[r/2]=t[r+1];return{real:e,imag:n}}function he(t){const e=Math.ceil(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let a=0;a<t.length;a+=4)n[Math.floor(a/4)]=t[a],r[Math.floor(a/4)]=t[a+1];return{real:n,imag:r}}function fe(t){const e=Math.floor(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let a=2;a<t.length;a+=4)n[Math.floor(a/4)]=t[a],r[Math.floor(a/4)]=t[a+1];return{real:n,imag:r}}function me(t,e){return{real:t[2*e],imag:t[2*e+1]}}function be(t,e,n,r){t[2*r]=e,t[2*r+1]=n}function ge(t,e){const n=new Float32Array(t/2),r=new Float32Array(t/2);for(let a=0;a<Math.ceil(t/2);a++){const o=(e?2:-2)*Math.PI*(a/t);n[a]=Math.cos(o),r[a]=Math.sin(o)}return{real:n,imag:r}}function ye(t,e,n){const r=(n?2:-2)*Math.PI*(t/e);return{real:Math.cos(r),imag:Math.sin(r)}}var xe=n("QVv9"),Oe=n("0+74");function ve(t,e,n){if("complex64"===e){if("complex64"===t.dtype)return t.clone();const e=Object(Lt.a)(t.shape),r=Object(rt.a)(t,"float32"),a=n.complex(r,e);return e.dispose(),r.dispose(),a}if(!Object(m.p)(t.dtype,e))return u.a.makeTensorFromDataId(t.dataId,t.shape,e);if("complex64"===t.dtype){const r=n.real(t),a=Object(rt.a)(r,e);return r.dispose(),a}if("int32"===e)return n.int(t);if("bool"===e){const e=Object(Pt.a)(0,t.dtype),r=n.notEqual(t,e);return e.dispose(),r}throw new Error(`Error in Cast: failed to cast ${t.dtype} to ${e}`)}function we(t,e){return u.a.makeTensorFromDataId(t.dataId,e,t.dtype)}function je(t,e,n){const r=(e-t)/(n-1),a=Object(m.F)(n,"float32");a[0]=t;for(let o=1;o<a.length;o++)a[o]=a[o-1]+r;return Object(Bt.a)(a,"float32")}var Ie=n("g4m1"),Ce=n("bTzI");function Ne(t,e,n){const r=new Array(t.rank).fill(0),a=t.shape.slice();return e.map(e=>{const o=[...a];o[n]=e;const s=Object(Ce.a)(t,r,o);return r[n]+=e,s})}function $e(t,e){const n=new Array(t.rank);for(let a=0;a<n.length;a++)n[a]=t.shape[a]*e[a];const r=Object(nt.a)(n,t.dtype);for(let a=0;a<r.values.length;++a){const e=r.indexToLoc(a),n=new Array(t.rank);for(let r=0;r<n.length;r++)n[r]=e[r]%t.shape[r];const o=t.locToIndex(n);r.values[a]=t.values[o]}return r.toTensor()}function Ee(t,e,n,r,a){const o=e[e.length-1],[s,i]=[t.length/o,o],u=Object(m.o)(n,s*r),c=Object(m.o)("int32",s*r);for(let d=0;d<s;d++){const e=d*i,n=t.subarray(e,e+i),a=[];for(let t=0;t<n.length;t++)a.push({value:n[t],index:t});a.sort((t,e)=>e.value-t.value);const o=d*r,s=u.subarray(o,o+r),l=c.subarray(o,o+r);for(let t=0;t<r;t++)s[t]=a[t].value,l[t]=a[t].index}const l=e.slice();return l[l.length-1]=r,[Object(f.a)(u,l,n),Object(f.a)(c,l,"int32")]}var Te=n("AoCb"),Se=n("i4e/"),ke=n("parS"),Re=n("L7Hl");const Ae={kernelName:Ct.a,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(ke.a)(t,Object(Re.a)(Object(rt.a)(n,"float32"),-1))}}};var Fe=n("x3y4"),De=n("O7f5"),_e=n("Fjpt"),Me=n("k7Jv"),Pe=n("oAkI");const Be={kernelName:Ct.b,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Object(Me.a)(Object(rt.a)(n,"float32")),r=Object(_e.a)(Object(Pe.a)(Object(Pt.a)(1),e));return Object(De.a)(Object(Fe.a)(t,r))}}}},Le={kernelName:Ct.c,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Object(_e.a)(Object(Pe.a)(Object(Me.a)(Object(rt.a)(n,"float32")),1));return Object(Fe.a)(t,e)}}}};var Ve=n("NclT"),ze=n("4FMF");const We={kernelName:Ct.d,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,a=zt.a(n.shape,r.shape);return{a:()=>{let e=t;const r=zt.c(n.shape,a);return r.length>0&&(e=Object(ze.a)(e,r)),Object(Ve.a)(e,n.shape)},b:()=>{let e=t;const n=zt.c(r.shape,a);return n.length>0&&(e=Object(ze.a)(e,n)),Object(Ve.a)(e,r.shape)}}}},Ue={kernelName:Ct.e,saveAllInputs:!0,gradFunc:(t,e)=>{const n={};return e.forEach((e,r)=>{n[r]=()=>t.clone()}),n}};var Ke=n("oJu+");const Ge={kernelName:Ct.h,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(Ke.a)(n)}}},He={kernelName:Ct.i,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(Ke.a)(n)}}},Xe={kernelName:Ct.j,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(Fe.a)(t,Object(_e.a)(Object(Pe.a)(Object(Pt.a)(1),Object(Me.a)(Object(rt.a)(n,"float32")))))}}};var qe=n("kRdc");const Ye={kernelName:Ct.k,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Object(_e.a)(Object(qe.a)(Object(Pt.a)(1),Object(Me.a)(Object(rt.a)(n,"float32"))));return Object(Fe.a)(t,e)}}}},Qe={kernelName:Ct.m,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,a=Object(zt.a)(n.shape,r.shape);return{a:()=>{const e=Object(qe.a)(Object(Me.a)(n),Object(Me.a)(r));let o=Object(ke.a)(t,Object(Fe.a)(r,e));const s=Object(zt.c)(n.shape,a);return s.length>0&&(o=Object(ze.a)(o,s)),Object(Ve.a)(o,n.shape)},b:()=>{const e=Object(qe.a)(Object(Me.a)(n),Object(Me.a)(r));let o=Object(De.a)(Object(ke.a)(t,Object(Fe.a)(n,e)));const s=Object(zt.c)(r.shape,a);return s.length>0&&(o=Object(ze.a)(o,s)),Object(Ve.a)(o,r.shape)}}}},Je={kernelName:Ct.l,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(Fe.a)(t,Object(qe.a)(Object(Me.a)(Object(rt.a)(n,"float32")),1))}}},Ze={kernelName:Ct.n,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(Fe.a)(t,Object(Pe.a)(Object(Pt.a)(1),Object(Me.a)(Object(rt.a)(n,"float32"))))}}},tn=Object(Et.a)({avgPool3dBackprop_:function(t,e,n,r,a=[1,1,1],o,s){const i=Object($t.a)(t,"dy","avgPool3dBackprop"),c=Object($t.a)(e,"input","avgPool3dBackprop");let l=i,d=c,p=!1;4===c.rank&&(p=!0,l=Object(Ve.a)(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),d=Object(Ve.a)(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),m.b(5===l.rank,()=>"Error in avgPool3dBackprop: dy must be rank 5 but got rank "+l.rank+"."),m.b(5===d.rank,()=>"Error in avgPool3dBackprop: input must be rank 5 but got rank "+d.rank+"."),m.b(Ut.h(r,a),()=>`Error in avgPool3dBackprop: Either strides or dilations must be 1. Got strides ${r} and dilations '${a}'`),null!=s&&m.b(m.v(o),()=>`Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode ${s} but got pad ${o}.`);const h=u.a.runKernelFunc(t=>{const e=Ut.f(d.shape,n,r,a,o,s);return t.avgPool3dBackprop(l,d,e)},{dy:l,input:d},null,Ct.q,{filterSize:n,strides:r,dilations:a,pad:o,dimRoundingMode:s});return p?Object(Ve.a)(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),en={kernelName:Ct.p,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{filterSize:a,strides:o,dilations:s,pad:i,dimRoundingMode:u}=n,c=null==s?[1,1,1]:s;return{x:()=>tn(t,r,a,o,c,i,u)}}},nn=Object(Et.a)({avgPoolBackprop_:function(t,e,n,r,a){const o=Object($t.a)(t,"dy","avgPoolBackprop"),s=Object($t.a)(e,"input","avgPoolBackprop");m.b(s.rank===o.rank,()=>`Rank of input (${s.rank}) does not match rank of dy (${o.rank})`);let i=s,c=o,l=!1;3===s.rank&&(l=!0,i=Object(Ve.a)(s,[1,s.shape[0],s.shape[1],s.shape[2]]),c=Object(Ve.a)(o,[1,o.shape[0],o.shape[1],o.shape[2]])),m.b(4===c.rank,()=>"Error in avgPoolBackprop: dy must be rank 4 but got rank "+c.rank+"."),m.b(4===i.rank,()=>"Error in avgPoolBackprop: input must be rank 4 but got rank "+i.rank+".");const d=u.a.runKernelFunc(t=>{const e=Ut.e(i.shape,n,r,1,a);return t.avgPoolBackprop(c,i,e)},{dy:c,input:i},null,Ct.r,{filterSize:n,strides:r,pad:a});return l?Object(Ve.a)(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),rn={kernelName:Ct.o,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{filterSize:a,strides:o,pad:s}=n;return{x:()=>nn(t,r,a,o,s)}}};var an=n("SHv8");const on={kernelName:Ct.s,inputsToSave:["a","b"],gradFunc:(t,e,n)=>{const[r,a]=e,{transposeA:o,transposeB:s}=n;return o||s?!o&&s?{a:()=>Object(an.a)(t,a,!1,!1),b:()=>Object(an.a)(t,r,!0,!1)}:o&&!s?{a:()=>Object(an.a)(a,t,!1,!0),b:()=>Object(an.a)(r,t,!1,!1)}:{a:()=>Object(an.a)(a,t,!0,!0),b:()=>Object(an.a)(t,r,!0,!0)}:{a:()=>Object(an.a)(t,a,!1,!0),b:()=>Object(an.a)(r,t,!0,!1)}}};var sn=n("dYAU");const un={kernelName:Ct.t,gradFunc:(t,e,n)=>{const{blockShape:r,crops:a}=n;return{x:()=>Object(sn.a)(t,r,a)}}},cn={kernelName:Ct.u,gradFunc:(t,e,n)=>{const r=n.inputShape,a=n.shape,o=Array.from(a);for(let i=r.length-1;i>=0;i--)if(r[i]===a[i])o[i]=1;else if(1!==r[i])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${a}].`);const s=[];for(let i=0;i<o.length;i++)o[i]>1&&s.push(i);return{x:()=>Object(ze.a)(t,s,!0)}}},ln={kernelName:Ct.v,gradFunc:t=>({x:()=>t.clone()})},dn={kernelName:Ct.w,gradFunc:t=>({x:()=>Object(Ke.a)(t)})};var pn=n("uy0A"),hn=n("shz4"),fn=n("4zPZ"),mn=n("Z5Ez");const bn={kernelName:Ct.x,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{clipValueMin:a,clipValueMax:o}=n;return{x:()=>Object(mn.a)(Object(fn.a)(Object(pn.a)(r,a),Object(hn.a)(r,o)),t,Object(Ke.a)(t))}}};var gn=n("RbuM");const yn={kernelName:Ct.z,saveAllInputs:!0,gradFunc:(t,e,n)=>{const r=e.map(t=>t.shape),{axis:a}=n,o=Object(m.I)(a,e[0].shape)[0],s=r.map(t=>t[o]);return Object(gn.a)(t,s,o).map(t=>()=>t)}};var xn=n("D2/b"),On=n("c9N1");const vn={kernelName:Ct.A,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[r,a]=e,{dilations:o,strides:s,pad:i,dataFormat:u}=n;return m.b(Ut.i(o),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`),{x:()=>Object(On.a)(r.shape,t,a,s,i,u),filter:()=>Object(xn.a)(r,t,a.shape,s,i,u)}}};var wn=n("3X4V");const jn={kernelName:Ct.C,inputsToSave:["dy","filter"],gradFunc:(t,e,n)=>{const[r,a]=e,{strides:o,pad:s,dataFormat:i,dimRoundingMode:u}=n;return{dy:()=>Object(wn.a)(t,a,o,s,i,1,u),filter:()=>Object(xn.a)(t,r,a.shape,o,s,i,u)}}},In=Object(Et.a)({conv3DBackpropFilter_:function(t,e,n,r,a){let o=t;4===t.rank&&(o=Object(Ve.a)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]));let s=e;return 4===s.rank&&(s=Object(Ve.a)(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),m.b(5===o.rank,()=>"Error in conv3dDerFilter: input must be rank 5, but got shape "+o.shape+"."),m.b(5===s.rank,()=>"Error in conv3dDerFilter: dy must be rank 5, but got shape "+s.shape+"."),m.b(5===n.length,()=>"Error in conv3dDerFilter: filterShape must be length 5, but got "+n+"."),m.b(o.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${o.shape[4]}) must match input depth in filter (${n[3]}.`),m.b(s.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${s.shape[4]}) must match output depth for filter (${n[4]}).`),u.a.runKernelFunc(t=>{const e=Ut.b(o.shape,n,r,1,a);return t.conv3dDerFilter(o,s,e)},{x:o,dy:s},null,Ct.E,{strides:r,pad:a,filterShape:n})}}),Cn=Object(Et.a)({conv3DBackpropInput_:function(t,e,n,r,a){m.b(t.length===e.rank,()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`);let o=t,s=e,i=!1;4===e.rank&&(i=!0,s=Object(Ve.a)(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),o=[1,t[0],t[1],t[2],t[3]]);const c=o[4],l=s.shape[4];m.b(5===o.length,()=>"Error in conv3dDerInput: inShape must be length 5, but got length "+o.length+"."),m.b(5===s.rank,()=>"Error in conv3dDerInput: dy must be rank 5, but got rank "+s.rank),m.b(5===n.rank,()=>"Error in conv3dDerInput: filter must be rank 5, but got rank "+n.rank),m.b(c===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[3]}.`),m.b(l===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${n.shape[4]}.`);const d=u.a.runKernelFunc(t=>{const e=Ut.b(o,n.shape,r,1,a);return t.conv3dDerInput(s,n,e)},{dy:s,filter:n},null,Ct.F,{pad:a,strides:r,inputShape:o});return i?Object(Ve.a)(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),Nn={kernelName:Ct.D,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:r,strides:a,pad:o}=n;m.b(Object(Ut.i)(r),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);const[s,i]=e;return{x:()=>Cn(s.shape,t,i,a,o),filter:()=>In(s,t,i.shape,a,o)}}};var $n=n("aTLu");const En={kernelName:Ct.G,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(ke.a)(Object(De.a)(Object($n.a)(Object(rt.a)(n,"float32"))),t)}}};var Tn=n("XcSs");const Sn={kernelName:Ct.H,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(ke.a)(Object(Tn.a)(Object(rt.a)(n,"float32")),t)}}};var kn=n("HmhO"),Rn=n("yRKQ");const An={kernelName:Ct.J,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{axis:a,exclusive:o,reverse:s}=n;return{x:()=>{const e=Object(Vt.f)([a],r.rank);let n=Object(kn.a)(t,a,o,!s);return null!=e&&(n=Object(Rn.a)(n,e)),n}}}};var Fn=n("aSZd"),Dn=n("jLCh");const _n={kernelName:Ct.L,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:r,strides:a,pad:o,dimRoundingMode:s}=n,i=null==r?[1,1]:r;m.b(Ut.i(i),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`);const[u,c]=e;return m.b(4===u.rank,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`),m.b(4===c.rank,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${c.rank}.`),m.b(u.shape[3]===c.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`),m.b(Ut.h(a,i),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${a} and dilations '${i}'.`),null!=s&&m.b(m.v(o),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${o}.`),{x:()=>Object(Dn.a)(u.shape,t,c,a,o,r,s),filter:()=>Object(Fn.a)(u,t,c.shape,a,o,r,s)}}},Mn={kernelName:Ct.O,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[r,a]=e,o={x:r,filter:a,dy:t},s={x:r,filter:a,dy:t};return{x:()=>u.a.runKernel(Ct.Q,o,n),filter:()=>u.a.runKernel(Ct.P,s,n)}}},Pn={kernelName:Ct.R,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,a=zt.a(n.shape,r.shape);return{a:()=>{const e=Object(Fe.a)(t,Object(rt.a)(r,"float32")),o=zt.c(n.shape,a);return o.length>0?Object(Ve.a)(Object(ze.a)(e,o),n.shape):e},b:()=>{let e=Object(ke.a)(t,Object(rt.a)(n,"float32"));const o=zt.c(r.shape,a);o.length>0&&(e=Object(Ve.a)(Object(ze.a)(e,o),r.shape));const s=Object(Me.a)(r);return Object(De.a)(Object(Fe.a)(e,Object(rt.a)(s,"float32")))}}}},Bn={kernelName:Ct.S,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e,r=e=>e.eluDer(t,n),a={dy:t,y:n};return{x:()=>u.a.runKernelFunc(r,a,null,Ct.T)}}};var Ln=n("TyAZ");const Vn={kernelName:Ct.V,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,r=Object(ke.a)(Object(Ln.a)(Object(De.a)(Object(Me.a)(n))),2/Math.sqrt(Math.PI));return{x:()=>Object(ke.a)(t,r)}}},zn={kernelName:Ct.W,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(ke.a)(t,n)}}},Wn={kernelName:Ct.X,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(ke.a)(t,Object(Ln.a)(n))}}},Un={kernelName:Ct.bb,gradFunc:t=>({x:()=>Object(Ke.a)(t)})},Kn={kernelName:Ct.cb,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,a=Object(zt.a)(n.shape,r.shape);return{a:()=>{const e=Object(Fe.a)(t,Object(rt.a)(r,"float32")),o=Object(zt.c)(n.shape,a);return o.length>0?Object(Ve.a)(Object(ze.a)(e,o),n.shape):e},b:()=>{let e=Object(ke.a)(t,Object(rt.a)(n,"float32"));const o=Object(zt.c)(r.shape,a);o.length>0&&(e=Object(Ve.a)(Object(ze.a)(e,o),r.shape));const s=Object(Me.a)(r);return Object(De.a)(Object(Fe.a)(e,Object(rt.a)(s,"float32")))}}}};var Gn=n("Xyqe"),Hn=n("jXH2");const Xn={kernelName:Ct.eb,inputsToSave:["x","mean","variance","scale"],gradFunc:(t,e,n)=>{const{varianceEpsilon:r}=n,[a,o,s,i]=e,u=null==i?Object(Pt.a)(1):i,c=Object(zt.c)(o.shape,a.shape),l=[];if(1===o.rank){for(let t=0;t<a.shape.length-1;++t)l.push(a.shape[t]);l.push(1)}const d=Object(Pe.a)(a,o),p=Object(ke.a)(t,u),h=Object(Gn.a)(Object(qe.a)(s,Object(Pt.a)(r))),f=Object(ke.a)(Object(ke.a)(Object(ke.a)(h,h),h),Object(Pt.a)(-.5));return{x:()=>1===o.rank?Object(Ve.a)(Object(ke.a)(Object(ke.a)(t,Object(Hn.a)(Object(Ve.a)(h,[1,1,1,o.shape[0]]),l)),u),a.shape):Object(Ve.a)(Object(ke.a)(Object(ke.a)(t,h),u),a.shape),mean:()=>{let t=Object(ke.a)(Object(ke.a)(h,Object(Pt.a)(-1)),p);return 1===o.rank&&(t=Object(ze.a)(t,c)),Object(Ve.a)(t,o.shape)},variance:()=>{let t=Object(ke.a)(Object(ke.a)(f,d),p);return 1===o.rank&&(t=Object(ze.a)(t,c)),Object(Ve.a)(t,o.shape)},scale:()=>{const e=Object(ke.a)(d,h);let n=Object(ke.a)(t,e);return 1===o.rank&&(n=Object(ze.a)(n,c)),Object(Ve.a)(n,o.shape)},offset:()=>{let e=t;return 1===o.rank&&(e=Object(ze.a)(e,c)),Object(Ve.a)(e,o.shape)}}}};var qn=n("U/Lz");const Yn={kernelName:Ct.ib,inputsToSave:["x","indices"],gradFunc:(t,e,n)=>{const[r,a]=e,{axis:o}=n,s=Object(m.I)(o,r.shape)[0];return{x:()=>{const e=r.shape,n=a.size,i=e.slice(0,s),u=i.length,c=e.slice(o,e.length).slice(1),l=c.length,d=Qn(0,u),p=Qn(u+1,u+1+l),h=Jn([i,[n],c]),f=Object(Ve.a)(t,h),m=Object(Ve.a)(a,[n]),b=Jn([[u],d,p]),g=Object(Rn.a)(f,b);let y=Object(qn.a)(g,m,r.shape[s]);const x=Object(Vt.h)(b);return y=Object(Rn.a)(y,x),y},indices:()=>a}}};function Qn(t,e){const n=[];for(let r=t;r<e;++r)n.push(r);return n}function Jn(t){const e=[];for(let n=0;n<t.length;++n)for(let r=0;r<t[n].length;++r)e.push(t[n][r]);return e}const Zn={kernelName:Ct.kb,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>Object(Ke.a)(n),b:()=>Object(Ke.a)(r)}}},tr={kernelName:Ct.mb,gradFunc:t=>({x:()=>Object(rt.a)(t,"float32")})},er={kernelName:Ct.ob,gradFunc:t=>({x:()=>Object(Ke.a)(t)})},nr={kernelName:Ct.pb,gradFunc:t=>({x:()=>Object(Ke.a)(t)})},rr={kernelName:Ct.qb,gradFunc:t=>({x:()=>Object(Ke.a)(t)})},ar={kernelName:Ct.xb,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(Fe.a)(t,Object(qe.a)(n,1))}}},or={kernelName:Ct.wb,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(Fe.a)(t,Object(rt.a)(n,"float32"))}}},sr={kernelName:Ct.yb,inputsToSave:[],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r]=e,{axis:a}=n;return{logits:()=>{const e=Object(Ln.a)(r);return Object(Pe.a)(t,Object(ke.a)(Object(ze.a)(t,a,!0),e))}}}},ir=Object(Et.a)({localResponseNormalizationBackprop_:function(t,e,n,r=5,a=1,o=1,s=.5){return u.a.runKernelFunc(i=>i.LRNGrad(n,t,e,r,a,o,s),{x:t,y:e,dy:n},null,Ct.sb,{depthRadius:r,bias:a,alpha:o,beta:s})}}),ur={kernelName:Ct.rb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,a]=e,{depthRadius:o,bias:s,alpha:i,beta:u}=n;return{x:()=>ir(r,a,t,o,s,i,u)}}};var cr=n("ubnP");function lr(t,e,n,r){return e.rank<n.rank&&(e=Object(Ve.a)(e,Vt.e(e.shape,r))),t.rank<n.rank&&(t=Object(Ve.a)(t,Vt.e(t.shape,r))),{x:()=>Object(ke.a)(t,Object(rt.a)(Object(cr.a)(n,e),t.dtype))}}const dr={kernelName:Ct.Cb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const r=n,{reductionIndices:a}=r,o=e[0],s=lr(t,e[1],o,m.I(a,o.shape));return{x:()=>s.x()}}};var pr=n("4f3O");const hr={kernelName:Ct.Ib,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>Object(ke.a)(t,Object(rt.a)(Object(pn.a)(n,r),"float32")),b:()=>Object(ke.a)(t,Object(rt.a)(Object(pr.a)(n,r),"float32"))}}},fr=Object(Et.a)({maxPool3dBackprop_:function(t,e,n,r,a,o=[1,1,1],s,i){const c=Object($t.a)(t,"dy","maxPool3dBackprop"),l=Object($t.a)(e,"input","maxPool3dBackprop"),d=Object($t.a)(n,"output","maxPool3dBackprop");let p=c,h=l,f=d,b=!1;4===l.rank&&(b=!0,p=Object(Ve.a)(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]]),h=Object(Ve.a)(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),f=Object(Ve.a)(d,[1,d.shape[0],d.shape[1],d.shape[2],d.shape[3]])),m.b(5===p.rank,()=>"Error in maxPool3dBackprop: dy must be rank 5 but got rank "+p.rank+"."),m.b(5===h.rank,()=>"Error in maxPool3dBackprop: input must be rank 5 but got rank "+h.rank+"."),m.b(5===f.rank,()=>"Error in maxPool3dBackprop: output must be rank 5 but got rank "+f.rank+"."),m.b(Ut.h(a,o),()=>`Error in maxPool3dBackprop: Either strides or dilations must be 1. Got strides ${a} and dilations '${o}'`),null!=i&&m.b(m.v(s),()=>`Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`);const g=u.a.runKernelFunc(t=>{const e=Ut.f(h.shape,r,a,o,s,i);return t.maxPool3dBackprop(p,h,f,e)},{dy:p,input:h,output:f},null,Ct.Fb,{filterSize:r,strides:a,dilations:o,pad:s,dimRoundingMode:i});return b?Object(Ve.a)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),mr={kernelName:Ct.Eb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,a]=e,{filterSize:o,strides:s,dilations:i,pad:u,dimRoundingMode:c}=n,l=null==i?[1,1,1]:i;return{x:()=>fr(t,r,a,o,s,l,u,c)}}},br=Object(Et.a)({maxPoolBackprop_:function(t,e,n,r,a,o,s){const i=Object($t.a)(t,"dy","maxPoolBackprop"),c=Object($t.a)(e,"input","maxPoolBackprop"),l=Object($t.a)(n,"output","maxPoolBackprop");return m.b(c.rank===i.rank,()=>`Rank of input (${c.rank}) does not match rank of dy (${i.rank})`),m.b(4===i.rank,()=>"Error in maxPoolBackprop: dy must be rank 4 but got rank "+i.rank+"."),m.b(4===c.rank,()=>"Error in maxPoolBackprop: input must be rank 4 but got rank "+c.rank+"."),null!=s&&m.b(m.v(o),()=>`Error in maxPoolBackprop: pad must be an integer when using, dimRoundingMode ${s} but got pad ${o}.`),u.a.runKernelFunc(t=>{const e=Ut.e(c.shape,r,a,1,o,s);return t.maxPoolBackprop(i,c,l,e)},{dy:i,input:c,output:l},null,Ct.Gb,{filterSize:r,strides:a,pad:o,dimRoundingMode:s})}}),gr={kernelName:Ct.Db,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,a]=e,{filterSize:o,strides:s,pad:i}=n;return{x:()=>br(t,r,a,o,s,i)}}},yr={kernelName:Ct.Kb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const r=n,{axis:a}=r,[o,s]=e,i=lr(t,s,o,m.I(a,o.shape));return{x:()=>i.x()}}};var xr=n("zvA9");const Or={kernelName:Ct.Lb,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>Object(ke.a)(t,Object(rt.a)(Object(hn.a)(n,r),"float32")),b:()=>Object(ke.a)(t,Object(rt.a)(Object(xr.a)(n,r),"float32"))}}},vr={kernelName:Ct.Mb,inputsToSave:["x"],gradFunc:(t,e,n)=>{const r=e[0],{paddings:a}=n,o=a.map(t=>t[0]);return{x:()=>Object(Ce.a)(t,o,r.shape)}}};var wr=n("02mo");const jr={kernelName:Ct.Nb,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,a=Object(zt.a)(n.shape,r.shape);return{a:()=>{const e=Object(zt.c)(n.shape,a);return e.length>0?Object(Ve.a)(Object(ze.a)(t,e),n.shape):t},b:()=>{const e=Object(ke.a)(t,Object(De.a)(Object(wr.a)(Object(Fe.a)(n,r)))),o=Object(zt.c)(r.shape,a);return o.length>0?Object(Ve.a)(Object(ze.a)(e,o),r.shape):e}}}},Ir={kernelName:Ct.Ob,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,a=Object(zt.a)(n.shape,r.shape);return{a:()=>{const e=Object(ke.a)(t,Object(rt.a)(r,"float32")),o=Object(zt.c)(n.shape,a);return o.length>0?Object(Ve.a)(Object(ze.a)(e,o),n.shape):e},b:()=>{const e=Object(ke.a)(t,Object(rt.a)(n,"float32")),o=Object(zt.c)(r.shape,a);return o.length>0?Object(Ve.a)(Object(ze.a)(e,o),r.shape):e}}}},Cr={kernelName:Ct.Pb,gradFunc:t=>({x:()=>Object(De.a)(t)})},Nr={kernelName:Ct.Ub,inputsToSave:["indices"],gradFunc:(t,e)=>{const n=e[0];return{indices:()=>Object(Lt.a)(n.shape,"float32")}}},$r={kernelName:Ct.Vb,gradFunc:t=>({x:()=>Object(Ke.a)(t)})},Er={kernelName:Ct.Wb,inputsToSave:["x"],gradFunc:(t,e,n)=>{const r=e[0],{paddings:a}=n,o=a.map(t=>t[0]);return{x:()=>Object(Ce.a)(t,o,r.shape)}}};var Tr=n("E1lT"),Sr=n("yfHJ");const kr={kernelName:Ct.Xb,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(t,e)=>{const[n,r,a]=e,o=n,s=r,i=zt.a(o.shape,s.shape);return{a:()=>{const e=Object(rt.a)(s,"float32");let n=Object(ke.a)(t,Object(ke.a)(e,Object(Sr.a)(o,Object(Pe.a)(e,Object(Pt.a)(1)))));const r=zt.c(o.shape,i);return r.length>0&&(n=Object(ze.a)(n,r)),Object(Ve.a)(n,o.shape)},b:()=>{const e=Object(xr.a)(o,0),n=Object(mn.a)(e,Object(Tr.a)(o),Object(Ke.a)(o));let r=Object(ke.a)(t,Object(ke.a)(a,n));const u=zt.c(s.shape,i);return u.length>0&&(r=Object(ze.a)(r,u)),Object(Ve.a)(r,s.shape)}}}},Rr={kernelName:Ct.Yb,inputsToSave:["x","alpha"],gradFunc:(t,e)=>{const[n,r]=e,a=Object(xr.a)(n,0);return{x:()=>Object(mn.a)(a,t,Object(ke.a)(t,r)),alpha:()=>{let e=Object(mn.a)(a,Object(Ke.a)(t),Object(ke.a)(t,n));const o=Object(zt.c)(r.shape,t.shape);return o.length>0&&(e=Object(ze.a)(e,o)),Object(Ve.a)(e,r.shape)}}}},Ar={kernelName:Ct.cc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(Fe.a)(t,Object(De.a)(Object(Me.a)(n)))}}},Fr={kernelName:Ct.ec,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,r=Object(ke.a)(Object(hn.a)(n,6),Object(Re.a)(n));return{x:()=>Object(ke.a)(t,Object(rt.a)(r,"float32"))}}},Dr={kernelName:Ct.dc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(ke.a)(t,Object(rt.a)(Object(Re.a)(n),"float32"))}}},_r={kernelName:Ct.fc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(Ve.a)(t,n.shape)}}},Mr={kernelName:Ct.gc,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[r]=e,a=e=>{const{alignCorners:a}=n;return e.resizeBilinearBackprop(t,r,a)},o={images:r};return{images:()=>u.a.runKernelFunc(a,o,null,Ct.hc,n)}}},Pr={kernelName:Ct.ic,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[r]=e,a=e=>{const{alignCorners:a}=n;return e.resizeNearestNeighborBackprop(t,r,a)},o={images:r};return{images:()=>u.a.runKernelFunc(a,o,null,Ct.jc,n)}}};var Br=n("0I63");const Lr={kernelName:Ct.kc,gradFunc:(t,e,n)=>{const{dims:r}=n,a=Object(m.I)(r,t.shape);return{x:()=>Object(Br.a)(t,a)}}},Vr={kernelName:Ct.mc,gradFunc:t=>({x:()=>Object(Ke.a)(t)})},zr={kernelName:Ct.nc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(De.a)(Object(Fe.a)(t,Object(ke.a)(Object(Sr.a)(n,1.5),2)))}}};var Wr=n("7wDt");const Ur={kernelName:Ct.pc,inputsToSave:["condition"],gradFunc:(t,e)=>{const[n]=e;return{condition:()=>Object(rt.a)(Object(Ke.a)(n),"float32"),t:()=>Object(ke.a)(t,Object(rt.a)(n,t.dtype)),e:()=>Object(ke.a)(t,Object(rt.a)(Object(Wr.a)(n),t.dtype))}}},Kr={kernelName:Ct.qc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Object(xr.a)(n,Object(Pt.a)(0)),r=Object(Pt.a)(ee),a=Object(Pt.a)(ne),o=Object(ke.a)(t,a),s=Object(ke.a)(Object(ke.a)(t,r),Object(Ln.a)(Object(rt.a)(n,"float32")));return Object(mn.a)(e,o,s)}}}},Gr={kernelName:Ct.rc,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(ke.a)(t,Object(ke.a)(n,Object(Pe.a)(Object(Pt.a)(1),n)))}}},Hr={kernelName:Ct.sc,gradFunc:t=>({x:()=>Object(Ke.a)(t)})};var Xr=n("7/dO");const qr={kernelName:Ct.tc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(ke.a)(Object(Xr.a)(Object(rt.a)(n,"float32")),t)}}};var Yr=n("waK1");const Qr={kernelName:Ct.uc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(ke.a)(Object(Yr.a)(Object(rt.a)(n,"float32")),t)}}};var Jr=n("DrVt");const Zr={kernelName:Ct.vc,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{begin:a,size:o}=n,s=r.shape,[i,u]=Object(At.parseSliceParams)(r,a,o),c=[];for(let l=0;l<t.rank;l++)c.push([i[l],s[l]-i[l]-u[l]]);return{x:()=>Object(Jr.a)(t,c)}}},ta={kernelName:Ct.wc,outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r]=e,{dim:a}=n,o=Object(ke.a)(t,r);return{logits:()=>Object(Pe.a)(o,Object(ke.a)(Object(ze.a)(o,[a],!0),r))}}};var ea=n("/7N0");const na={kernelName:Ct.xc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(ke.a)(t,Object(ea.a)(n))}}};var ra=n("OygE");const aa={kernelName:Ct.yc,gradFunc:(t,e,n)=>{const{blockShape:r,paddings:a}=n;return{x:()=>Object(ra.a)(t,r,a)}}};var oa=n("ZJ6U");const sa={kernelName:Ct.Ac,gradFunc:(t,e,n)=>{const{axis:r}=n;return{x:()=>Object(oa.a)(t,r)}}},ia={kernelName:Ct.Bc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(Fe.a)(t,Object(ke.a)(Object(_e.a)(Object(rt.a)(n,"float32")),2))}}},ua={kernelName:Ct.Cc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(ke.a)(t,Object(ke.a)(Object(rt.a)(n,"float32"),2))}}},ca={kernelName:Ct.Dc,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,a=Object(Pt.a)(2);return{a:()=>Object(ke.a)(t,Object(ke.a)(a,Object(Pe.a)(n,r))),b:()=>Object(ke.a)(t,Object(ke.a)(a,Object(Pe.a)(r,n)))}}},la={kernelName:Ct.Ec,gradFunc:t=>({x:()=>Object(Ke.a)(t)})},da={kernelName:Ct.Gc,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,a=zt.a(n.shape,r.shape);return{a:()=>{let e=t;const r=zt.c(n.shape,a);return r.length>0&&(e=Object(ze.a)(e,r)),Object(Ve.a)(e,n.shape)},b:()=>{let e=t;const n=zt.c(r.shape,a);return n.length>0&&(e=Object(ze.a)(e,n)),Object(Ve.a)(Object(De.a)(e),r.shape)}}}};var pa=n("wion");const ha={kernelName:Ct.Hc,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,a=r.shape.slice(),{axis:o}=n;Object(m.I)(o,r.shape).forEach(t=>{a[t]=1});const s=Object(Ve.a)(t,a),i=Object(ke.a)(s,Object(pa.a)(r.shape,"float32"));return{x:()=>i}}},fa={kernelName:Ct.Ic,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(Fe.a)(t,Object(Me.a)(Object(Xr.a)(n)))}}},ma={kernelName:Ct.Jc,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(ke.a)(Object(Pe.a)(Object(Pt.a)(1),Object(Me.a)(n)),t)}}},ba={kernelName:Ct.Kc,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{reps:a}=n;return{x:()=>{let e=Object(Ke.a)(r);if(1===r.rank)for(let n=0;n<a[0];++n)e=Object(qe.a)(e,Object(Ce.a)(t,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<a[0];++n)for(let o=0;o<a[1];++o)e=Object(qe.a)(e,Object(Ce.a)(t,[n*r.shape[0],o*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<a[0];++n)for(let o=0;o<a[1];++o)for(let s=0;s<a[2];++s)e=Object(qe.a)(e,Object(Ce.a)(t,[n*r.shape[0],o*r.shape[1],s*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error("Gradient for tile operation is not implemented for rank-"+r.rank+" tensors yet.");for(let n=0;n<a[0];++n)for(let o=0;o<a[1];++o)for(let s=0;s<a[2];++s)for(let i=0;i<a[3];++i)e=Object(qe.a)(e,Object(Ce.a)(t,[n*r.shape[0],o*r.shape[1],s*r.shape[2],i*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return e}}}},ga={kernelName:Ct.Mc,gradFunc:(t,e,n)=>{const r=n,{perm:a}=r,o=Vt.h(a);return{x:()=>Object(Rn.a)(t,o)}}};var ya=n("1U0N");const xa={kernelName:Ct.Oc,gradFunc:(t,e,n)=>{const r=n,{axis:a}=r;return{value:()=>Object(ya.a)(t,a)}}};var Oa=n("2ugP"),va=n("kaMP"),wa=n("CfTU");const ja=[Ae,Be,Le,We,Ue,Ge,He,Xe,Ye,Qe,Je,Ze,en,rn,on,un,cn,ln,dn,bn,yn,jn,vn,Nn,En,Sn,An,_n,Mn,Pn,Bn,Vn,zn,Wn,Kn,Un,Xn,Yn,Zn,tr,er,nr,rr,ar,or,sr,ur,dr,dr,hr,mr,gr,yr,Or,vr,jr,Ir,Cr,Nr,$r,Er,Er,kr,Rr,Ar,Fr,Dr,_r,Mr,Pr,Lr,Vr,zr,Ur,Kr,Gr,Hr,qr,Qr,Zr,ta,na,aa,aa,sa,sa,ia,ca,ua,la,da,ha,fa,ma,ba,ga,xa,{kernelName:Ct.Pc,inputsToSave:["segmentIds"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>function(t,e){const n=Object(wa.a)(e,Object(Ke.a)(e)),r=Object(va.a)(t,n);let a=Object(pn.a)(e,Object(Pt.a)(0,"int32"));const o=r.rank-a.rank;for(let i=0;i<o;++i)a=Object(Oa.a)(a,i+1);a=Object(fn.a)(a,Object(pa.a)(r.shape,"bool"));const s=Object(Ke.a)(r);return Object(mn.a)(a,r,s)}(t,n)}}},{kernelName:Ct.Qc,gradFunc:t=>({x:()=>Object(Ke.a)(t)})}];for(const Yo of ja)Object(Nt.d)(Yo);var Ia=n("iuCH");st.a.prototype.abs=function(){return this.throwIfDisposed(),Object(Ia.a)(this)};var Ca=n("o3Rt");st.a.prototype.acos=function(){return this.throwIfDisposed(),Object(Ca.a)(this)};var Na=n("RhVc");st.a.prototype.acosh=function(){return this.throwIfDisposed(),Object(Na.a)(this)};var $a=n("zLES");st.a.prototype.addStrict=function(t){return this.throwIfDisposed(),Object($a.a)(this,t)},st.a.prototype.add=function(t){return this.throwIfDisposed(),Object(qe.a)(this,t)};var Ea=n("34HJ");st.a.prototype.all=function(t,e){return this.throwIfDisposed(),Object(Ea.a)(this,t,e)};var Ta=n("RRa9");st.a.prototype.any=function(t,e){return this.throwIfDisposed(),Object(Ta.a)(this,t,e)};var Sa=n("6J+n");st.a.prototype.argMax=function(t){return this.throwIfDisposed(),Object(Sa.a)(this,t)};var ka=n("20lx");st.a.prototype.argMin=function(t){return this.throwIfDisposed(),Object(ka.a)(this,t)},st.a.prototype.asScalar=function(){return this.throwIfDisposed(),Object(m.b)(1===this.size,()=>"The array must have only 1 element."),Object(Ve.a)(this,[])},st.a.prototype.asType=function(t){return this.throwIfDisposed(),Object(rt.a)(this,t)},st.a.prototype.as1D=function(){return this.throwIfDisposed(),Object(Ve.a)(this,[this.size])},st.a.prototype.as2D=function(t,e){return this.throwIfDisposed(),Object(Ve.a)(this,[t,e])},st.a.prototype.as3D=function(t,e,n){return this.throwIfDisposed(),Object(Ve.a)(this,[t,e,n])},st.a.prototype.as4D=function(t,e,n,r){return this.throwIfDisposed(),Object(Ve.a)(this,[t,e,n,r])},st.a.prototype.as5D=function(t,e,n,r,a){return this.throwIfDisposed(),Object(Ve.a)(this,[t,e,n,r,a])};var Ra=n("Ig+c");st.a.prototype.asin=function(){return this.throwIfDisposed(),Object(Ra.a)(this)};var Aa=n("3FnS");st.a.prototype.asinh=function(){return this.throwIfDisposed(),Object(Aa.a)(this)};var Fa=n("fjZN");st.a.prototype.atan=function(){return this.throwIfDisposed(),Object(Fa.a)(this)};var Da=n("YAKK");st.a.prototype.atan2=function(t){return this.throwIfDisposed(),Object(Da.a)(this,t)};var _a=n("0ahe");st.a.prototype.atanh=function(){return this.throwIfDisposed(),Object(_a.a)(this)};var Ma=n("l0gX");st.a.prototype.avgPool=function(t,e,n,r){return this.throwIfDisposed(),Object(Ma.a)(this,t,e,n,r)},st.a.prototype.batchToSpaceND=function(t,e){return this.throwIfDisposed(),Object(ra.a)(this,t,e)};var Pa=n("cdtJ");st.a.prototype.batchNorm=function(t,e,n,r,a){return this.throwIfDisposed(),Object(Pa.a)(this,t,e,n,r,a)};var Ba=n("SNsm");st.a.prototype.broadcastTo=function(t){return this.throwIfDisposed(),Object(Ba.a)(this,t)},st.a.prototype.cast=function(t){return this.throwIfDisposed(),Object(rt.a)(this,t)};var La=n("WWBm");st.a.prototype.ceil=function(){return this.throwIfDisposed(),Object(La.a)(this)};var Va=n("wI/y");st.a.prototype.clipByValue=function(t,e){return this.throwIfDisposed(),Object(Va.a)(this,t,e)},st.a.prototype.concat=function(t,e){return this.throwIfDisposed(),t instanceof st.a&&(t=[t]),Object(oa.a)([this,...t],e)};var za=n("dnXz");st.a.prototype.conv1d=function(t,e,n,r,a,o){return this.throwIfDisposed(),Object(za.a)(this,t,e,n,r,a,o)};var Wa=n("zR+/");st.a.prototype.conv2dTranspose=function(t,e,n,r,a){return this.throwIfDisposed(),Object(Wa.a)(this,t,e,n,r,a)},st.a.prototype.conv2d=function(t,e,n,r,a,o){return this.throwIfDisposed(),Object(wn.a)(this,t,e,n,r,a,o)},st.a.prototype.cos=function(){return this.throwIfDisposed(),Object(Xr.a)(this)},st.a.prototype.cosh=function(){return this.throwIfDisposed(),Object(Yr.a)(this)},st.a.prototype.cumsum=function(t,e,n){return this.throwIfDisposed(),Object(kn.a)(this,t,e,n)};var Ua=n("Nk7E");st.a.prototype.depthToSpace=function(t,e){return this.throwIfDisposed(),Object(Ua.a)(this,t,e)};var Ka=n("g4+C");st.a.prototype.depthwiseConv2D=function(t,e,n,r,a,o){return Object(Mt.a)("depthwiseConv2D is deprecated, use depthwiseConv2d instead"),this.throwIfDisposed(),Object(Ka.a)(this,t,e,n,r,a,o)},st.a.prototype.depthwiseConv2d=function(t,e,n,r,a,o){return this.throwIfDisposed(),Object(Ka.a)(this,t,e,n,r,a,o)};var Ga=n("wXC5");st.a.prototype.dilation2d=function(t,e,n,r,a){return this.throwIfDisposed(),Object(Ga.a)(this,t,e,n,r,a)};var Ha=n("ARu+");st.a.prototype.divNoNan=function(t){return this.throwIfDisposed(),Object(Ha.a)(this,t)},st.a.prototype.divStrict=function(t){return this.throwIfDisposed(),Object($a.b)(this,t)},st.a.prototype.div=function(t){return this.throwIfDisposed(),Object(Fe.a)(this,t)};var Xa=n("Kfzt");st.a.prototype.dot=function(t){return this.throwIfDisposed(),Object(Xa.a)(this,t)};var qa=n("njhW");st.a.prototype.elu=function(){return this.throwIfDisposed(),Object(qa.a)(this)};var Ya=n("8bUJ");st.a.prototype.equalStrict=function(t){return this.throwIfDisposed(),Object(Ya.a)(this,t)},st.a.prototype.equal=function(t){return this.throwIfDisposed(),Object(cr.a)(this,t)};var Qa=n("jgXy");st.a.prototype.erf=function(){return this.throwIfDisposed(),Object(Qa.a)(this)},st.a.prototype.exp=function(){return this.throwIfDisposed(),Object(Ln.a)(this)},st.a.prototype.expandDims=function(t){return this.throwIfDisposed(),Object(Oa.a)(this,t)};var Ja=n("G6IW");st.a.prototype.expm1=function(){return this.throwIfDisposed(),Object(Ja.a)(this)};var Za=n("Grcp");st.a.prototype.fft=function(){return this.throwIfDisposed(),Object(Za.a)(this)},st.a.prototype.flatten=function(){return this.throwIfDisposed(),Object(Ve.a)(this,[this.size])},st.a.prototype.floor=function(){return this.throwIfDisposed(),Object(wr.a)(this)};var to=n("UI8N");st.a.prototype.floorDiv=function(t){return this.throwIfDisposed(),Object(to.a)(this,t)},st.a.prototype.gather=function(t,e){return this.throwIfDisposed(),Object(va.a)(this,t,e)},st.a.prototype.greaterEqualStrict=function(t){return this.throwIfDisposed(),Object(Ya.b)(this,t)},st.a.prototype.greaterEqual=function(t){return this.throwIfDisposed(),Object(pn.a)(this,t)},st.a.prototype.greaterStrict=function(t){return this.throwIfDisposed(),Object(Ya.c)(this,t)},st.a.prototype.greater=function(t){return this.throwIfDisposed(),Object(xr.a)(this,t)};var eo=n("THqV");st.a.prototype.ifft=function(){return this.throwIfDisposed(),Object(eo.a)(this)};var no=n("adw1");st.a.prototype.irfft=function(){return this.throwIfDisposed(),Object(no.a)(this)};var ro=n("/AvP");st.a.prototype.isFinite=function(){return this.throwIfDisposed(),Object(ro.a)(this)};var ao=n("WYAb");st.a.prototype.isInf=function(){return this.throwIfDisposed(),Object(ao.a)(this)};var oo=n("b++O");st.a.prototype.isNaN=function(){return this.throwIfDisposed(),Object(oo.a)(this)};var so=n("bzdD");st.a.prototype.leakyRelu=function(t){return this.throwIfDisposed(),Object(so.a)(this,t)},st.a.prototype.lessEqualStrict=function(t){return this.throwIfDisposed(),Object(Ya.d)(this,t)},st.a.prototype.lessEqual=function(t){return this.throwIfDisposed(),Object(hn.a)(this,t)},st.a.prototype.lessStrict=function(t){return this.throwIfDisposed(),Object(Ya.e)(this,t)},st.a.prototype.less=function(t){return this.throwIfDisposed(),Object(pr.a)(this,t)};var io=n("4QEz");st.a.prototype.localResponseNormalization=function(t,e,n,r){return this.throwIfDisposed(),Object(io.a)(this,t,e,n,r)};var uo=n("wxQM");st.a.prototype.logSigmoid=function(){return this.throwIfDisposed(),Object(uo.a)(this)};var co=n("gErV");st.a.prototype.logSoftmax=function(t){return this.throwIfDisposed(),Object(co.a)(this,t)};var lo=n("r9q9");st.a.prototype.logSumExp=function(t,e){return this.throwIfDisposed(),Object(lo.a)(this,t,e)},st.a.prototype.log=function(){return this.throwIfDisposed(),Object(Tr.a)(this)};var po=n("RrGL");st.a.prototype.log1p=function(){return this.throwIfDisposed(),Object(po.a)(this)},st.a.prototype.logicalAnd=function(t){return this.throwIfDisposed(),Object(fn.a)(this,t)},st.a.prototype.logicalNot=function(){return this.throwIfDisposed(),Object(Wr.a)(this)};var ho=n("8YN0");st.a.prototype.logicalOr=function(t){return this.throwIfDisposed(),Object(ho.a)(this,t)};var fo=n("0l+w");st.a.prototype.logicalXor=function(t){return this.throwIfDisposed(),Object(fo.a)(this,t)},st.a.prototype.matMul=function(t,e,n){return this.throwIfDisposed(),Object(an.a)(this,t,e,n)};var mo=n("n+ZZ");st.a.prototype.maxPool=function(t,e,n,r){return this.throwIfDisposed(),Object(mo.a)(this,t,e,n,r)};var bo=n("wCH+");st.a.prototype.max=function(t,e){return this.throwIfDisposed(),Object(bo.a)(this,t,e)},st.a.prototype.maximumStrict=function(t){return this.throwIfDisposed(),Object($a.c)(this,t)},st.a.prototype.maximum=function(t){return this.throwIfDisposed(),Object(wa.a)(this,t)};var go=n("Ei6o");st.a.prototype.mean=function(t,e){return this.throwIfDisposed(),Object(go.a)(this,t,e)};var yo=n("rm0a");st.a.prototype.min=function(t,e){return this.throwIfDisposed(),Object(yo.a)(this,t,e)},st.a.prototype.minimumStrict=function(t){return this.throwIfDisposed(),Object($a.d)(this,t)};var xo=n("8OX7");st.a.prototype.minimum=function(t){return this.throwIfDisposed(),Object(xo.a)(this,t)};var Oo=n("k9tH");st.a.prototype.mirrorPad=function(t,e){return this.throwIfDisposed(),Object(Oo.a)(this,t,e)},st.a.prototype.modStrict=function(t){return this.throwIfDisposed(),Object($a.e)(this,t)};var vo=n("RhH0");st.a.prototype.mod=function(t){return this.throwIfDisposed(),Object(vo.a)(this,t)},st.a.prototype.mulStrict=function(t){return this.throwIfDisposed(),Object($a.f)(this,t)},st.a.prototype.mul=function(t){return this.throwIfDisposed(),Object(ke.a)(this,t)},st.a.prototype.neg=function(){return this.throwIfDisposed(),Object(De.a)(this)};var wo=n("91d6");st.a.prototype.norm=function(t,e,n){return this.throwIfDisposed(),Object(wo.a)(this,t,e,n)},st.a.prototype.notEqualStrict=function(t){return this.throwIfDisposed(),Object(Ya.f)(this,t)};var jo=n("1N4k");st.a.prototype.notEqual=function(t){return this.throwIfDisposed(),Object(jo.a)(this,t)};var Io=n("4iwy");st.a.prototype.oneHot=function(t,e=1,n=0){return this.throwIfDisposed(),Object(Io.a)(this,t,e,n)};var Co=n("DbV5");st.a.prototype.onesLike=function(){return this.throwIfDisposed(),Object(Co.a)(this)},st.a.prototype.pad=function(t,e){return this.throwIfDisposed(),Object(Jr.a)(this,t,e)};var No=n("6vQL");st.a.prototype.pool=function(t,e,n,r,a){return this.throwIfDisposed(),Object(No.a)(this,t,e,n,r,a)},st.a.prototype.powStrict=function(t){return this.throwIfDisposed(),Object($a.g)(this,t)},st.a.prototype.pow=function(t){return this.throwIfDisposed(),Object(Sr.a)(this,t)};var $o=n("Ug8H");st.a.prototype.prelu=function(t){return this.throwIfDisposed(),Object($o.a)(this,t)};var Eo=n("867m");st.a.prototype.prod=function(t,e){return this.throwIfDisposed(),Object(Eo.a)(this,t,e)};var To=n("tQDl");st.a.prototype.reciprocal=function(){return this.throwIfDisposed(),Object(To.a)(this)};var So=n("kXpR");st.a.prototype.relu=function(){return this.throwIfDisposed(),Object(So.a)(this)};var ko=n("Rqg+");st.a.prototype.relu6=function(){return this.throwIfDisposed(),Object(ko.a)(this)},st.a.prototype.reshapeAs=function(t){return this.throwIfDisposed(),Object(Ve.a)(this,t.shape)},st.a.prototype.reshape=function(t){return this.throwIfDisposed(),Object(Ve.a)(this,t)};var Ro=n("c/ib");st.a.prototype.resizeBilinear=function(t,e){return this.throwIfDisposed(),Object(Ro.a)(this,t,e)};var Ao=n("D4ac");st.a.prototype.resizeNearestNeighbor=function(t,e){return this.throwIfDisposed(),Object(Ao.a)(this,t,e)},st.a.prototype.reverse=function(t){return this.throwIfDisposed(),Object(Br.a)(this,t)};var Fo=n("th0q");st.a.prototype.rfft=function(){return this.throwIfDisposed(),Object(Fo.a)(this)};var Do=n("CKnt");st.a.prototype.round=function(){return this.throwIfDisposed(),Object(Do.a)(this)},st.a.prototype.rsqrt=function(){return this.throwIfDisposed(),Object(Gn.a)(this)};var _o=n("s57M");st.a.prototype.selu=function(){return this.throwIfDisposed(),Object(_o.a)(this)};var Mo=n("EWu9");st.a.prototype.separableConv2d=function(t,e,n,r,a,o){return this.throwIfDisposed(),Object(Mo.a)(this,t,e,n,r,a,o)},st.a.prototype.sigmoid=function(){return this.throwIfDisposed(),Object(ea.a)(this)};var Po=n("Hfat");st.a.prototype.sign=function(){return this.throwIfDisposed(),Object(Po.a)(this)},st.a.prototype.sin=function(){return this.throwIfDisposed(),Object($n.a)(this)},st.a.prototype.sinh=function(){return this.throwIfDisposed(),Object(Tn.a)(this)},st.a.prototype.slice=function(t,e){return this.throwIfDisposed(),Object(Ce.a)(this,t,e)};var Bo=n("X4fa");st.a.prototype.softmax=function(t){return this.throwIfDisposed(),Object(Bo.a)(this,t)};var Lo=n("n/2y");st.a.prototype.softplus=function(){return this.throwIfDisposed(),Object(Lo.a)(this)},st.a.prototype.spaceToBatchND=function(t,e){return this.throwIfDisposed(),Object(sn.a)(this,t,e)},st.a.prototype.split=function(t,e){return this.throwIfDisposed(),Object(gn.a)(this,t,e)},st.a.prototype.sqrt=function(){return this.throwIfDisposed(),Object(_e.a)(this)},st.a.prototype.square=function(){return this.throwIfDisposed(),Object(Me.a)(this)};var Vo=n("QYQ3");st.a.prototype.squaredDifference=function(t){return this.throwIfDisposed(),Object(Vo.a)(this,t)},st.a.prototype.squaredDifferenceStrict=function(t){return this.throwIfDisposed(),Object($a.h)(this,t)};var zo=n("0fRV");st.a.prototype.squeeze=function(t){return this.throwIfDisposed(),Object(zo.a)(this,t)},st.a.prototype.stack=function(t,e){this.throwIfDisposed();const n=t instanceof st.a?[this,t]:[this,...t];return Object(ya.a)(n,e)},st.a.prototype.step=function(t){return this.throwIfDisposed(),Object(Re.a)(this,t)};var Wo=n("3hph");st.a.prototype.stridedSlice=function(t,e,n,r,a,o,s,i){return this.throwIfDisposed(),Object(Wo.a)(this,t,e,n,r,a,o,s,i)},st.a.prototype.subStrict=function(t){return this.throwIfDisposed(),Object($a.i)(this,t)},st.a.prototype.sub=function(t){return this.throwIfDisposed(),Object(Pe.a)(this,t)},st.a.prototype.sum=function(t,e){return this.throwIfDisposed(),Object(ze.a)(this,t,e)};var Uo=n("0wrZ");st.a.prototype.tan=function(){return this.throwIfDisposed(),Object(Uo.a)(this)};var Ko=n("iIjY");st.a.prototype.tanh=function(){return this.throwIfDisposed(),Object(Ko.a)(this)},st.a.prototype.tile=function(t){return this.throwIfDisposed(),Object(Hn.a)(this,t)},st.a.prototype.toBool=function(){return this.throwIfDisposed(),Object(rt.a)(this,"bool")},st.a.prototype.toFloat=function(){return this.throwIfDisposed(),Object(rt.a)(this,"float32")},st.a.prototype.toInt=function(){return this.throwIfDisposed(),Object(rt.a)(this,"int32")};var Go=n("VhY8");st.a.prototype.topk=function(t,e){return this.throwIfDisposed(),Object(Go.a)(this,t,e)},st.a.prototype.transpose=function(t){return this.throwIfDisposed(),Object(Rn.a)(this,t)};var Ho=n("hT5K");st.a.prototype.unique=function(t){return this.throwIfDisposed(),Object(Ho.a)(this,t)},st.a.prototype.unsortedSegmentSum=function(t,e){return this.throwIfDisposed(),Object(qn.a)(this,t,e)};var Xo=n("OkRW");st.a.prototype.unstack=function(t){return this.throwIfDisposed(),Object(Xo.a)(this,t)},st.a.prototype.where=function(t,e){return this.throwIfDisposed(),Object(mn.a)(t,this,e)},st.a.prototype.zerosLike=function(){return this.throwIfDisposed(),Object(Ke.a)(this)}},"/7N0":function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("VO80");const i=Object(s.a)({sigmoid_:function(t){const e=Object(o.a)(t,"x","sigmoid");return r.a.runKernelFunc((t,n)=>{const r=t.sigmoid(e);return n([r]),r},{x:e},null,a.rc)}})},"/AvP":function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("VO80");const i=Object(s.a)({isFinite_:function(t){const e=Object(o.a)(t,"x","isFinite");return r.a.runKernelFunc(t=>t.isFinite(e),{x:e},null,a.ob)}})},"0+74":function(t,e,n){"use strict";n.r(e),n.d(e,"segOpComputeOptimalWindowSize",(function(){return o})),n.d(e,"computeOutShape",(function(){return s})),n.d(e,"collectGatherOpShapeInfo",(function(){return i}));var r=n("atXS"),a=n("9jvw");function o(t,e){let n,o=!1;for(t<=a.a?(n=t,o=!0):n=Object(r.G)(t,Math.floor(Math.sqrt(t)));!o;)n>e||n===t?o=!0:n=Object(r.G)(t,n+1);return n}function s(t,e,n){const r=[],a=t.length;for(let o=0;o<a;o++)r.push(o!==e?t[o]:n);return r}function i(t,e,n){const r=t.shape[n],a=[];let o=1,s=1;for(let i=0;i<n;i++)a.push(t.shape[i]),o*=t.shape[i];for(let i=0;i<e.rank;i++)a.push(e.shape[i]);for(let i=n+1;i<t.rank;i++)a.push(t.shape[i]),s*=t.shape[i];return{batchSize:o,sliceSize:s,dimSize:r,outputShape:a}}},"02mo":function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("VO80");const i=Object(s.a)({floor_:function(t){const e=Object(o.a)(t,"x","floor");return r.a.runKernelFunc(t=>t.floor(e),{x:e},null,a.bb)}})},"0I63":function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("atXS"),i=n("8Km0"),u=n("VO80"),c=n("NclT");const l=Object(u.a)({reverse_:function(t,e){const n=Object(o.a)(t,"x","reverse");return r.a.runKernelFunc(t=>{const r=Object(s.I)(e,n.shape);if(0===n.rank)return Object(i.a)(n);const a=t.reverse(n,r);return Object(c.a)(a,n.shape)},{x:n},null,a.kc,{dims:e})}})},"0ahe":function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("VO80");const i=Object(s.a)({atanh_:function(t){const e=Object(o.a)(t,"x","atanh");return r.a.runKernelFunc((t,n)=>{const r=t.atanh(e);return n([e]),r},{x:e},null,a.n)}})},"0fRV":function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("o/e8"),a=n("atXS"),o=n("VO80"),s=n("NclT");const i=Object(o.a)({squeeze_:function(t,e){const n=Object(r.a)(t,"x","squeeze");return Object(s.a)(n,Object(a.P)(n.shape,e).newShape)}})},"0l+w":function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("o/e8"),a=n("Um8L"),o=n("4zPZ"),s=n("7wDt"),i=n("8YN0"),u=n("VO80");const c=Object(u.a)({logicalXor_:function(t,e){const n=Object(r.a)(t,"a","logicalXor","bool"),u=Object(r.a)(e,"b","logicalXor","bool");return Object(a.a)(n.shape,u.shape),Object(o.a)(Object(i.a)(t,e),Object(s.a)(Object(o.a)(t,e)))}})},"0wrZ":function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("VO80");const i=Object(s.a)({tan_:function(t){const e=Object(o.a)(t,"x","tan");return r.a.runKernelFunc((t,n)=>{const r=t.tan(e);return n([e]),r},{x:e},null,a.Ic)}})},"17CO":function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("VO80");const i=Object(s.a)({real_:function(t){const e=Object(o.a)(t,"input","real");return r.a.runKernelFunc(t=>t.real(e),{input:e},null,a.bc)}})},"1N4k":function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),o=n("dsKV"),s=n("o/e8"),i=n("Um8L"),u=n("VO80");const c=Object(u.a)({notEqual_:function(t,e){let n=Object(s.a)(t,"a","notEqual"),u=Object(s.a)(e,"b","notEqual");return[n,u]=Object(o.b)(n,u),Object(i.a)(n.shape,u.shape),r.a.runKernelFunc(t=>t.notEqual(n,u),{a:n,b:u},null,a.Tb)}})},"1OSX":function(t,e,n){"use strict";n.d(e,"a",(function(){return a})),n.d(e,"b",(function(){return o}));var r=n("YSVl");n("1WXW");class a{constructor(t,e,n,a,o){this.mean=t,this.stdDev=e,this.dtype=n,this.nextVal=NaN,this.truncated=a,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const s=o||Math.random();this.random=r.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){const t=this.nextVal;return this.nextVal=NaN,t}let t,e,n=!1;for(;!n;){let r,a,o;do{r=2*this.random()-1,a=2*this.random()-1,o=r*r+a*a}while(o>=1||0===o);const s=Math.sqrt(-2*Math.log(o)/o);t=this.mean+this.stdDev*r*s,e=this.mean+this.stdDev*a*s,this.truncated&&!this.isValidTruncated(t)||(n=!0)}return this.truncated&&!this.isValidTruncated(e)||(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return null==this.dtype||"float32"===this.dtype?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class o{constructor(t=0,e=1,n,a){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=t,this.range=e-t,this.dtype=n,null==a&&(a=Math.random()),"number"==typeof a&&(a=a.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=r.alea(a)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}},"1U0N":function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("o/e8"),a=n("atXS"),o=n("ZJ6U"),s=n("2ugP"),i=n("VO80");const u=Object(i.a)({stack_:function(t,e=0){const n=Object(r.b)(t,"tensors","stack");if(a.b(n.length>=1,()=>"Pass at least one tensor to tf.stack"),1===n.length)return Object(s.a)(n[0],e);const i=n[0].shape,u=n[0].dtype;a.b(e<=n[0].rank,()=>"Axis must be <= rank of the tensor"),n.forEach(t=>{a.e(i,t.shape,"All tensors passed to stack must have matching shapes"),a.b(u===t.dtype,()=>"All tensors passed to stack must have matching dtypes")});const c=n.map(t=>Object(s.a)(t,e));return Object(o.a)(c,e)}})},"1WXW":function(t,e,n){"use strict";n.d(e,"b",(function(){return a})),n.d(e,"a",(function(){return o}));var r=n("auKK");function a(){return 32===r.a.backend.floatPrecision()?.001:.1}function o(t,e,n){if(null==n&&(n=a()),!function(t,e,n){return!isFinite(t)&&!isFinite(e)||!(isNaN(t)||isNaN(e)||Math.abs(t-e)>n)}(t,e,n))throw new Error(`Numbers differ: actual === ${t}, expected === ${e}`)}n("o/e8"),n("atXS")},"20lx":function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("atXS"),i=n("NuWS"),u=n("VO80"),c=n("yRKQ");const l=Object(u.a)({argMin_:function(t,e=0){let n=Object(o.a)(t,"x","argMin");return r.a.runKernelFunc((t,r)=>{r([n]),null==e&&(e=0);let a=s.I(e,n.shape);const o=i.f(a,n.rank);return null!=o&&(n=Object(c.a)(n,o),a=i.g(a.length,n.rank)),t.argMin(n,a[0])},{x:n},null,a.i,{axis:e})}})},"2ugP":function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("o/e8"),a=n("atXS"),o=n("VO80"),s=n("NclT");const i=Object(o.a)({expandDims_:function(t,e=0){const n=Object(r.a)(t,"x","expandDims",null);a.b(e<=n.rank,()=>"Axis must be <= rank of the tensor");const o=n.shape.slice();return e<0&&(a.b(-(n.rank+1)<=e,()=>`Axis must be in the interval [${-(n.rank+1)}, ${n.rank}]`),e=n.rank+e+1),o.splice(e,0,1),Object(s.a)(n,o)}})},"34HJ":function(t,e,n){"use strict";n.d(e,"a",(function(){return d}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("atXS"),i=n("NuWS"),u=n("VO80"),c=n("NclT"),l=n("yRKQ");const d=Object(u.a)({all_:function(t,e=null,n=!1){let u=Object(o.a)(t,"x","all","bool");return r.a.runKernelFunc(t=>{const r=Object(s.I)(e,u.shape);let a=r;const o=Object(i.f)(a,u.rank);null!=o&&(u=Object(l.a)(u,o),a=Object(i.g)(a.length,u.rank));const d=t.all(u,a);if(n){const t=Object(i.e)(d.shape,r);return Object(c.a)(d,t)}return d},{x:u},null,a.f,{axis:e,keepDims:n})}})},"3FnS":function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("VO80");const i=Object(s.a)({asinh_:function(t){const e=Object(o.a)(t,"x","asinh");return r.a.runKernelFunc((t,n)=>{const r=t.asinh(e);return n([e]),r},{x:e},null,a.k)}})},"3X4V":function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("atXS"),i=n("uBja"),u=n("VO80"),c=n("NclT");const l=Object(u.a)({conv2d_:function(t,e,n,u,l="NHWC",d=[1,1],p){const h=Object(o.a)(t,"x","conv2d"),f=Object(o.a)(e,"filter","conv2d");let m=h,b=!1;3===h.rank&&(b=!0,m=Object(c.a)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),s.b(4===m.rank,()=>`Error in conv2d: input must be rank 4, but got rank ${m.rank}.`),s.b(4===f.rank,()=>"Error in conv2d: filter must be rank 4, but got rank "+f.rank+"."),null!=p&&s.b(s.v(u),()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${p} but got pad ${u}.`);const g="NHWC"===l?m.shape[3]:m.shape[1];s.b(g===f.shape[2],()=>`Error in conv2d: depth of input (${g}) must match input depth for filter ${f.shape[2]}.`),s.b(i.h(n,d),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${d}'`);const y=r.a.runKernelFunc((t,e)=>{const r=i.g(l),a=i.a(m.shape,f.shape,n,d,u,p,!1,r),o=t.conv2d(m,f,a);return e([m,f]),o},{x:m,filter:f},null,a.A,{strides:n,pad:u,dataFormat:l,dilations:d,dimRoundingMode:p});return b?Object(c.a)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},"3hph":function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("VO80"),i=n("NclT"),u=n("bTzI"),c=n("Xr0w");const l=Object(s.a)({stridedSlice_:function(t,e,n,s,l=0,d=0,p=0,h=0,f=0){let m=Object(o.a)(t,"x","stridedSlice");return r.a.runKernelFunc(t=>{null==s&&(s=new Array(e.length));const r=Object(c.maskToAxes)(p);if(r.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==p&&0!==h)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==p&&0!==f)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const a=m.rank-e.length,o=Object(c.maskToAxes)(h),b=m.shape.slice();o.forEach(t=>{e[t]=0,n[t]=1,b.splice(t,0,1)}),m=Object(i.a)(m,b);const{begin:g,end:y,strides:x}=Object(c.getNormalizedAxes)(m.shape,r,a,e,n,s,l,d,p);e=g,n=y,s=x;const O=Object(c.maskToAxes)(f);O.forEach(t=>{n[t]=e[t]+1,s[t]=1});const v=Object(c.computeOutShape)(e,n,s),w=v.filter((t,e)=>-1===O.indexOf(e));if(s.every(t=>1===t))return Object(i.a)(Object(u.a)(m,e,v),w);const j=t.stridedSlice(m,e,n,s);return Object(i.a)(j,w)},{x:m},null,a.Fc,{begin:e,end:n,strides:s,beginMask:l,endMask:d,ellipsisMask:p,newAxisMask:h,shrinkAxisMask:f})}})},"3rNm":function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("atXS"),i=n("VO80");const u=Object(i.a)({cast_:function(t,e){const n=Object(o.a)(t,"x","cast");if(!s.B(e))throw new Error("Failed to cast to unknown dtype "+e);if("string"===e&&"string"!==n.dtype||"string"!==e&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");return r.a.runKernelFunc(t=>t.cast(n,e),{x:n},null,a.v,{dtype:e})}})},"4FMF":function(t,e,n){"use strict";n.d(e,"a",(function(){return p}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("atXS"),i=n("NuWS"),u=n("3rNm"),c=n("VO80"),l=n("NclT"),d=n("yRKQ");const p=Object(c.a)({sum_:function(t,e=null,n=!1){let c=Object(o.a)(t,"x","sum");return"bool"===c.dtype&&(c=Object(u.a)(c,"int32")),r.a.runKernelFunc((t,r)=>{r([c]);const a=Object(s.I)(e,c.shape),o=Object(i.f)(a,c.rank);let u=a,p=c;null!=o&&(p=Object(d.a)(c,o),u=Object(i.g)(u.length,c.rank));let h=t.sum(p,u);if(n){const t=Object(i.e)(h.shape,a);h=Object(l.a)(h,t)}return h},{x:c},null,a.Hc,{axis:e,keepDims:n})}})},"4QEz":function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("atXS"),i=n("VO80"),u=n("NclT");const c=Object(i.a)({localResponseNormalization_:function(t,e=5,n=1,i=1,c=.5){const l=Object(o.a)(t,"x","localResponseNormalization");s.b(4===l.rank||3===l.rank,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${l.rank}.`),s.b(s.v(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let d=l,p=!1;3===l.rank&&(p=!0,d=Object(u.a)(l,[1,l.shape[0],l.shape[1],l.shape[2]]));const h=r.a.runKernelFunc((t,r)=>{const a=t.localResponseNormalization4D(d,e,n,i,c);return r([d,a]),a},{x:d},null,a.rb,{depthRadius:e,bias:n,alpha:i,beta:c});return p?Object(u.a)(h,[h.shape[1],h.shape[2],h.shape[3]]):h}})},"4f3O":function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),o=n("dsKV"),s=n("o/e8"),i=n("Um8L"),u=n("VO80");const c=Object(u.a)({less_:function(t,e){let n=Object(s.a)(t,"a","less"),u=Object(s.a)(e,"b","less");return[n,u]=Object(o.b)(n,u),Object(i.a)(n.shape,u.shape),r.a.runKernelFunc(t=>t.less(n,u),{a:n,b:u},null,a.tb)}})},"4iwy":function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("VO80"),i=n("NclT");const u=Object(s.a)({oneHot_:function(t,e,n=1,s=0){if(e<2)throw new Error("Error in oneHot: depth must be >=2, but it is "+e);const u=Object(o.a)(t,"indices","oneHot","int32"),c=[...u.shape,e];return r.a.runKernelFunc((t,r)=>(r([u]),Object(i.a)(t.oneHot(Object(i.a)(u,[u.size]),e,n,s),c)),{indices:u},null,a.Ub,{depth:e,onValue:n,offValue:s})}})},"4zPZ":function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("Um8L"),i=n("VO80");const u=Object(i.a)({logicalAnd_:function(t,e){const n=Object(o.a)(t,"a","logicalAnd","bool"),i=Object(o.a)(e,"b","logicalAnd","bool");return Object(s.a)(n.shape,i.shape),r.a.runKernelFunc(t=>t.logicalAnd(n,i),{a:n,b:i},null,a.zb)}})},6366:function(t,e,n){"use strict";n.r(e),n.d(e,"createScalarValue",(function(){return o})),n.d(e,"toTypedArray",(function(){return s})),n.d(e,"now",(function(){return i})),n.d(e,"fetch",(function(){return u})),n.d(e,"encodeString",(function(){return c})),n.d(e,"decodeString",(function(){return l}));var r=n("szMd"),a=n("atXS");function o(t,e){return"string"===e?c(t):s([t],e)}function s(t,e){if("string"===e)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(t)&&(t=a.m(t)),Object(r.b)().getBool("DEBUG")&&a.h(t,e),function(t,e){return t instanceof Float32Array&&"float32"===e||t instanceof Int32Array&&"int32"===e||t instanceof Uint8Array&&"bool"===e}(t,e))return t;if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e){const e=new Uint8Array(t.length);for(let n=0;n<e.length;++n)0!==Math.round(t[n])&&(e[n]=1);return e}throw new Error("Unknown data type "+e)}function i(){return Object(r.b)().platform.now()}function u(t,e){return Object(r.b)().platform.fetch(t,e)}function c(t,e="utf-8"){return e=e||"utf-8",Object(r.b)().platform.encode(t,e)}function l(t,e="utf-8"){return e=e||"utf-8",Object(r.b)().platform.decode(t,e)}n.d(e,"shuffle",(function(){return a.M})),n.d(e,"clamp",(function(){return a.i})),n.d(e,"nearestLargerEven",(function(){return a.H})),n.d(e,"sum",(function(){return a.Q})),n.d(e,"randUniform",(function(){return a.J})),n.d(e,"distSquared",(function(){return a.l})),n.d(e,"assert",(function(){return a.b})),n.d(e,"assertShapesMatch",(function(){return a.e})),n.d(e,"assertNonNull",(function(){return a.d})),n.d(e,"flatten",(function(){return a.m})),n.d(e,"sizeFromShape",(function(){return a.N})),n.d(e,"isScalarShape",(function(){return a.y})),n.d(e,"arraysEqual",(function(){return a.a})),n.d(e,"isInt",(function(){return a.v})),n.d(e,"tanh",(function(){return a.R})),n.d(e,"sizeToSquarishShape",(function(){return a.O})),n.d(e,"createShuffledIndices",(function(){return a.k})),n.d(e,"rightPad",(function(){return a.L})),n.d(e,"repeatedTry",(function(){return a.K})),n.d(e,"inferFromImplicitShape",(function(){return a.s})),n.d(e,"parseAxisParam",(function(){return a.I})),n.d(e,"squeezeShape",(function(){return a.P})),n.d(e,"getTypedArrayFromDType",(function(){return a.o})),n.d(e,"getArrayFromDType",(function(){return a.n})),n.d(e,"checkConversionForErrors",(function(){return a.h})),n.d(e,"isValidDtype",(function(){return a.B})),n.d(e,"hasEncodingLoss",(function(){return a.p})),n.d(e,"isTypedArray",(function(){return a.A})),n.d(e,"bytesPerElement",(function(){return a.g})),n.d(e,"bytesFromStringArray",(function(){return a.f})),n.d(e,"isString",(function(){return a.z})),n.d(e,"isBoolean",(function(){return a.t})),n.d(e,"isNumber",(function(){return a.w})),n.d(e,"inferDtype",(function(){return a.r})),n.d(e,"isFunction",(function(){return a.u})),n.d(e,"nearestDivisor",(function(){return a.G})),n.d(e,"computeStrides",(function(){return a.j})),n.d(e,"toNestedArray",(function(){return a.S})),n.d(e,"makeOnesTypedArray",(function(){return a.D})),n.d(e,"makeZerosTypedArray",(function(){return a.F})),n.d(e,"makeZerosNestedTypedArray",(function(){return a.E})),n.d(e,"assertNonNegativeIntegerDimensions",(function(){return a.c})),n.d(e,"locToIndex",(function(){return a.C})),n.d(e,"indexToLoc",(function(){return a.q})),n.d(e,"isPromise",(function(){return a.x}))},"6J+n":function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("atXS"),i=n("NuWS"),u=n("VO80"),c=n("yRKQ");const l=Object(u.a)({argMax_:function(t,e=0){let n=Object(o.a)(t,"x","argMax");return r.a.runKernelFunc((t,r)=>{r([n]);let a=s.I(e,n.shape);const o=i.f(a,n.rank);return null!=o&&(n=Object(c.a)(n,o),a=i.g(a.length,n.rank)),t.argMax(n,a[0])},{x:n},null,a.h,{axis:e})}})},"6vQL":function(t,e,n){"use strict";n.d(e,"a",(function(){return p}));var r=n("o/e8"),a=n("atXS"),o=n("l0gX"),s=n("OygE"),i=n("uBja"),u=n("n+ZZ"),c=n("VO80"),l=n("NclT"),d=n("dYAU");const p=Object(c.a)({pool_:function(t,e,n,c,p,h){null==p&&(p=[1,1]),null==h&&(h=1),0===c&&(c="valid");const f=Object(r.a)(t,"x","maxPool");let m=f,b=!1;3===f.rank&&(b=!0,m=Object(l.a)(f,[1,f.shape[0],f.shape[1],f.shape[2]])),a.b(i.h(h,p),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${h} and dilations '${p}'`);const g=i.e(m.shape,e,h,p,c),y=[g.dilationHeight,g.dilationWidth];let x;x="same"===c?function(t,e){const n=t.map((t,n)=>t+(t-1)*(e[n]-1)).map(t=>t-1),r=n.map(t=>Math.floor(t/2)),a=n.map((t,e)=>t-r[e]);return n.map((t,e)=>[r[e],a[e]])}([g.filterHeight,g.filterWidth],y):[[0,0],[0,0]];const O=1===y[0]&&1===y[1],[v,w]=function(t,e,n){const r=n.map(t=>t[0]),a=n.map(t=>t[1]),o=t.concat(r,a),s=e.map((t,e)=>(t-o[e]%t)%t),i=a.map((t,e)=>t+s[e]);return[e.map((t,e)=>[r[e],i[e]]),e.map((t,e)=>[0,s[e]])]}([g.inHeight,g.inWidth],y,x),j=O?c:"valid",I=O?m:Object(d.a)(m,y,v),C=("avg"===n?()=>Object(o.a)(I,e,h,j):()=>Object(u.a)(I,e,h,j))(),N=O?C:Object(s.a)(C,y,w);return b?Object(l.a)(N,[N.shape[1],N.shape[2],N.shape[3]]):N}})},7:function(t,e){},"7/dO":function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("VO80");const i=Object(s.a)({cos_:function(t){const e=Object(o.a)(t,"x","cos");return r.a.runKernelFunc((t,n)=>{const r=t.cos(e);return n([e]),r},{x:e},null,a.G)}})},"7n2I":function(t,e,n){"use strict";n.r(e),n.d(e,"version_webgl",(function(){return Fr})),n.d(e,"MathBackendWebGL",(function(){return Ar})),n.d(e,"setWebGLContext",(function(){return c})),n.d(e,"GPGPUContext",(function(){return Cn})),n.d(e,"gpgpu_util",(function(){return o})),n.d(e,"webgl_util",(function(){return r})),n.d(e,"forceHalfFloat",(function(){return Dr})),n.d(e,"webgl",(function(){return _r}));var r={};n.r(r),n.d(r,"callAndCheck",(function(){return y})),n.d(r,"canBeRepresented",(function(){return x})),n.d(r,"getWebGLErrorMessage",(function(){return O})),n.d(r,"getExtensionOrThrow",(function(){return v})),n.d(r,"createVertexShader",(function(){return w})),n.d(r,"createFragmentShader",(function(){return j})),n.d(r,"createProgram",(function(){return C})),n.d(r,"linkProgram",(function(){return N})),n.d(r,"validateProgram",(function(){return $})),n.d(r,"createStaticVertexBuffer",(function(){return E})),n.d(r,"createStaticIndexBuffer",(function(){return T})),n.d(r,"getNumChannels",(function(){return S})),n.d(r,"createTexture",(function(){return k})),n.d(r,"validateTextureSize",(function(){return R})),n.d(r,"createFramebuffer",(function(){return A})),n.d(r,"bindVertexBufferToProgramAttribute",(function(){return F})),n.d(r,"bindTextureUnit",(function(){return D})),n.d(r,"unbindTextureUnit",(function(){return _})),n.d(r,"getProgramUniformLocationOrThrow",(function(){return M})),n.d(r,"getProgramUniformLocation",(function(){return P})),n.d(r,"bindTextureToProgramUniformSampler",(function(){return B})),n.d(r,"bindCanvasToFramebuffer",(function(){return L})),n.d(r,"bindColorTextureToFramebuffer",(function(){return V})),n.d(r,"unbindColorTextureFromFramebuffer",(function(){return z})),n.d(r,"validateFramebuffer",(function(){return W})),n.d(r,"getFramebufferErrorMessage",(function(){return U})),n.d(r,"getBatchDim",(function(){return H})),n.d(r,"getRowsCols",(function(){return X})),n.d(r,"getShapeAs3D",(function(){return q})),n.d(r,"getTextureShapeFromLogicalShape",(function(){return Y})),n.d(r,"isReshapeFree",(function(){return J})),n.d(r,"getWebGLMaxTextureSize",(function(){return et})),n.d(r,"resetMaxTextureSize",(function(){return nt})),n.d(r,"resetMaxTexturesInShader",(function(){return rt})),n.d(r,"getMaxTexturesInShader",(function(){return at})),n.d(r,"getWebGLDisjointQueryTimerVersion",(function(){return ot})),n.d(r,"hasExtension",(function(){return st})),n.d(r,"isWebGLVersionEnabled",(function(){return it})),n.d(r,"isCapableOfRenderingToFloatTexture",(function(){return ut})),n.d(r,"isDownloadFloatTextureEnabled",(function(){return ct})),n.d(r,"isWebGLFenceEnabled",(function(){return dt})),n.d(r,"assertNotComplex",(function(){return pt}));var a={};n.r(a),n.d(a,"simpleAbsImpl",(function(){return ft})),n.d(a,"addImpl",(function(){return wt})),n.d(a,"ceilImpl",(function(){return Nt})),n.d(a,"expImpl",(function(){return $t})),n.d(a,"expm1Impl",(function(){return Et})),n.d(a,"floorImpl",(function(){return Tt})),n.d(a,"logImpl",(function(){return St})),n.d(a,"maxImpl",(function(){return kt})),n.d(a,"multiplyImpl",(function(){return Rt})),n.d(a,"notEqualImpl",(function(){return Ft})),n.d(a,"rsqrtImpl",(function(){return Dt})),n.d(a,"sliceImpl",(function(){return _t})),n.d(a,"squaredDifferenceImpl",(function(){return Mt})),n.d(a,"subImpl",(function(){return Pt})),n.d(a,"transposeImpl",(function(){return Lt})),n.d(a,"uniqueImpl",(function(){return Vt}));var o={};n.r(o),n.d(o,"createVertexShader",(function(){return nn})),n.d(o,"createVertexBuffer",(function(){return rn})),n.d(o,"createIndexBuffer",(function(){return an})),n.d(o,"getInternalFormatForFloat32MatrixTexture",(function(){return sn})),n.d(o,"createFloat32MatrixTexture",(function(){return un})),n.d(o,"getInternalFormatForFloat16MatrixTexture",(function(){return cn})),n.d(o,"createFloat16MatrixTexture",(function(){return ln})),n.d(o,"getInternalFormatForUnsignedBytesMatrixTexture",(function(){return dn})),n.d(o,"createUnsignedBytesMatrixTexture",(function(){return pn})),n.d(o,"getInternalFormatForPackedMatrixTexture",(function(){return hn})),n.d(o,"createPackedMatrixTexture",(function(){return fn})),n.d(o,"getInternalFormatForFloat16PackedMatrixTexture",(function(){return mn})),n.d(o,"createFloat16PackedMatrixTexture",(function(){return bn})),n.d(o,"bindVertexProgramAttributeStreams",(function(){return gn})),n.d(o,"uploadDenseMatrixToTexture",(function(){return yn})),n.d(o,"uploadPixelDataToTexture",(function(){return xn})),n.d(o,"createBufferFromOutputTexture",(function(){return On})),n.d(o,"downloadFloat32MatrixFromBuffer",(function(){return vn})),n.d(o,"downloadByteEncodedFloatMatrixFromOutputTexture",(function(){return wn})),n.d(o,"downloadPackedMatrixFromBuffer",(function(){return jn})),n.d(o,"downloadMatrixFromPackedOutputTexture",(function(){return In}));var s=n("+hG3");const i={},u={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function c(t,e){i[t]=e}function l(t){if(!(t in i)){const e=function(t){if(1!==t&&2!==t)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const e=function(t){if("undefined"!=typeof OffscreenCanvas&&2===t)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(t);return e.addEventListener("webglcontextlost",e=>{e.preventDefault(),delete i[t]},!1),1===t?e.getContext("webgl",u)||e.getContext("experimental-webgl",u):e.getContext("webgl2",u)}(t);if(null===e)return console.log("Could not get context for WebGL version",t),null;i[t]=e}const e=i[t];return e.isContextLost()?(delete i[t],l(t)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),i[t])}var d,p,h;function f(t,e){return[e,t]}function m(t){const e=s.Ib.sizeFromShape(t),n=Math.ceil(e/4);return s.Ib.sizeToSquarishShape(n)}function b(t,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(t/2))]}function g(t,e){const n=t;let r,a,o,i,u,c,l,d,p,h;return 2===Object(s.hb)().getNumber("WEBGL_VERSION")?(r=n.R32F,a=n.R16F,o=n.RGBA16F,i=n.RGBA32F,u=n.RED,l=4,d=1,p=n.HALF_FLOAT,h=n.FLOAT):(r=t.RGBA,a=t.RGBA,o=t.RGBA,i=n.RGBA,u=t.RGBA,l=4,d=4,p=null!=e?e.HALF_FLOAT_OES:null,h=t.FLOAT),c=t.RGBA,{internalFormatFloat:r,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:o,internalFormatPackedFloat:i,textureFormatFloat:u,downloadTextureFormat:c,downloadUnpackNumChannels:l,defaultNumChannels:d,textureTypeHalfFloat:p,textureTypeFloat:h}}function y(t,e){const n=e();return Object(s.hb)().getBool("DEBUG")&&function(t){const e=t.getError();if(e!==t.NO_ERROR)throw new Error("WebGL Error: "+O(t,e))}(t),n}function x(t){return!!(Object(s.hb)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===t||5.96e-8<Math.abs(t)&&Math.abs(t)<65504)}function O(t,e){switch(e){case t.NO_ERROR:return"NO_ERROR";case t.INVALID_ENUM:return"INVALID_ENUM";case t.INVALID_VALUE:return"INVALID_VALUE";case t.INVALID_OPERATION:return"INVALID_OPERATION";case t.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case t.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case t.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return"Unknown error code "+e}}function v(t,e){return K(t,()=>t.getExtension(e),'Extension "'+e+'" not supported on this browser.')}function w(t,e){const n=K(t,()=>t.createShader(t.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(y(t,()=>t.shaderSource(n,e)),y(t,()=>t.compileShader(n)),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw console.log(t.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function j(t,e){const n=K(t,()=>t.createShader(t.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(y(t,()=>t.shaderSource(n,e)),y(t,()=>t.compileShader(n)),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw function(t,e){const n=I.exec(e);if(null==n)return console.log("Couldn't parse line number in error: "+e),void console.log(t);const r=+n[1],a=t.split("\n"),o=a.length.toString().length+2,i=a.map((t,e)=>s.Ib.rightPad((e+1).toString(),o)+t);let u=0;for(let s=0;s<i.length;s++)u=Math.max(i[s].length,u);const c=i.slice(0,r-1),l=i.slice(r-1,r),d=i.slice(r);console.log(c.join("\n")),console.log(e.split("\n")[0]),console.log("%c "+s.Ib.rightPad(l[0],u),"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(d.join("\n"))}(e,t.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}!function(t){t[t.DENSE=0]="DENSE",t[t.SHARED_BATCH=1]="SHARED_BATCH"}(d||(d={})),function(t){t[t.RENDER=0]="RENDER",t[t.UPLOAD=1]="UPLOAD",t[t.PIXELS=2]="PIXELS",t[t.DOWNLOAD=3]="DOWNLOAD"}(p||(p={})),function(t){t[t.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",t[t.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",t[t.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",t[t.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",t[t.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(h||(h={}));const I=/ERROR: [0-9]+:([0-9]+):/g;function C(t){return K(t,()=>t.createProgram(),"Unable to create WebGLProgram.")}function N(t,e){if(y(t,()=>t.linkProgram(e)),!1===t.getProgramParameter(e,t.LINK_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}function $(t,e){if(y(t,()=>t.validateProgram(e)),!1===t.getProgramParameter(e,t.VALIDATE_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function E(t,e){const n=K(t,()=>t.createBuffer(),"Unable to create WebGLBuffer");return y(t,()=>t.bindBuffer(t.ARRAY_BUFFER,n)),y(t,()=>t.bufferData(t.ARRAY_BUFFER,e,t.STATIC_DRAW)),n}function T(t,e){const n=K(t,()=>t.createBuffer(),"Unable to create WebGLBuffer");return y(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n)),y(t,()=>t.bufferData(t.ELEMENT_ARRAY_BUFFER,e,t.STATIC_DRAW)),n}function S(){return 2===Object(s.hb)().getNumber("WEBGL_VERSION")?1:4}function k(t){return K(t,()=>t.createTexture(),"Unable to create WebGLTexture.")}function R(t,e){const n=Object(s.hb)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t<=0||e<=0)throw new Error(`Requested texture size [${t}x${e}] is invalid.`);if(t>n||e>n)throw new Error(`Requested texture size [${t}x${e}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}function A(t){return K(t,()=>t.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function F(t,e,n,r,a,o,s){const i=t.getAttribLocation(e,n);return-1!==i&&(y(t,()=>t.bindBuffer(t.ARRAY_BUFFER,r)),y(t,()=>t.vertexAttribPointer(i,a,t.FLOAT,!1,o,s)),y(t,()=>t.enableVertexAttribArray(i)),!0)}function D(t,e,n){G(t,n),y(t,()=>t.activeTexture(t.TEXTURE0+n)),y(t,()=>t.bindTexture(t.TEXTURE_2D,e))}function _(t,e){G(t,e),y(t,()=>t.activeTexture(t.TEXTURE0+e)),y(t,()=>t.bindTexture(t.TEXTURE_2D,null))}function M(t,e,n){return K(t,()=>t.getUniformLocation(e,n),'uniform "'+n+'" not present in program.')}function P(t,e,n){return t.getUniformLocation(e,n)}function B(t,e,n,r){y(t,()=>D(t,e,r)),y(t,()=>t.uniform1i(n,r))}function L(t){y(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,null)),y(t,()=>t.viewport(0,0,t.canvas.width,t.canvas.height)),y(t,()=>t.scissor(0,0,t.canvas.width,t.canvas.height))}function V(t,e,n){y(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,n)),y(t,()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,e,0))}function z(t,e){y(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,e)),y(t,()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,null,0))}function W(t){const e=t.checkFramebufferStatus(t.FRAMEBUFFER);if(e!==t.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+U(t,e))}function U(t,e){switch(e){case t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case t.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return"unknown error "+e}}function K(t,e,n){const r=y(t,()=>e());if(null==r)throw new Error(n);return r}function G(t,e){const n=t.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=e+t.TEXTURE0;if(r<t.TEXTURE0||r>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)}function H(t,e=2){return s.Ib.sizeFromShape(t.slice(0,t.length-e))}function X(t){if(0===t.length)throw Error("Cannot get rows and columns of an empty shape array.");return[t.length>1?t[t.length-2]:1,t[t.length-1]]}function q(t){let e=[1,1,1];return 0===t.length||1===t.length&&1===t[0]||(e=[H(t),...X(t)]),e}function Y(t,e=!1){let n=Object(s.hb)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e&&(n*=2,1===(t=t.map((e,n)=>n>=t.length-2?s.Ib.nearestLargerEven(t[n]):t[n])).length&&(t=[2,t[0]])),2!==t.length){const e=s.Ib.squeezeShape(t);t=e.newShape}let r=s.Ib.sizeFromShape(t);if(t.length<=1&&r<=n)return[1,r];if(2===t.length&&t[0]<=n&&t[1]<=n)return t;if(3===t.length&&t[0]*t[1]<=n&&t[2]<=n)return[t[0]*t[1],t[2]];if(3===t.length&&t[0]<=n&&t[1]*t[2]<=n)return[t[0],t[1]*t[2]];if(4===t.length&&t[0]*t[1]*t[2]<=n&&t[3]<=n)return[t[0]*t[1]*t[2],t[3]];if(4===t.length&&t[0]<=n&&t[1]*t[2]*t[3]<=n)return[t[0],t[1]*t[2]*t[3]];if(e){const e=H(t);let n=2,a=2;return t.length&&([n,a]=X(t)),r=e*(n/2)*(a/2),s.Ib.sizeToSquarishShape(r).map(t=>2*t)}return s.Ib.sizeToSquarishShape(r)}function Q(t){return t%2==0}function J(t,e){if(t=t.slice(-2),e=e.slice(-2),s.Ib.arraysEqual(t,e))return!0;if(!t.length||!e.length)return!0;if(0===t[0]||0===t[1]||0===e[0]||0===e[1])return!0;if(t.length!==e.length){const n=t.slice(-1)[0],r=e.slice(-1)[0];if(n===r)return!0;if(Q(n)&&Q(r)&&(1===t[0]||1===e[0]))return!0}return t[1]===e[1]&&Q(t[0])&&Q(e[0])}let Z,tt;function et(t){if(null==Z){const e=l(t);Z=e.getParameter(e.MAX_TEXTURE_SIZE)}return Z}function nt(){Z=null}function rt(){tt=null}function at(t){if(null==tt){const e=l(t);tt=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,tt)}function ot(t){if(0===t)return 0;let e;const n=l(t);return e=st(n,"EXT_disjoint_timer_query_webgl2")&&2===t?2:st(n,"EXT_disjoint_timer_query")?1:0,e}function st(t,e){return null!=t.getExtension(e)}function it(t){try{if(null!=l(t))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function ut(t){if(0===t)return!1;const e=l(t);if(1===t){if(!st(e,"OES_texture_float"))return!1}else if(!st(e,"EXT_color_buffer_float"))return!1;return lt(e)}function ct(t){if(0===t)return!1;const e=l(t);if(1!==t){if(st(e,"EXT_color_buffer_float"))return lt(e);const t="EXT_color_buffer_half_float";if(st(e,t)){const n=e.getExtension(t);return function(t,e){const n=g(t,e),r=t.createTexture();t.bindTexture(t.TEXTURE_2D,r),t.texImage2D(t.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const a=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,a),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,r,0);const o=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(r),t.deleteFramebuffer(a),o}(e,n)}return!1}return!!st(e,"OES_texture_float")&&!!st(e,"WEBGL_color_buffer_float")&&lt(e)}function lt(t){const e=g(t),n=t.createTexture();t.bindTexture(t.TEXTURE_2D,n),t.texImage2D(t.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const r=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,r),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,n,0);const a=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(n),t.deleteFramebuffer(r),a}function dt(t){return 2===t&&null!=l(t).fenceSync}function pt(t,e){Array.isArray(t)||(t=[t]),t.forEach(t=>{null!=t&&s.Ib.assert("complex64"!==t.dtype,()=>e+" does not support complex64 tensors in the WebGL backend.")})}const ht=Object(s.hb)();function ft(t){const e=new Float32Array(t.length);for(let n=0;n<t.length;++n)e[n]=Math.abs(t[n]);return e}function mt(t){return(e,n,r,a,o)=>{const i=s.Y.assertAndGetBroadcastShape(e,n),u=i.length,c=s.Ib.computeStrides(i),l=s.Ib.sizeFromShape(i),d=s.Ib.getTypedArrayFromDType(o,l),p=e.length,h=n.length,f=s.Ib.computeStrides(e),m=s.Ib.computeStrides(n),b=s.Y.getBroadcastDims(e,i),g=s.Y.getBroadcastDims(n,i);if(b.length+g.length===0)for(let s=0;s<d.length;++s)d[s]=t(r[s%r.length],a[s%a.length]);else for(let y=0;y<d.length;++y){const e=s.Ib.indexToLoc(y,u,c),n=e.slice(-p);b.forEach(t=>n[t]=0);const o=s.Ib.locToIndex(n,p,f),i=e.slice(-h);g.forEach(t=>i[t]=0);const l=s.Ib.locToIndex(i,h,m);d[y]=t(r[o],a[l])}return[d,i]}}function bt(t,e){Array.isArray(t)||(t=[t]),t.forEach(t=>{null!=t&&s.Ib.assert("complex64"!==t.dtype,()=>e+" does not support complex64 tensors in the CPU backend.")})}function gt(t){const{inputs:e,backend:n}=t,{real:r,imag:a}=e,o=n.data.get(r.dataId).values,s=n.data.get(a.dataId).values,i=n.makeTensorInfo(r.shape,"complex64");return n.data.get(i.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",o),imag:n.makeTensorInfo(a.shape,"float32",s)},i}function yt(t){const{inputs:e,backend:n}=t,{x:r}=e;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}function xt(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{dtype:o}=r;if("complex64"===o){if("complex64"===a.dtype)return yt({inputs:{x:a},backend:n});const t=s.Jb(a.shape),e=xt({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),r=gt({inputs:{real:e,imag:t},backend:n});return t.dispose(),n.disposeIntermediateTensorInfo(e),r}if("complex64"===a.dtype){const t=function(t){const{inputs:e,backend:n}=t,{input:r}=e,a=n.data.get(r.dataId).complexTensorInfos.real,o=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,o)}({inputs:{input:a},backend:n}),e=xt({inputs:{x:t},backend:n,attrs:{dtype:o}});return n.disposeIntermediateTensorInfo(t),e}if(!s.Ib.hasEncodingLoss(a.dtype,o)){const t=yt({inputs:{x:a},backend:n});return{dataId:t.dataId,shape:t.shape,dtype:o}}if("int32"===o){const t=n.data.get(a.dataId).values,e=Int32Array.from(t);return n.makeTensorInfo(a.shape,"int32",e)}if("bool"===o){const t=n.data.get(a.dataId).values,e=s.Ib.toTypedArray([0],a.dtype),[r,o]=mt((t,e)=>t!==e?1:0)(a.shape,[],t,e,"bool");return n.makeTensorInfo(o,"bool",r)}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${o}`)}function Ot(t,e,n,r){return null==n?({inputs:n,backend:a})=>{const{a:o,b:s}=n,i=a;bt([o,s],t);const u=i.data.get(o.dataId).values,c=i.data.get(s.dataId).values,l=r||o.dtype,[d,p]=e(o.shape,s.shape,u,c,l);return i.makeTensorInfo(p,l,d)}:({inputs:t,backend:a})=>{const{a:o,b:s}=t,i=a;if("complex64"===o.dtype||"complex64"===s.dtype){const t=xt({inputs:{x:o},backend:i,attrs:{dtype:"complex64"}}),e=i.data.get(t.dataId),r=e.complexTensorInfos.imag,a=i.data.get(e.complexTensorInfos.real.dataId).values,u=i.data.get(r.dataId).values,c=xt({inputs:{x:s},backend:i,attrs:{dtype:"complex64"}}),l=i.data.get(c.dataId),d=l.complexTensorInfos.imag,p=i.data.get(l.complexTensorInfos.real.dataId).values,h=i.data.get(d.dataId).values,[f,m,b]=n(o.shape,s.shape,a,u,p,h),g=i.makeTensorInfo(b,"float32",f),y=i.makeTensorInfo(b,"float32",m),x=gt({inputs:{real:g,imag:y},backend:i});return i.disposeIntermediateTensorInfo(t),i.disposeIntermediateTensorInfo(c),i.disposeIntermediateTensorInfo(g),i.disposeIntermediateTensorInfo(y),x}{const t=i.data.get(o.dataId).values,n=i.data.get(s.dataId).values,a=r||o.dtype,[u,c]=e(o.shape,s.shape,t,n,a);return i.makeTensorInfo(c,a,u)}}}function vt(t){return(e,n,r,a,o,i)=>{const u=s.Y.assertAndGetBroadcastShape(e,n),c=s.Ib.sizeFromShape(u),l=u.length,d=s.Ib.computeStrides(u),p=s.Ib.getTypedArrayFromDType("float32",c),h=s.Ib.getTypedArrayFromDType("float32",c),f=s.Y.getBroadcastDims(e,u),m=s.Y.getBroadcastDims(n,u),b=s.Y.mergeRealAndImagArrays(r,a),g=s.Y.mergeRealAndImagArrays(o,i),y=e.length,x=s.Ib.computeStrides(e),O=n.length,v=s.Ib.computeStrides(n);if(f.length+m.length===0)for(let s=0;s<p.length;s++){const e=s%b.length,n=s%g.length,r=t(b[2*e],b[2*e+1],g[2*n],g[2*n+1]);p[s]=r.real,h[s]=r.imag}else for(let w=0;w<p.length;w++){const e=s.Ib.indexToLoc(w,l,d),n=e.slice(-y);f.forEach(t=>n[t]=0);const r=s.Ib.locToIndex(n,y,x),a=e.slice(-O);m.forEach(t=>a[t]=0);const o=s.Ib.locToIndex(a,O,v),i=t(b[2*r],b[2*r+1],g[2*o],g[2*o+1]);p[w]=i.real,h[w]=i.imag}return[p,h,u]}}ht.registerFlag("HAS_WEBGL",()=>ht.getNumber("WEBGL_VERSION")>0),ht.registerFlag("WEBGL_VERSION",()=>it(2)?2:it(1)?1:0),ht.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1),ht.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>2===ht.get("WEBGL_VERSION")),ht.registerFlag("WEBGL_CPU_FORWARD",()=>!0),ht.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),ht.registerFlag("WEBGL_PACK",()=>ht.getBool("HAS_WEBGL")),ht.registerFlag("WEBGL_PACK_NORMALIZATION",()=>ht.getBool("WEBGL_PACK")),ht.registerFlag("WEBGL_PACK_CLIP",()=>ht.getBool("WEBGL_PACK")),ht.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>!1),ht.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>ht.getBool("WEBGL_PACK")),ht.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>ht.getBool("WEBGL_PACK")),ht.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>ht.getBool("WEBGL_PACK")),ht.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>ht.getBool("WEBGL_PACK")),ht.registerFlag("WEBGL_PACK_REDUCE",()=>ht.getBool("WEBGL_PACK")),ht.registerFlag("WEBGL_LAZILY_UNPACK",()=>ht.getBool("WEBGL_PACK")),ht.registerFlag("WEBGL_CONV_IM2COL",()=>ht.getBool("WEBGL_PACK")),ht.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>et(ht.getNumber("WEBGL_VERSION"))),ht.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>at(ht.getNumber("WEBGL_VERSION"))),ht.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const t=ht.getNumber("WEBGL_VERSION");return 0===t?0:ot(t)}),ht.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>ht.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!s.eb.isMobile()),ht.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>ut(ht.getNumber("WEBGL_VERSION"))),ht.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>!ht.getBool("WEBGL_FORCE_F16_TEXTURES")&&ht.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),ht.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>ct(ht.getNumber("WEBGL_VERSION"))),ht.registerFlag("WEBGL_FENCE_API_ENABLED",()=>dt(ht.getNumber("WEBGL_VERSION"))),ht.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>ht.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0),ht.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,t=>{if(t<0&&-1!==t)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${t}.`)});const wt=mt((t,e)=>t+e),jt=vt((t,e,n,r)=>({real:t+n,imag:e+r}));function It(t){return(e,n,r)=>{const a=s.Ib.getTypedArrayFromDType(n,e.length);for(let o=0;o<e.length;++o)a[o]=t(e[o],r);return a}}function Ct(t,e,n){return({inputs:r,attrs:a,backend:o})=>{const{x:s}=r;if(bt(s,t),"string"===s.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const i=o,u=i.data.get(s.dataId).values,c=n||s.dtype,l=e(u,c,a);return i.makeTensorInfo(s.shape,c,l)}}Ot(s.b,wt,jt);const Nt=It(t=>Math.ceil(t)),$t=(Ct(s.g,Nt),It(t=>Math.exp(t))),Et=(Ct(s.m,$t),It(t=>Math.expm1(t))),Tt=(Ct(s.n,Et),It(t=>Math.floor(t))),St=(Ct(s.q,Tt),It(t=>Math.log(t)));function kt(t,e,n,r){const a=s.Ib.getTypedArrayFromDType(r,s.Ib.sizeFromShape(n));for(let o=0;o<a.length;++o){const n=o*e;let r=t[n];for(let a=0;a<e;++a){const e=t[n+a];e>r&&(r=e)}a[o]=r}return a}Ct(s.x,St);const Rt=mt((t,e)=>t*e),At=vt((t,e,n,r)=>({real:t*n-e*r,imag:t*r+e*n})),Ft=(Ot(s.E,Rt,At),mt((t,e)=>t!==e?1:0)),Dt=(Ot(s.I,Ft,null,"bool"),It(t=>1/Math.sqrt(t)));function _t(t,e,n,r,a){const o=s.wb.isSliceContinous(r,e,n),i=s.Ib.sizeFromShape(n),u=s.Ib.computeStrides(r);if(o){const n=s.wb.computeFlatOffset(e,u);return t.subarray(n,n+i)}const c=s.Ib.getTypedArrayFromDType(a,i);for(let l=0;l<i;++l){const a=n.length,o=s.Ib.computeStrides(n),i=s.Ib.indexToLoc(l,a,o).map((t,n)=>t+e[n]),d=s.Ib.locToIndex(i,r.length,u);c[l]=t[d]}return c}Ct(s.M,Dt);const Mt=mt((t,e)=>{const n=t-e;return n*n}),Pt=(Ot(s.Q,Mt),mt((t,e)=>t-e)),Bt=vt((t,e,n,r)=>({real:t-n,imag:e-r}));function Lt(t,e,n,r,a){const o=e.length,i=s.Ib.sizeFromShape(e),u=s.Ib.computeStrides(e),c=s.Ib.computeStrides(a),l=s.Ib.getTypedArrayFromDType(n,s.Ib.sizeFromShape(a));for(let d=0;d<i;++d){const e=s.Ib.indexToLoc(d,o,u),n=new Array(e.length);for(let t=0;t<n.length;t++)n[t]=e[r[t]];l[s.Ib.locToIndex(n,o,c)]=t[d]}return l}function Vt(t,e,n,r){const a=s.Ib.parseAxisParam(e,n)[0],o=[1,n[0],1];for(let s=0;s<a;s++)o[0]*=n[s];o[1]=n[a];for(let s=a+1;s<n.length;s++)o[2]*=n[s];const i={},u=new Int32Array(n[a]),c=new s.U(o,r,t),l=[],d=1===o[0]&&1===o[2];for(let s=0;s<n[a];s++){let e;if(d)e=t[s].toString();else{const t=[];for(let e=0;e<o[0];e++)for(let n=0;n<o[2];n++)t.push(c.get(e,s,n));e=t.join(",")}if(void 0!==i[e])u[s]=i[e];else{const t=Object.keys(i).length;i[e]=t,u[s]=t,l.push(s)}}const p=o.slice();p[1]=Object.keys(i).length;const h=new s.U(p,r);l.forEach((t,e)=>{for(let n=0;n<o[0];n++)for(let r=0;r<o[2];r++)h.set(c.get(n,t,r),n,e,r)});const f=n.slice();return f[a]=p[1],{outputValues:h.values,outputShape:f,indices:u}}Ot(s.R,Pt,Bt);const{simpleAbsImpl:zt,addImpl:Wt,ceilImpl:Ut,expImpl:Kt,expm1Impl:Gt,floorImpl:Ht,logImpl:Xt,maxImpl:qt,multiplyImpl:Yt,rsqrtImpl:Qt,sliceImpl:Jt,subImpl:Zt,transposeImpl:te,uniqueImpl:ee}=a;class ne{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map((t,e)=>"T"+e);const n=[];this.variableNames.forEach(t=>{n.push(`float v${t} = get${t}AtOutCoords();`)});const r=this.variableNames.map(t=>"v"+t).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class re{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map((t,e)=>"T"+e);const n=[];this.variableNames.forEach(t=>{n.push(`vec4 v${t} = get${t}AtOutCoords();`)});const r=this.variableNames.map(t=>"v"+t).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}class ae{constructor(t,e,n){this.variableNames=["A"];const{windowSize:r,batchSize:a,outSize:o}=t;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,o],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));"};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${"max"===e?">":"<"} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}function oe(t,e){return["x","y","z","w","u","v"].slice(0,e).map(e=>`${t}.${e}`)}function se(t,e){return 1===e?[t]:oe(t,e)}function ie(){let t,e,n,r,a,o,i,u,c,l;return 2===Object(s.hb)().getNumber("WEBGL_VERSION")?(t="#version 300 es",e="in",n="out",r="in",a="texture",o="outputColor",i="out vec4 outputColor;",u="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",c="",l="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(t="",e="attribute",n="varying",r="varying",a="texture2D",o="gl_FragColor",i="",u="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",c="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",l="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:t,attribute:e,varyingVs:n,varyingFs:r,texture2D:a,output:o,defineOutput:i,defineSpecialNaN:u,defineSpecialInf:c,defineRound:l}}function ue(t,e,n="index"){const r=s.Ib.computeStrides(e);return r.map((e,a)=>`int ${t[a]} = ${n} / ${e}; ${a===r.length-1?`int ${t[a+1]} = ${n} - ${t[a]} * ${e}`:`index -= ${t[a]} * ${e}`};`).join("")}function ce(t){const e=s.Ib.computeStrides(t).map(t=>t.toString());return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;\n  }\n`}const le="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:de}=s.Y;const pe="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",he="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",fe="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",me="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function be(t){return"offset"+t}function ge(t){const e=t.name,n=s.Ib.sizeFromShape(t.shapeInfo.logicalShape);return n<2?`return ${e};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${e}[i];\n      }\n    }\n  `}function ye(t){if(t<=1)return"int";if(2===t)return"ivec2";if(3===t)return"ivec3";if(4===t)return"ivec4";if(5===t)return"ivec5";if(6===t)return"ivec6";throw Error(`GPU for rank ${t} is not yet supported`)}function xe(t,e){const n=JSON.parse(JSON.stringify(t));return n.shapeInfo.logicalShape=e,n}function Oe(t,e){return e.map(e=>t[e]).join(", ")}class ve{constructor(t,e,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,s.Ib.assert(t.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);const a=Math.ceil(t[t.length-1]/e);this.outputShape=t.slice(0,-1),a>1&&this.outputShape.push(a),r||this.variableNames.push("bestIndicesA");const o=this.outputShape,i=o.length,u=ye(i),c=se("coords",i);let l,d;if(1===a){d=i+1;const t=ye(d);l=`\n        ${t} sourceLocR = ${t}(${c.join()}, 0);\n        ++${c[i-1]};\n        ${t} sourceLocG = ${t}(${c.join()}, 0);\n        ++${c[i-2]};\n        ${t} sourceLocA = ${t}(${c.join()}, 0);\n        --${c[i-1]};\n        ${t} sourceLocB = ${t}(${c.join()}, 0);\n        --${c[i-2]};`}else d=i,l=`\n        ${u} sourceLocR = coords;\n        ++${c[i-1]};\n        ${u} sourceLocG = coords;\n        ++${c[i-2]};\n        ${u} sourceLocA = coords;\n        --${c[i-1]};\n        ${u} sourceLocB = coords;\n        --${c[i-2]};`;const p=["x","y","z","w","u","v"].slice(0,d),h="."+p[d-1],f=p.map(t=>"int "+t),m=se("sourceLocR",d-1).concat("inIdx.r"),b=se("sourceLocG",d-1).concat("inIdx.g"),g=se("sourceLocB",d-1).concat("inIdx.b"),y=se("sourceLocA",d-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",O=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()})));`,v=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${b.join()}) : 0.,\n            hasNextRow ? getAChannel(${g.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${y.join()}) : 0.)`,w=r?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${p.join()}),\n                                          vec2(${p.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${p.join()}),\n                               vec2(${p.slice(-2).join()}));\n      }\n      ${w}\n      void main() {\n        ${u} coords = getOutputCoords();\n        bool hasNextCol = ${c[i-1]} < ${o[i-1]-1};\n        bool hasNextRow = ${c[i-2]} < ${o[i-2]-1};\n        ${l}\n        ivec4 srcIdx = ivec4(sourceLocR${h}, sourceLocG${h},\n          sourceLocB${h}, sourceLocA${h}) * ${e};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${v};\n\n        for (int i = 0; i < ${e}; i++) {\n          inIdx = srcIdx;\n          ${O}\n          vec4 candidate = ${v};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}class we{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.effectiveFilterHeight,n=t.effectiveFilterWidth;this.userCode=`\n      const ivec2 pads = ivec2(${e-1-t.padInfo.top}, ${n-1-t.padInfo.left});\n      const float avgMultiplier = float(${1/(t.filterHeight*t.filterWidth)});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${e};\n            wR += ${t.dilationHeight}) {\n          float dyR = float(dyRCorner + wR) / ${t.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${n};\n            wC+= ${t.dilationWidth}) {\n            float dyC = float(dyCCorner + wC) / ${t.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class je{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.effectiveFilterDepth,n=t.effectiveFilterHeight,r=t.effectiveFilterWidth;this.userCode=`\n      const ivec3 pads = ivec3(${e-1-t.padInfo.front}, ${n-1-t.padInfo.top}, ${r-1-t.padInfo.left});\n      const float avgMultiplier = float(${1/(t.filterDepth*t.filterHeight*t.filterWidth)});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${e};\n            wD += ${t.dilationDepth}) {\n          float dyD = float(dyDCorner + wD) / ${t.strideDepth}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${n};\n              wR += ${t.dilationHeight}) {\n            float dyR = float(dyRCorner + wR) / ${t.strideHeight}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${r};\n                wC += ${t.dilationWidth}) {\n              float dyC = float(dyCCorner + wC) / ${t.strideWidth}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Ie="return (a < 0.) ? b * a : a;";class Ce{constructor(t,e,n){this.variableNames=["A","B"],this.outputShape=s.Y.assertAndGetBroadcastShape(e,n),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${t}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}const Ne="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";class $e{constructor(t,e,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s.Y.assertAndGetBroadcastShape(e,n);const a=this.outputShape.length;let o="";if(r)if(0===a||1===s.Ib.sizeFromShape(this.outputShape))o="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(o=`\n          ${ye(a)} coords = getOutputCoords();\n        `,1===a)o+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const t=se("coords",a);o+=`\n            bool nextRowOutOfBounds =\n              (${t[a-2]} + 1) >= ${this.outputShape[a-2]};\n            bool nextColOutOfBounds =\n              (${t[a-1]} + 1) >= ${this.outputShape[a-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${t}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${o}\n\n        setOutput(result);\n      }\n    `}}class Ee{constructor(t){this.variableNames=["A"],this.outputShape=t,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}getCustomSetupFunc(t,e){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,t),n.gl.uniform1f(this.maxLoc,e)}}}class Te{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}getCustomSetupFunc(t,e){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,t),n.gl.uniform1f(this.maxLoc,e)}}}class Se{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}class ke{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${t.strideHeight} - ${t.padInfo.top};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${t.strideWidth} - ${t.padInfo.left};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              if (${"channelsLast"===t.dataFormat}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Re{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r="channelsLast"===t.dataFormat;this.userCode=`\n      const ivec2 pads = ivec2(${e-1-t.padInfo.top}, ${n-1-t.padInfo.left});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${r?3:1}];\n\n        ivec2 dyCorner = ivec2(coords[${r?1:2}], coords[${r?2:3}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${t.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${t.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n\n              if (${r}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Ae{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape,this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yF = 0; yF < ${t.outDepth}; yF++) {\n            int xF = wF + yF * ${t.strideDepth} - ${t.padInfo.front};\n\n            if (xF < 0 || xF >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${t.outHeight}; yR++) {\n              int xR = wR + yR * ${t.strideHeight} - ${t.padInfo.top};\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${t.outWidth}; yC++) {\n                int xC = wC + yC * ${t.strideWidth} - ${t.padInfo.left};\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Fe{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,r=t.filterWidth;this.userCode=`\n      const ivec3 pads = ivec3(${e-1-t.padInfo.front}, ${n-1-t.padInfo.top}, ${r-1-t.padInfo.left});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${e}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${t.strideDepth}.0;\n\n          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${e} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${t.strideHeight}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${t.strideWidth}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class De{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${t.outChannels/t.inChannels} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${t.strideHeight} - ${t.padInfo.top};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${t.strideWidth} - ${t.padInfo.left};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class _e{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.outChannels/t.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${e-1-t.padInfo.top}, ${n-1-t.padInfo.left});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${t.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${t.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${r}; dm++) {\n              int d2 = d1 * ${r} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Me{constructor(t,e=!1,n=null,r=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const a=t.padInfo.top,o=t.padInfo.left,s=t.strideHeight,i=t.strideWidth,u=t.dilationHeight,c=t.dilationWidth,l=t.filterHeight,d=t.filterWidth,p=4*Math.floor(t.inChannels/4),h=t.inChannels%4,f="channelsLast"===t.dataFormat,m=f?1:2,b=f?2:3,g=f?3:1;let y="",x="";n&&(y=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,x="result = activation(result);");const O=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.userCode=`\n      ${y}\n\n      const ivec2 strides = ivec2(${s}, ${i});\n      const ivec2 pads = ivec2(${a}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${g}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${m}], coords[${b}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${l}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${t.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${f}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===h}) {\n\n              if (${f}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===h}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===h}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${O}\n        ${x}\n        setOutput(result);\n      }\n    `}}class Pe{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const e=t.padInfo.front,n=t.padInfo.top,r=t.padInfo.left,a=t.strideDepth,o=t.strideHeight,s=t.strideWidth,i=t.dilationDepth,u=t.dilationHeight,c=t.dilationWidth,l=t.filterDepth,d=t.filterHeight,p=t.filterWidth,h=4*Math.floor(t.inChannels/4),f=t.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${a}, ${o}, ${s});\n      const ivec3 pads = ivec3(${e}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${l}; wF++) {\n          int xF = xFCorner + wF * ${i};\n\n          if (xF < 0 || xF >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p}; wC++) {\n              int xC = xCCorner + wC * ${c};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${h}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${h}) *\n                  getW(wF, wR, wC, ${h}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${h}),\n                  getX(batch, xF, xR, xC, ${h} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${h}, d2),\n                  getW(wF, wR, wC, ${h} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${h}),\n                  getX(batch, xF, xR, xC, ${h} + 1),\n                  getX(batch, xF, xR, xC, ${h} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${h}, d2),\n                  getW(wF, wR, wC, ${h} + 1, d2),\n                  getW(wF, wR, wC, ${h} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Be{constructor(t,e=!1,n=null,r=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const a=t.inHeight,o=t.inWidth,s=t.padInfo.top,i=t.padInfo.left,u=t.strideHeight,c=t.strideWidth,l=t.dilationHeight,d=t.dilationWidth,p=t.filterHeight,h=t.filterWidth,f=t.outChannels/t.inChannels;let m="",b="";n&&(m=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,b="result = activation(result);");const g=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.userCode=`\n      ${m}\n\n      const ivec2 strides = ivec2(${u}, ${c});\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${f};\n        int q = d2 - d1 * ${f};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${p}; wR++) {\n          int xR = xRCorner + wR * ${l};\n\n          if (xR < 0 || xR >= ${a}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${h}; wC++) {\n            int xC = xCCorner + wC * ${d};\n\n            if (xC < 0 || xC >= ${o}) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${g}\n        ${b}\n        setOutput(result);\n      }\n    `}}class Le{constructor(t,e=!1,n=null,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.outShape;const a=t.inHeight,o=t.inWidth,i=t.padInfo.top,u=t.padInfo.left,c=t.strideHeight,l=t.strideWidth,d=t.dilationHeight,p=t.dilationWidth,h=t.filterHeight,f=t.filterWidth,m=f;let b="int xR; int xC; int xCOffset;";for(let s=0;s<h;s++)for(let t=0;t<f;t++)b+=`\n          vec4 xTexelR${s}C${2*t} = vec4(0.);\n          vec4 wR${s}C${t} = vec4(0.);\n          vec4 xR${s}C${t} = vec4(0.);`;for(let O=0;O<h;O++)for(let t=0;t<m;t++){const e=2*t;if(b+=`\n          xR = xRCorner + ${O*d};\n          xC = xCCorner + ${e*p};\n        `,1===l){if(e<f&&(b+=u%2==1?`\n                xCOffset = xC + 1;\n                if(xR >= 0 && xR < ${a} && xCOffset >= 0 && xCOffset < ${o}) {\n                  xTexelR${O}C${e} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${o}) {\n                    xTexelR${O}C${e}.zw = vec2(0.);\n                  }\n                } else {\n                  xTexelR${O}C${e} = vec4(0.);\n                }\n\n                xCOffset = xC + 1 - 2;\n                if(xR >= 0 && xR < ${a} && xCOffset >= 0 && xCOffset < ${o}) {\n                  vec4 previous = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${o}) {\n                    previous.zw = vec2(0.);\n                  }\n\n                  xR${O}C${e} = vec4(previous.zw, xTexelR${O}C${e}.xy);\n                } else {\n                  xR${O}C${e} = vec4(0, 0, xTexelR${O}C${e}.xy);\n                }\n              `:`\n                if(xR >= 0 && xR < ${a} && xC >= 0 && xC < ${o}) {\n                  xTexelR${O}C${e} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${O}C${e} = vec4(0.);\n                }\n\n                xR${O}C${e} = xTexelR${O}C${e};\n              `,e+1<f)){const t=u%2==0?s.Ib.nearestLargerEven(p):p;p%2==0&&u%2==1||p%2!=0&&u%2!=1?(b+=`\n                  xCOffset = xC + ${u%2} + ${t};\n\n                  if(xR >= 0 && xR < ${a} &&\n                    xCOffset >= 0 && xCOffset < ${o}) {\n                    xTexelR${O}C${e+2} = getX(batch, xR, xCOffset, d1);\n                  }\n                `,p>1&&(b+=`\n                    xCOffset -= 2;\n                    if(xR >= 0 && xR < ${a} &&\n                      xCOffset >= 0 && xCOffset < ${o}) {\n                      xTexelR${O}C${e} = getX(batch, xR, xCOffset, d1);\n                    } else {\n                      xTexelR${O}C${e} = vec4(0.);\n                    }\n                  `),b+=`\n                  xR${O}C${e+1} = vec4(\n                    xTexelR${O}C${e}.zw, xTexelR${O}C${e+2}.xy);\n                `):b+=`\n                  xCOffset = xC + ${t};\n\n                  if(xR >= 0 && xR < ${a} &&\n                    xCOffset >= 0 && xCOffset < ${o}) {\n                    xTexelR${O}C${e+2} = getX(batch, xR, xCOffset, d1);\n                  }\n\n                  xR${O}C${e+1} = xTexelR${O}C${e+2};\n                `}}else e<f&&(b+=`\n              if(xR >= 0 && xR < ${a}) {\n            `,u%2==1?(b+=`\n                xCOffset = xC + 1 - ${l};\n                if(xCOffset >= 0 && xCOffset < ${o}) {\n                  xTexelR${O}C${e} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${O}C${e} = vec4(0.);\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ${o}) {\n                  xTexelR${O}C${e+2} = getX(batch, xR, xC + 1, d1);\n                } else {\n                  xTexelR${O}C${e+2} = vec4(0.);\n                }\n\n                xR${O}C${e} = vec4(\n                  xTexelR${O}C${e}.zw, xTexelR${O}C${e+2}.zw);\n              `,e+1<f&&(b+=`\n                  vec4 final = vec4(0.);\n                  xCOffset = xC + 1 + ${l};\n                  if(xCOffset >= 0 && xCOffset < ${o}) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xR${O}C${e+1} = vec4(xTexelR${O}C${e+2}.xy, final.xy);\n                `)):(b+=`\n                if(xC >= 0 && xC < ${o}) {\n                  xTexelR${O}C${e} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${O}C${e} = vec4(0.);\n                }\n\n                xCOffset = xC + ${l};\n                if(xCOffset >= 0 && xCOffset < ${o}) {\n                  xTexelR${O}C${e+2} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${O}C${e+2} = vec4(0.);\n                }\n\n                xR${O}C${e} = vec4(\n                  xTexelR${O}C${e}.xy, xTexelR${O}C${e+2}.xy);\n              `,e+1<f&&(b+=`\n                  xR${O}C${e+1} = vec4(\n                    xTexelR${O}C${e}.zw, xTexelR${O}C${e+2}.zw);\n                `)),b+="}");e<f&&(b+=`\n            vec4 wTexelR${O}C${e} = getW(${O}, ${e}, d1, q);\n            wR${O}C${e} = vec4(wTexelR${O}C${e}.xz, wTexelR${O}C${e}.xz);\n          `,e+1<f&&(b+=`\n              vec4 wTexelR${O}C${e+1} = getW(${O}, ${e+1}, d1, q);\n              wR${O}C${e+1} =\n                vec4(wTexelR${O}C${e+1}.xz, wTexelR${O}C${e+1}.xz);`))}for(let s=0;s<h;s++)for(let t=0;t<f;t++)b+=`dotProd += xR${s}C${t} * wR${s}C${t};`;let g="",y="";n&&(g=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,y="result = activation(result);");const x=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.userCode=`\n      ${g}\n\n      const ivec2 strides = ivec2(${c}, ${l});\n      const ivec2 pads = ivec2(${i}, ${u});\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2;\n        int q = 0;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        vec4 dotProd = vec4(0.);\n\n        ${b}\n\n        vec4 result = dotProd;\n        ${x}\n        ${y}\n        setOutput(result);\n      }\n    `}}class Ve{constructor(t,e,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[o,s,i,u]=t,[c]=e,[l,d]=n;this.outputShape=[c,l,d,u];const p="bilinear"===r?1:0,[h,f]=[s-1+".0",i-1+".0"],[m,b,g]=l>1?[""+(s-1)/(l-1),"(y2-y1) * height_ratio",`y1*${h} + float(y)*(height_scale)`]:["0.0","0.0","0.5 * (y1+y2) * "+h],[y,x,O]=d>1?[""+(i-1)/(d-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0","0.5 * (x1+x2) * "+f];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${y});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${o}) {\n          return;\n        }\n\n        float height_scale = ${b};\n        float width_scale = ${x};\n\n        float in_y = ${g};\n        if( in_y < 0.0 || in_y > ${h} ) {\n          setOutput(float(${a}));\n          return;\n        }\n        float in_x = ${O};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${a}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${p} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}class ze{constructor(t,e,n){this.variableNames=["x"],this.outputShape=t;const r=t.length,a=e?"0.0":`getX(${We(r,"coords")})`,o=t[t.length-1];let s="",i="";e?(s=n?"end != "+(o-1):"end != 0",i=n?"end + 1":"end - 1"):(s=n?"end + pow2 < "+o:"end >= pow2",i=n?"end + pow2":"end - pow2"),this.userCode=`\n      uniform float index;\n      void main() {\n        ${ye(r)} coords = getOutputCoords();\n        int end = ${Ue(r,"coords")};\n        float val = ${a};\n        int pow2 = int(pow(2.0, index));\n        if (${s}) {\n          int idx = ${i};\n          ${Ue(r,"coords")} = idx;\n          val += getX(${We(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}getCustomSetupFunc(t){return(e,n)=>{null==this.index&&(this.index=e.getUniformLocation(n,"index")),e.gl.uniform1f(this.index,t)}}}function We(t,e){if(1===t)return""+e;if(2===t)return`${e}.x, ${e}.y`;if(3===t)return`${e}.x, ${e}.y, ${e}.z`;if(4===t)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw Error(`Cumulative sum for rank ${t} is not yet supported`)}function Ue(t,e){if(1===t)return""+e;if(2===t)return e+".y";if(3===t)return e+".z";if(4===t)return e+".w";throw Error(`Cumulative sum for rank ${t} is not yet supported`)}class Ke{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=d.DENSE;const e=m(t),n=ie();this.outputShape=t,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${ue(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${e[0]}, ${e[1]}));\n        int index = 4 * (resTexRC.x * ${e[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${n.output} = result;\n      }\n    `}}class Ge{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=d.DENSE;const e=m(t),n=ie();this.outputShape=t,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${ue(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${e[0]}, ${e[1]}));\n        int index = 4 * (resTexRC.x * ${e[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${n.output} = result;\n      }\n    `}}class He{constructor(t,e,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${e};\n      int offset_h = imod(h, ${e});\n      int in_w = w / ${e};\n      int offset_w = imod(w, ${e});\n      int offset_d = (offset_h * ${e} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}class Xe{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}class qe{constructor(t){this.variableNames=["A"],this.outTexUsage=p.DOWNLOAD;const e=ie();this.outputShape=t,this.userCode=`\n      ${le}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${e.output} = encode_float(x);\n      }\n    `}}class Ye{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=p.DOWNLOAD;const e=ie();this.outputShape=t,this.userCode=`\n      ${le}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${e.output} = encode_float(x);\n      }\n    `}}class Qe{constructor(t,e,n=!1){this.variableNames=["A"];const r=ie(),[a,o]=e;this.outputShape=t;let s="result";n&&(s="floor(result * 255. + 0.5)"),this.userCode=`\n      ${ce(t)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / ${o};\n        int c = imod(flatIndex, ${o});\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(${o}.0, ${a}.0);\n        vec4 values = ${r.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${r.output} = vec4(${s}, 0., 0., 0.);\n      }\n    `}}class Je{constructor(t,e,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const r=ie(),[a,o]=e;this.outputShape=t;let s="",i="result";n&&(i="floor(result * 255. + 0.5)");for(let u=0;u<=1;u++)for(let e=0;e<=1;e++){const n=2*u+e;s+=`\n          localCoords = coords;\n          if(localCoords[2] + ${e} < ${t[2]}) {\n            localCoords[2] += ${e};\n            if(localCoords[1] + ${u} < ${t[1]}) {\n              localCoords[1] += ${u};\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ${o};\n              c = imod(flatIndex, ${o});\n              uv = (vec2(c, r) + halfCR) / vec2(${o}.0, ${a}.0);\n              values = ${r.texture2D}(A, uv);\n\n              if(offset == 0) {\n                result[${n}] = values[0];\n              } else if(offset == 1) {\n                result[${n}] = values[1];\n              } else if(offset == 2) {\n                result[${n}] = values[2];\n              } else {\n                result[${n}] = values[3];\n              }\n            }\n          }\n        `}this.userCode=`\n      ${ce(t)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ${s}\n\n        ${r.output} = ${i};\n      }\n    `}}class Ze{constructor(t,e){this.outputShape=[],this.variableNames=["x"],this.outputShape=t,this.userCode="\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}getCustomSetupFunc(t){return(e,n)=>{null==this.valueLoc&&(this.valueLoc=e.getUniformLocationNoThrow(n,"value")),e.gl.uniform1f(this.valueLoc,t)}}}class tn{constructor(t,e,n){this.variableNames=["A","indices"];const r=t.slice();r[n]=e,this.outputShape=r,this.rank=r.length;const a=ye(this.rank),o=function(t,e){const n=t.length;if(n>4)throw Error(`Gather for rank ${n} is not yet supported`);if(1===n)return"int(getIndices(resRC))";const r=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[];for(let o=0;o<t.length;o++)a.push(o===e?`int(getIndices(${r[o]}))`:""+r[o]);return a.join()}(t,n);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        setOutput(getA(${o}));\n      }\n    `}}class en{constructor(t,e,n){this.sliceDim=t,this.strides=e,this.variableNames=["x","indices"],this.outputShape=n;const r=ye(e.length),a=ye(n.length);this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${a} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${this.sliceDim>1?"strides[j]":"strides"};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}function nn(t){const e=ie();return w(t,`${e.version}\n    precision highp float;\n    ${e.attribute} vec3 clipSpacePos;\n    ${e.attribute} vec2 uv;\n    ${e.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function rn(t){return E(t,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function an(t){return T(t,new Uint16Array([0,1,2,2,1,3]))}function on(t,e,n,r,a,o){R(e,n);const s=k(t),i=t.TEXTURE_2D;return y(t,()=>t.bindTexture(i,s)),y(t,()=>t.texParameteri(i,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE)),y(t,()=>t.texParameteri(i,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE)),y(t,()=>t.texParameteri(i,t.TEXTURE_MIN_FILTER,t.NEAREST)),y(t,()=>t.texParameteri(i,t.TEXTURE_MAG_FILTER,t.NEAREST)),y(t,()=>t.texImage2D(i,0,r,e,n,0,a,o,null)),y(t,()=>t.bindTexture(t.TEXTURE_2D,null)),s}function sn(t){return t.internalFormatFloat}function un(t,e,n,r){const[a,o]=f(e,n);return on(t,a,o,sn(r),r.textureFormatFloat,t.FLOAT)}function cn(t){return t.internalFormatHalfFloat}function ln(t,e,n,r){const[a,o]=f(e,n);return on(t,a,o,cn(r),r.textureFormatFloat,r.textureTypeHalfFloat)}function dn(t){return t.downloadTextureFormat}function pn(t,e,n,r){const[a,o]=f(e,n);return on(t,a,o,dn(r),t.RGBA,t.UNSIGNED_BYTE)}function hn(t){return t.internalFormatPackedFloat}function fn(t,e,n,r){const[a,o]=b(e,n);return on(t,a,o,hn(r),t.RGBA,t.FLOAT)}function mn(t){return t.internalFormatPackedHalfFloat}function bn(t,e,n,r){const[a,o]=b(e,n);return on(t,a,o,mn(r),t.RGBA,r.textureTypeHalfFloat)}function gn(t,e,n){return y(t,()=>t.bindBuffer(t.ARRAY_BUFFER,n)),F(t,e,"clipSpacePos",n,3,20,0)&&F(t,e,"uv",n,2,20,12)}function yn(t,e,n,r,a,o){let s,i,u;y(t,()=>t.bindTexture(t.TEXTURE_2D,e)),a instanceof Uint8Array?(s=new Uint8Array(n*r*4),i=t.UNSIGNED_BYTE,u=t.RGBA):(s=new Float32Array(n*r*4),i=t.FLOAT,u=o.internalFormatPackedFloat),s.set(a),y(t,()=>t.texImage2D(t.TEXTURE_2D,0,u,n,r,0,t.RGBA,i,s)),y(t,()=>t.bindTexture(t.TEXTURE_2D,null))}function xn(t,e,n){y(t,()=>t.bindTexture(t.TEXTURE_2D,e)),n.data instanceof Uint8Array?y(t,()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,n.width,n.height,0,t.RGBA,t.UNSIGNED_BYTE,n.data)):y(t,()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,n)),y(t,()=>t.bindTexture(t.TEXTURE_2D,null))}function On(t,e,n,r){const a=t.createBuffer();y(t,()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,a));const o=16*e*n;return y(t,()=>t.bufferData(t.PIXEL_PACK_BUFFER,o,t.STREAM_READ)),y(t,()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,0)),y(t,()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,null)),a}function vn(t,e,n){const r=t,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,e),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}function wn(t,e,n,r){const[a,o]=f(e,n),s=new Uint8Array(e*n*4);return y(t,()=>t.readPixels(0,0,a,o,r.downloadTextureFormat,t.UNSIGNED_BYTE,s)),new Float32Array(s.buffer)}function jn(t,e,n,r,a,o,s,i){const u=t,c=new Float32Array(function(t,e){const[n,r]=b(t,e);return n*r*4}(o,s));return u.bindBuffer(u.PIXEL_PACK_BUFFER,e),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,c),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),c}function In(t,e,n){const r=new Float32Array(e*n*4);return y(t,()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,r)),r}class Cn{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const e=Object(s.hb)().getNumber("WEBGL_VERSION");null!=t?(this.gl=t,c(e,t)):this.gl=l(e);let n="WEBGL_color_buffer_float";if(1===Object(s.hb)().getNumber("WEBGL_VERSION")){const t="OES_texture_half_float";if(this.textureFloatExtension=v(this.gl,"OES_texture_float"),st(this.gl,t))this.textureHalfFloatExtension=v(this.gl,t);else if(Object(s.hb)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),st(this.gl,"EXT_color_buffer_half_float"))this.colorBufferHalfFloatExtension=v(this.gl,"EXT_color_buffer_half_float");else if(Object(s.hb)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",st(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!st(this.gl,"EXT_color_buffer_half_float"))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension("EXT_color_buffer_half_float")}this.vertexBuffer=rn(this.gl),this.indexBuffer=an(this.gl),this.framebuffer=A(this.gl),this.textureConfig=g(this.gl,this.textureHalfFloatExtension)}get debug(){return Object(s.hb)().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const t=this.gl;y(t,()=>t.finish()),y(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,null)),y(t,()=>t.deleteFramebuffer(this.framebuffer)),y(t,()=>t.bindBuffer(t.ARRAY_BUFFER,null)),y(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)),y(t,()=>t.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),un(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),ln(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),pn(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),xn(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,n,r){this.throwIfDisposed(),yn(this.gl,t,e,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),bn(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),fn(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(z(this.gl,this.framebuffer),this.outputTexture=null),y(this.gl,()=>this.gl.deleteTexture(t))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,n){return this.downloadMatrixDriver(t,()=>wn(this.gl,e,n,this.textureConfig))}downloadPackedMatrixFromBuffer(t,e,n,r,a,o){return jn(this.gl,t,0,0,0,a,o)}downloadFloat32MatrixFromBuffer(t,e){return vn(this.gl,t,e)}createBufferFromTexture(t,e,n){this.bindTextureToFrameBuffer(t);const r=On(this.gl,e,n);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,n;if(Object(s.hb)().getBool("WEBGL_FENCE_API_ENABLED")){const r=t,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),n=()=>{const t=r.clientWaitSync(a,0,0);return t===r.ALREADY_SIGNALED||t===r.CONDITION_SATISFIED},e=a}else Object(s.hb)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(e,Object(s.hb)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:e,isFencePassed:n}}downloadMatrixFromPackedTexture(t,e,n){return this.downloadMatrixDriver(t,()=>In(this.gl,e,n))}createProgram(t){this.throwIfDisposed();const e=this.gl,n=j(e,t),r=nn(e),a=C(e);return y(e,()=>e.attachShader(a,r)),y(e,()=>e.attachShader(a,n)),N(e,a),this.debug&&$(e,a),this.vertexAttrsAreBound||(this.setProgram(a),this.vertexAttrsAreBound=gn(e,this.program,this.vertexBuffer)),a}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),null!=t&&y(this.gl,()=>this.gl.deleteProgram(t))}setProgram(t){this.throwIfDisposed(),this.program=t,null!=this.program&&this.debug&&$(this.gl,this.program),y(this.gl,()=>this.gl.useProgram(t))}getUniformLocation(t,e,n=!0){return this.throwIfDisposed(),n?M(this.gl,t,e):P(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),y(this.gl,()=>this.gl.getAttribLocation(t,e))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,n){this.throwIfDisposed(),this.throwIfNoProgram(),B(this.gl,t,e,n)}setOutputMatrixTexture(t,e,n){this.setOutputMatrixTextureDriver(t,n,e)}setOutputPackedMatrixTexture(t,e,n){this.throwIfDisposed();const[r,a]=b(e,n);this.setOutputMatrixTextureDriver(t,r,a)}setOutputMatrixWriteRegion(t,e,n,r){this.setOutputMatrixWriteRegionDriver(n,t,r,e)}setOutputPackedMatrixWriteRegion(t,e,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&$(this.gl,this.program),W(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const t=this.gl;this.debug&&this.debugValidate(),y(t,()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),y(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=v(this.gl,2===Object(s.hb)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Object(s.hb)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2(),n=t.createQuery();return t.beginQuery(e.TIME_ELAPSED_EXT,n),n}const t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(2===Object(s.hb)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2();return void t.endQuery(e.TIME_ELAPSED_EXT)}const t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(t){return await s.Ib.repeatedTry(()=>this.disposed||this.isQueryAvailable(t,Object(s.hb)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(t,Object(s.hb)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(t,e){if(0===e)return null;if(2===e){const e=this.gl;return e.getQueryParameter(t,e.QUERY_RESULT)/1e6}{const e=this.getQueryTimerExtensionWebGL1();return e.getQueryObjectEXT(t,e.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(0===e)return!0;if(2===e){const e=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=e.getQueryParameter(t,e.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const e=this.getQueryTimerExtensionWebGL1(),n=e.getQueryObjectEXT(t,e.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(e.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(t){return new Promise(e=>{this.addItemToPoll(()=>t.isFencePassed(),()=>e())})}pollItems(){const t=function(t){let e=0;for(;e<t.length&&t[e]();++e);return e-1}(this.itemsToPoll.map(t=>t.isDoneFn));for(let e=0;e<=t;++e){const{resolveFn:t}=this.itemsToPoll[e];t()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1||s.Ib.repeatedTry(()=>(this.pollItems(),0===this.itemsToPoll.length))}bindTextureToFrameBuffer(t){this.throwIfDisposed(),V(this.gl,t,this.framebuffer),this.debug&&W(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(V(this.gl,this.outputTexture,this.framebuffer),this.debug&&W(this.gl)):z(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);const n=e();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(t,e,n){this.throwIfDisposed();const r=this.gl;V(r,t,this.framebuffer),this.debug&&W(r),this.outputTexture=t,y(r,()=>r.viewport(0,0,e,n)),y(r,()=>r.scissor(0,0,e,n))}setOutputMatrixWriteRegionDriver(t,e,n,r){this.throwIfDisposed(),y(this.gl,()=>this.gl.scissor(t,e,n,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}function Nn(t,e){if(t.length!==e.length)throw Error(`Binary was compiled with ${t.length} inputs, but was executed with ${e.length} inputs`);t.forEach((t,n)=>{const r=t.logicalShape,a=e[n],o=a.shape;if(!s.Ib.arraysEqual(r,o))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${o} must match`);if(t.isUniform&&a.isUniform)return;const i=t.texShape,u=a.isUniform?null:a.texData.texShape;if(!s.Ib.arraysEqual(i,u))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${u} must match`)})}class $n{constructor(t,e,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t;const{filterWidth:r,inChannels:a,strideWidth:o,strideHeight:s,padInfo:i,outWidth:u,dilationWidth:c,dilationHeight:l,dataFormat:d}=n,{left:p,top:h}=i,f=a*r,m=ie(),b="channelsLast"===d,g=b?0:1,y=b?1:2;let x="";for(let O=0;O<=1;O++)for(let n=0;n<=1;n++)x+=`\n          blockIndex = rc.y + ${n};\n          pos = rc.x + ${O};\n\n          if(blockIndex < ${t[1]} && pos < ${t[0]}) {\n            offsetY = int(blockIndex / (${u})) * ${s} - ${h};\n            d0 = offsetY + ${l} * (pos / ${f});\n\n            if(d0 < ${e[g]} && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), ${u}.) * ${o}. - ${p}.);\n              d1 = offsetX + ${c} * (int(mod(float(pos), ${f}.) / ${a}.));\n\n              if(d1 < ${e[y]} && d1 >= 0) {\n\n                ch = int(mod(float(pos), ${a}.));\n\n                if (${b}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*O+n}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*O+n}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${x}\n\n        ${m.output} = result;\n      }\n    `}}class En{constructor(t,e,n,r,a){this.variableNames=["x"],this.outputShape=[];const o=e,s=t[3]-1;let i;this.outputShape=t;const u=`float(${n}) + float(${r}) * sum`;i=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${o}; j <= ${o}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${s}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${i};\n        setOutput(val);\n      }\n    `}}class Tn{constructor(t,e,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=n,this.alpha=r,this.beta=a,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${e})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${e} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${a})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${a});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}class Sn{constructor(t,e,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const o=e,s=t[3]-1;let i;this.outputShape=t;const u=`float(${n}) + float(${r}) * sum`;i=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${o};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${o}; j <= ${o}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${s}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${i};\n        setOutput(result);\n      }\n    `}}class kn{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.effectiveFilterHeight,n=t.effectiveFilterWidth;this.userCode=`\n      const ivec2 pads = ivec2(${e-1-t.padInfo.top}, ${n-1-t.padInfo.left});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${e};\n          wR += ${t.dilationHeight}) {\n          float dyR = float(dyRCorner + wR) / ${t.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${t.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${e*n-1} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${n} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Rn{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.effectiveFilterDepth,n=t.effectiveFilterHeight,r=t.effectiveFilterWidth;this.userCode=`\n      const ivec3 pads = ivec3(${e-1-t.padInfo.front}, ${n-1-t.padInfo.top}, ${r-1-t.padInfo.left});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${e};\n           wD += ${t.dilationDepth}) {\n          float dyD = float(dyDCorner + wD) / ${t.strideDepth}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${n};\n              wR += ${t.dilationHeight}) {\n            float dyR = float(dyRCorner + wR) / ${t.strideHeight}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${r};\n                wC += ${t.dilationWidth}) {\n              float dyC = float(dyCCorner + wC) / ${t.strideWidth}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${e*n*r-1} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${n} * ${r} +\n                  wR * ${r} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class An{constructor(t,e,n,r=!1,a=!1,o=!1,s=null,i=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n;const u=Math.ceil((r?t[1]:t[2])/2),c=r?"i * 2, rc.y":"rc.y, i * 2",l=a?"rc.z, i * 2":"i * 2, rc.z",d=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],p=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let h="",f="";s&&(h=i?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${s}\n        }`:`vec4 activation(vec4 x) {\n          ${s}\n        }`,f="result = activation(result);");const m=o?"result += getBiasAtOutCoords();":"";o&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights");let b="rc.x",g="rc.x";t[0]<e[0]?b=`int(min(float(rc.x), ${t[0]-1}.))`:e[0]<t[0]&&(g=`int(min(float(rc.x), ${e[0]-1}.))`),this.userCode=`\n      ${h}\n\n      const float sharedDimension = ${u}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${u}; i++) {\n          int batchA = ${b};\n          int batchB = ${g};\n          vec4 a = getMatrixA(batchA, ${c});\n          vec4 b = getMatrixB(batchB, ${l});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${d[0]} * ${p[0]});\n          result += (${d[1]} * ${p[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${m}\n\n        ${f}\n\n        setOutput(result);\n      }\n    `}}class Fn{constructor(t,e,n){this.variableNames=["probs"],this.outputShape=[t,n],this.userCode=`\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${e-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${e-1}));\n      }\n    `}getCustomSetupFunc(t){return(e,n)=>{null==this.seedLoc&&(this.seedLoc=e.getUniformLocation(n,"seed")),e.gl.uniform1f(this.seedLoc,t)}}}class Dn{constructor(t,e,n,r){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}class _n{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t;const e=t.length;if(0===e)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=se("rc",e),r=ye(e),a=function(t,e,n){if(1===t)return"rc > "+e[0];let r="";for(let a=t-2;a<t;a++)r+=`${n[a]} >= ${e[a]}`,a<t-1&&(r+="||");return r}(e,t,n),o=function(t,e,n,r){if(1===t)return"";const a=r.slice(-2);return`\n    int r = ${a[0]};\n    int c = ${a[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${e};\n    bool rEdge = rp1 >= ${n};\n  `}(e,t[t.length-1],t[t.length-2],n),s=function(t,e){const n=t.length,r=function(t,e){const n=[];for(let r=0;r<=1;r++)for(let a=0;a<=1;a++){let o=`${0===r?"r":"rp1"}, ${0===a?"c":"cp1"}`;for(let n=2;n<t;n++)o=e[e.length-1-n]+","+o;n.push(o)}return n}(n,e);return 1===n?`getA(rc),\n            rc + 1 >= ${t[0]} ? 0. : getA(rc + 1),\n            0, 0`:`getA(${r[0]}),\n          cEdge ? 0. : getA(${r[1]}),\n          rEdge ? 0. : getA(${r[2]}),\n          rEdge || cEdge ? 0. : getA(${r[3]})`}(t,n);this.userCode=`\n        void main() {\n          ${r} rc = getOutputCoords();\n\n          if(${a}) {\n            setOutput(vec4(0));\n          } else {\n            ${o}\n\n            setOutput(vec4(${s}));\n          }\n        }\n      `}}}class Mn{constructor(t,e,n){this.variableNames=["x"],this.outputShape=e.map((e,n)=>e[0]+t[n]+e[1]);const r=t.length,a=ye(r),o=e.map(t=>t[0]).join(","),s=e.map((e,n)=>e[0]+t[n]).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${a} start = ${a}(${o});\n      ${a} end = ${a}(${s});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(float(${n}));\n        } else {\n          ${a} coords = outC - start;\n          setOutput(getX(${i}));\n        }\n      }\n    `:`\n        int start = ${o};\n        int end = ${s};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(float(${n}));\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class Pn{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map((e,n)=>e[0]+t[n]+e[1]);const r=t.length,a=ye(r),o=e.map(t=>t[0]).join(","),s=e.map((e,n)=>e[0]+t[n]).join(","),i=se("rc",r),u=se("source",r),c=`${i[r-1]} < ${this.outputShape[r-1]}`,l=1===r?"source":`vec2(${u.slice(-2).join()})`,d=[a+" rc = outputLoc;",`${i[r-1]} += 1;\n       if(${c}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${i[r-2]} += 1;\n       if(${i[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${i[r-1]} += 1;\n         if(${c}) {`],p=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let h="";for(let f=0,m=1===r?2:4;f<m;f++)h+=`\n        ${d[f]}\n        if (${p}) {\n          result[${f}] = float(${n});\n        } else {\n          ${a} source = rc - start;\n          result[${f}] = getChannel(getX(${u.join()}), ${l});\n        }\n      `;h+=1===r?"} ":"}}",this.userCode=`\n      const ${a} start = ${a}(${o});\n      const ${a} end = ${a}(${s});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${h}\n        setOutput(result);\n      }\n    `}}class Bn{constructor(t,e,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const o=t.filterWidth,s=t.strideHeight,i=t.strideWidth,u=t.dilationHeight,c=t.dilationWidth,l=t.effectiveFilterHeight,d=t.effectiveFilterWidth,p=t.padInfo.top,h=t.padInfo.left;this.outputShape=t.outShape;const f="avg"===e;let m="0.0";if(f||(m="-1.0 / 1e-20"),n)return void(this.userCode=`\n        const ivec2 strides = ivec2(${s}, ${i});\n        const ivec2 pads = ivec2(${p}, ${h});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${l};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d};\n                wC += ${c}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value >= currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?a?`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`:`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`:`wR * ${d} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `);let b=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(b="avgValue / count");const g=4*Math.floor(o/4),y=o%4,x=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${s}, ${i});\n      const ivec2 pads = ivec2(${p}, ${h});\n      const float initializationValue = ${m};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${m});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${l};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${g}; wC += 4) {\n            int xC = xCCorner + wC * ${c};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              getValue(batch, xR, xC + 2 * ${c}, d),\n              getValue(batch, xR, xC + 3 * ${c}, d)\n            );\n\n            ${x}\n          }\n\n          int xC = xCCorner + ${g};\n          if (${1===y}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${x}\n          } else if (${2===y}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${x}\n          } else if (${3===y}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              getValue(batch, xR, xC + 2 * ${c}, d),\n              initializationValue\n            );\n\n            ${x}\n          }\n        }\n        setOutput(${b});\n      }\n    `}}class Ln{constructor(t,e,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const o=t.filterWidth,s=t.strideDepth,i=t.strideHeight,u=t.strideWidth,c=t.dilationDepth,l=t.dilationHeight,d=t.dilationWidth,p=t.effectiveFilterDepth,h=t.effectiveFilterHeight,f=t.effectiveFilterWidth,m=t.padInfo.front,b=t.padInfo.top,g=t.padInfo.left;this.outputShape=t.outShape;const y="avg"===e;let x="0.0";if(y||(x="-1.0 / 1e-20"),n)return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${s}, ${i}, ${u});\n        const ivec3 pads = ivec3(${m}, ${b}, ${g});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${p};\n              wD += ${c}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${h};\n                wR += ${l}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${d}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value >= currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?a?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${h} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `);let O=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(O="avgValue / count");const v=4*Math.floor(o/4),w=o%4,j=`\n      if (${y}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${s}, ${i}, ${u});\n      const ivec3 pads = ivec3(${m}, ${b}, ${g});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${p};\n            wD += ${c}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h};\n            wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${v}; wC += 4) {\n              int xC = xCCorner + wC * ${d};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${d}, ch)\n              );\n\n              ${j}\n            }\n\n            int xC = xCCorner + ${v};\n            if (${1===w}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${j}\n            } else if (${2===w}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${j}\n            } else if (${3===w}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                initializationValue\n              );\n\n              ${j}\n            }\n          }\n          setOutput(${O});\n        }\n      }\n    `}}class Vn{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:o}=t;this.outputShape=[r,o];let s="0.0",i="";"prod"===e?s="1.0":"min"===e?(s="1.0 / 1e-20",i="min"):"max"===e&&(s="-1.0 / 1e-20",i="max");let u=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===e?u="sumValue":"prod"===e?u="prodValue":"all"===e?u="allValue":"any"===e&&(u="anyValue");const c=4*Math.floor(n/4),l=n%4;let d=`\n      if (${"sum"===e}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===e}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${i}(values, minMaxValue);\n      }\n    `,p="vec4";"all"===e?(s="1.0",d="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",p="bvec4"):"any"===e&&(s="0.0",d="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",p="bvec4");let h="";a%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${s};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${h}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${s});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${c}; i += 4) {\n          int inIdx = inOffset + i;\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${d}\n        }\n\n        int inIdx = inOffset + ${c};\n        if (${1===l}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${2===l}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${3===l}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${d}\n        }\n        setOutput(${u});\n      }\n    `}}class zn{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t;let n="";for(let a=0;a<4;a++){let t="thisRC = rc;";a%2==1&&(t+="thisRC.z += 1;"),a>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${a>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${a}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${a>0?"}":""}\n      `}var r;this.userCode=`\n      ${r=e,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${ue(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${ce(t)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${t[1]};\n        int cols = ${t[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class Wn{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e.shape;const[,r,a]=e.shape,[,o,s]=t.shape,i=[n&&o>1?r-1:r,n&&s>1?a-1:a],u=[n&&o>1?o-1:o,n&&s>1?s-1:s],c=i[0]/u[0],l=i[1]/u[1],d=1/c,p=1/l,h=2*Math.ceil(d)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${c});\n        const float widthScale = float(${l});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${h});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${o}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${s}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}class Un{constructor(t,e,n,r){this.variableNames=["A"],this.outputShape=[];const[a,o,s,i]=t;this.outputShape=[a,e,n,i];const u=[r&&e>1?o-1:o,r&&n>1?s-1:s],c=[r&&e>1?e-1:e,r&&n>1?n-1:n];this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${o}.0, ${s}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(sourceFracIndexRC);\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class Kn{constructor(t,e,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,o,s,i]=t;this.outputShape=[a,e,n,i];const u=[r&&e>1?o-1:o,r&&n>1?s-1:s],c=[r&&e>1?e-1:e,r&&n>1?n-1:n];this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${o}.0, ${s}.0,\n                                     ${s}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = vec3(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(sourceFracIndexRC);\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${i-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}class Gn{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e.shape;const[,r,a]=e.shape,[,o,s]=t.shape,i=[n&&o>1?r-1:r,n&&s>1?a-1:a],u=[n&&o>1?o-1:o,n&&s>1?s-1:s],c=i[0]/u[0],l=i[1]/u[1],d=1/c,p=1/l,h=2*Math.ceil(d)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${c});\n        const float widthScale = float(${l});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${h});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${o}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${s}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${i[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${i[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}class Hn{constructor(t,e,n,r){this.variableNames=["A"],this.outputShape=[];const[a,o,s,i]=t;this.outputShape=[a,e,n,i];const u=[r&&e>1?o-1:o,r&&n>1?s-1:s],c=[r&&e>1?e-1:e,r&&n>1?n-1:n];this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${o}.0, ${s}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${r?"0.5":"0.0"})));\n\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class Xn{constructor(t,e){this.variableNames=["x"];const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=t,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${t[0]} - coord - 1));\n        }\n      `);const r=t.map((n,r)=>(n=>-1!==e.indexOf(n)&&1!==t[n]?`${t[n]} - coords[${n}] - 1`:`coords[${n}]`)(r)).join(","),a=ye(n);this.userCode=`\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class qn{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=t;const r=se("rc",n),a=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,o=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,s=ye(n);function i(n){const r=t.map((r,a)=>function(n,r){return-1!==e.indexOf(n)&&1!==t[n]?`${t[n]} - ${r[n]} - 1`:""+r[n]}(a,n));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${t[0]} - rc - 1),\n            ${t[0]} - rc - 1);\n          if(${a}){\n              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),\n                ${t[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${s} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(t){return i(t)}(r.slice())};\n          if(${a}){\n            result.g = ${function(t){return t[n-1]="("+t[n-1]+" + 1)",i(t)}(r.slice())};\n          }\n          if(${o}) {\n            result.b = ${function(t){return t[n-2]="("+t[n-2]+" + 1)",i(t)}(r.slice())};\n            if(${a}) {\n              result.a = ${function(t){return t[n-1]="("+t[n-1]+" + 1)",t[n-2]="("+t[n-2]+" + 1)",i(t)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}class Yn{constructor(t,e,n,r,a,o,s=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=o;const i=ye(a.length),u=ye(o.length);let c="";1===n?c="i":2===n&&(c="i, j");let l="";1===r?l="i":2===r&&(l="i, coords[1]"),this.userCode=`\n        ${i} strides = ${i}(${a});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${t}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${e}; j++) {\n              int index = round(getIndices(${c}));\n              flattenedIndex += index * ${e>1?"strides[j]":"strides"};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += getUpdates(${l});\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}class Qn{constructor(t,e){this.variableNames=["x","segmentIds"];const n=t.windowSize,r=t.batchSize,a=t.inSize,o=t.numSegments,s=o*Math.ceil(a/n);this.outputShape=[r,s];const i=4*Math.floor(n/4),u=n%4,c="\n        sumValue += dot(values, segFilter);\n    ";let l="";a%n>0&&(l=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `);let d="";a%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${l}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${d}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${o})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${o})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${c}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${c}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${c}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${c}\n        }\n        setOutput(sumValue);\n      }\n    `}}class Jn{constructor(t,e,n){let r,a;if(this.variableNames=["c","a","b"],this.outputShape=e,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)a="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],o=[],s=[];for(let r=0;r<e.length;r++)s.push(""+n[r]),r<t&&o.push(""+n[r]);r=o.join(),a=s.join()}const o=ye(n);this.userCode=`\n      void main() {\n        ${o} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${a}));\n        } else {\n          setOutput(getB(${a}));\n        }\n      }\n    `}}class Zn{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;const e=ye(this.rank),n=`uniform int start[${this.rank}];`,r=function(t){if(1===t)return"sourceLoc";if(t<=6)return tr.slice(0,t).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${t} is not yet supported`)}(this.rank);let a;a=`\n        ${e} sourceLoc;\n        ${e} coords = getOutputCoords();\n        ${t.map((t,e)=>`sourceLoc.${tr[e]} = start[${e}] + coords.${tr[e]};`).join("\n")}\n      `,this.userCode=`\n      ${n}\n      void main() {\n        ${a}\n        setOutput(getSource(${r}));\n      }\n    `}getCustomSetupFunc(t){if(t.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${t.length})`);return(e,n)=>{null==this.startLoc&&(this.startLoc=e.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||e.gl.uniform1iv(this.startLoc,t)}}}const tr=["x","y","z","w","u","v"];class er{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length;const e=ye(this.rank),n=se("coords",this.rank),r=se("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,o=`getChannel(getSource(${r.join()}), ${a})`,s=`\n      result.x = ${o};\n      if (++${n[this.rank-1]} < ${t[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${o};\n        --${r[this.rank-1]};\n      }\n    `,i=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${t[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${o};\n        if (++${n[this.rank-1]} < ${t[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${o};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${e}(${t.map((t,e)=>`start[${e}]`).join()});`:t.map((t,e)=>`${r[e]} = ${n[e]} + start[${e}];`).join("\n");this.userCode=`\n      uniform int start[${this.rank}];\n      void main() {\n        ${e} coords = getOutputCoords();\n        ${e} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${s}\n        ${i}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(t){if(t.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${t.length})`);return(e,n)=>{null==this.startLoc&&(this.startLoc=e.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||e.gl.uniform1iv(this.startLoc,t)}}}class nr{constructor(t,e,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,a=ye(n.length),o=ye(n.length);let s="";if(1===r)s="coords * strides + begin";else{let t=0;s=n.map((e,r)=>(t++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${t-1}] * strides[${r}] + begin[${r}]`)).join(",")}this.userCode=`\n      ${a} begin = ${a}(${t});\n      ${a} strides = ${a}(${e});\n\n      void main() {\n        ${o} coords = getOutputCoords();\n        setOutput(getX(${s}));\n      }\n    `}}class rr{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(t,e,n){const r=or(e,n),a=sr(t,r,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);const o=ar(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=o,this.log();const t=this.freeTextures[a].shift();return this.usedTextures[a].push(t),t}let s;return r===h.PACKED_2X2_FLOAT32?s=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):r===h.PACKED_2X2_FLOAT16?s=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):r===h.UNPACKED_FLOAT32?s=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):r===h.UNPACKED_FLOAT16?s=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):r===h.PACKED_4X1_UNSIGNED_BYTE&&(s=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[a].push(s),this.numUsedTextures++,this._numBytesAllocated+=o,this.log(),s}releaseTexture(t,e,n,r){if(null==this.freeTextures)return;const a=or(n,r),o=sr(e,a,r);o in this.freeTextures||(this.freeTextures[o]=[]);const i=ar(e,a,this.gpgpu.gl,this.gpgpu.textureConfig,r),u=Object(s.hb)().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==u&&this._numBytesAllocated>u?(this.gpgpu.deleteMatrixTexture(t),this._numBytesAllocated-=i):(this.freeTextures[o].push(t),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const c=this.usedTextures[o],l=c.indexOf(t);if(l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");c.splice(l,1),this.log()}log(){if(!this.logEnabled)return;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${this.numFreeTextures+this.numUsedTextures})`);const t=this._numBytesFree/this._numBytesAllocated;console.log("Bytes allocated: "+this._numBytesAllocated),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const t in this.freeTextures)this.freeTextures[t].forEach(t=>{this.gpgpu.deleteMatrixTexture(t)});for(const t in this.usedTextures)this.usedTextures[t].forEach(t=>{this.gpgpu.deleteMatrixTexture(t)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function ar(t,e,n,r,a){const o=function(t,e){switch(t){case h.PACKED_2X2_FLOAT32:return hn(e);case h.PACKED_2X2_FLOAT16:return mn(e);case h.UNPACKED_FLOAT32:return sn(e);case h.UNPACKED_FLOAT16:return cn(e);case h.PACKED_4X1_UNSIGNED_BYTE:return dn(e);default:throw new Error("Unknown physical texture type "+t)}}(e,r);let s;if(a){const[e,n]=b(t[0],t[1]);s=e*n}else{const[e,n]=f(t[0],t[1]);s=e*n}return s*function(t,e){if(e===t.R32F)return 4;if(e===t.R16F)return 2;if(e===t.RGBA32F)return 16;if(e===t.RGBA)return 16;if(e===t.RGBA16F)return 8;throw new Error("Unknown internal format "+e)}(n,o)}function or(t,e){if(t===p.UPLOAD)return h.PACKED_2X2_FLOAT32;if(t===p.RENDER||null==t)return function(t){return Object(s.hb)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?t?h.PACKED_2X2_FLOAT32:h.UNPACKED_FLOAT32:t?h.PACKED_2X2_FLOAT16:h.UNPACKED_FLOAT16}(e);if(t===p.DOWNLOAD||t===p.PIXELS)return h.PACKED_4X1_UNSIGNED_BYTE;throw new Error("Unknown logical texture type "+t)}function sr(t,e,n){return`${t[0]}_${t[1]}_${e}_${n}`}class ir{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let o=0;o<n.length;o++)n[o]=t[o]*e[o];this.outputShape=n,this.rank=n.length;const r=ye(this.rank),a=function(t){const e=t.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(1===e)return`imod(resRC, ${t[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let a=0;a<t.length;a++)r.push(`imod(${n[a]}, ${t[a]})`);return r.join()}(t);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}}class ur{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.userCode=`\n      float unaryOperation(float x) {\n        ${e}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const cr="return abs(x);",lr="if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",dr="if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",pr="return (x >= 0.0) ? x : (exp(x) - 1.0);",hr=`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${s.Y.SELU_SCALEALPHA};\n  float scale = ${s.Y.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`,fr="return -x;",mr="return ceil(x);",br="return floor(x);",gr="return exp(x);",yr="return exp(x) - 1.0;",xr=`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${s.Y.ERF_P};\n  float a1 = ${s.Y.ERF_A1};\n  float a2 = ${s.Y.ERF_A2};\n  float a3 = ${s.Y.ERF_A3};\n  float a4 = ${s.Y.ERF_A4};\n  float a5 = ${s.Y.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`,Or="return x;",vr="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",wr="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",jr="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n";class Ir{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${e}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class Cr{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t;const e=t.length,n=se("rc",e),r=ye(e),a=function(t,e){if(1===t)return"rc";let n="";for(let r=0;r<t;r++)n+=e[r],r<t-1&&(n+=",");return n}(e,n),o=n.slice(-2),s=e<=1?"rc":`vec2(${o.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${a});\n\n        setOutput(getChannel(packedInput, ${s}));\n      }\n    `}}const{segment_util:Nr}=s.Y,$r=s.mb.split,Er=s.mb.tile,Tr=s.mb.topkImpl,Sr=s.mb.whereImpl,kr={};function Rr(t,e=!1){if("linear"===t)return"return x;";if("relu"===t)return e?vr:lr;if("elu"===t)return e?jr:pr;if("relu6"===t)return e?wr:dr;if("prelu"===t)return e?Ne:Ie;throw new Error(`Activation ${t} has not been implemented for the WebGL backend.`)}class Ar extends s.w{constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.warnedAboutMemory=!1,this.warnedAboutCPUBackend=!1,this.pendingDeletes=0,this.disposed=!1,!Object(s.hb)().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==t){const t=l(Object(s.hb)().getNumber("WEBGL_VERSION"));this.binaryCache=((e=Object(s.hb)().getNumber("WEBGL_VERSION"))in kr||(kr[e]={}),kr[e]),this.gpgpu=new Cn(t),this.canvas=t.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=t,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=t.gl.canvas;var e;this.textureManager=new rr(this.gpgpu),this.numMBBeforeWarning=null==Object(s.hb)().global.screen?1024:Object(s.hb)().global.screen.height*Object(s.hb)().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new s.k(this,Object(s.gb)())}numDataIds(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes}write(t,e,n){if((Object(s.hb)().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Object(s.hb)().getBool("DEBUG"))&&this.checkNumericalProblems(t),"complex64"===n&&null!=t)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={};return this.texData.set(r,{shape:e,dtype:n,values:t,usage:p.UPLOAD,refCount:1,complexParentRefCount:0}),r}incRef(t){this.texData.get(t).refCount++}decRef(t){this.texData.has(t)&&this.texData.get(t).refCount--}move(t,e,n,r){if(Object(s.hb)().getBool("DEBUG")&&this.checkNumericalProblems(e),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:n,dtype:r,values:e,usage:p.UPLOAD,refCount:1,complexParentRefCount:0})}disposeIntermediateTensorInfo(t){const e=t.dataId;if(this.texData.has(e)){const t=this.texData.get(e);t.refCount--,t.refCount<1&&this.disposeData(e)}}readSync(t){const e=this.texData.get(t),{values:n,dtype:r,complexTensorInfos:a,slice:o,shape:i,isPacked:u}=e;if(null!=o){let e;e=u?new Ir(i,Or):new ur(i,Or);const n=this.runWebGLProgram(e,[{dataId:t,shape:i,dtype:r}],r),a=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(t);if("string"===r)return n;const c=null!=this.activeTimers;let l,d;if(c&&(l=s.Ib.now()),"complex64"===r){const t=this.readSync(a.real.dataId),e=this.readSync(a.imag.dataId);d=s.Y.mergeRealAndImagArrays(t,e)}else d=this.getValuesFromTexture(t);return c&&(this.downloadWaitMs+=s.Ib.now()-l),this.convertAndCacheOnCPU(t,d)}async read(t){if(this.pendingRead.has(t)){const e=this.pendingRead.get(t);return new Promise(t=>e.push(t))}const e=this.texData.get(t),{values:n,shape:r,slice:a,dtype:o,complexTensorInfos:i,isPacked:u}=e;if(null!=a){let e;e=u?new Ir(r,Or):new ur(r,Or);const n=this.runWebGLProgram(e,[{dataId:t,shape:r,dtype:o}],o),a=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(t);if(!Object(s.hb)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Object(s.hb)().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let c,l,d=null;if("complex64"!==o&&Object(s.hb)().get("WEBGL_BUFFER_SUPPORTED")){c=this.decode(t);const e=this.texData.get(c.dataId);d=this.gpgpu.createBufferFromTexture(e.texture,...m(r))}if(this.pendingRead.set(t,[]),"complex64"!==o&&await this.gpgpu.createAndWaitForFence(),"complex64"===o){const t=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]);l=s.Y.mergeRealAndImagArrays(t[0],t[1])}else if(null==d)l=this.getValuesFromTexture(t);else{const t=s.Ib.sizeFromShape(r);l=this.gpgpu.downloadFloat32MatrixFromBuffer(d,t)}null!=c&&this.disposeIntermediateTensorInfo(c);const p=this.convertAndCacheOnCPU(t,l),h=this.pendingRead.get(t);return this.pendingRead.delete(t),h.forEach(t=>t(p)),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t),this.pendingDeletes--),p}checkNumericalProblems(t){if(null!=t)for(let e=0;e<t.length;e++){const n=t[e];if(!x(n)){if(Object(s.hb)().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(t){const{shape:e,dtype:n,isPacked:r}=this.texData.get(t),a=s.Ib.sizeFromShape(e);if(Object(s.hb)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(t),r=this.texData.get(n.dataId),o=this.gpgpu.downloadMatrixFromPackedTexture(r.texture,...m(e)).subarray(0,a);return this.disposeIntermediateTensorInfo(n),o}const o=Object(s.hb)().getBool("WEBGL_PACK")&&!0===r,i=o?q(e):e,u=o?new Ye(i):new qe(i),c=this.runWebGLProgram(u,[{shape:i,dtype:n,dataId:t}],"float32"),l=this.texData.get(c.dataId),d=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture,l.texShape[0],l.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(c),d}async time(t){const e=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,t();const a=s.Ib.flatten(this.activeTimers.map(t=>t.query)).filter(t=>null!=t),o=s.Ib.flatten(this.activeTimers.map(t=>t.name)).filter(t=>null!=t);this.activeTimers=e,r&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(Object(s.hb)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const t=await Promise.all(a);i.kernelMs=s.Ib.sum(t),i.getExtraProfileInfo=()=>t.map((t,e)=>({name:o[e],ms:t})).map(t=>`${t.name}: ${t.ms}`).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Object(s.hb)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:s.Ib.now(),endMs:null}}endTimer(t){return Object(s.hb)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=s.Ib.now(),t)}async getQueryTime(t){return Object(s.hb)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.waitForQueryAndGetTime(t):t.endMs-t.startMs}disposeData(t){if(this.pendingDisposal.has(t))return;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),void this.pendingDeletes++;if(!this.texData.has(t))return;if(this.texData.get(t).complexParentRefCount>0)return void this.texData.get(t).refCount--;this.releaseGPUData(t);const{complexTensorInfos:e}=this.texData.get(t);null!=e&&(this.texData.get(e.real.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(e.real),this.texData.get(e.imag.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(e.imag)),this.texData.delete(t)}releaseGPUData(t){const{texture:e,dtype:n,texShape:r,usage:a,isPacked:o,slice:s}=this.texData.get(t),i=s&&s.origDataId||t,u=this.dataRefCount.get(i);u>1?this.dataRefCount.set(i,u-1):(this.dataRefCount.delete(i),null!=e&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(e,r,a,o)));const c=this.texData.get(t);c.texture=null,c.texShape=null,c.isPacked=!1,c.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture}getDataInfo(t){return this.texData.get(t)}getCPUBackend(){return Object(s.hb)().getBool("WEBGL_CPU_FORWARD")?(null==this.cpuBackend&&(this.cpuBackend=Object(s.gb)().findBackend("cpu")),this.cpuBackend):null}shouldExecuteOnCPU(t,e=128){const n=this.getCPUBackend();return this.warnedAboutCPUBackend||null!=n||(console.warn("Your application contains ops that are small enough to be executed on the CPU backend, however the CPU backend cannot be found. Consider importing the CPU backend (@tensorflow/tfjs-backend-cpu) for better performance."),this.warnedAboutCPUBackend=!0),null!=n&&t.every(t=>null==this.texData.get(t.dataId).texture&&s.Ib.sizeFromShape(t.shape)<e)}getGPGPUContext(){return this.gpgpu}slice(t,e,n){if(this.shouldExecuteOnCPU([t])){const r=Jt(this.texData.get(t.dataId).values,e,n,t.shape,t.dtype);return this.makeOutput(n,t.dtype,r)}if(0===s.Ib.sizeFromShape(n))return Object(s.Bb)([],n,t.dtype);const{isPacked:r}=this.texData.get(t.dataId),a=s.wb.isSliceContinous(t.shape,e,n);if(r||!a){const r=Object(s.hb)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new er(n):new Zn(n),a=r.getCustomSetupFunc(e);return this.compileAndRun(r,[t],null,a)}return this.uploadToGPU(t.dataId),this.shallowSlice(t,e,n)}shallowSlice(t,e,n){const r=this.texData.get(t.dataId),a=this.makeOutput(n,t.dtype),o=this.texData.get(a.dataId);Object.assign(o,r),o.shape=n,o.dtype=t.dtype;let i=s.wb.computeFlatOffset(e,t.strides);r.slice&&(i+=r.slice.flatOffset),o.slice={flatOffset:i,origDataId:r.slice&&r.slice.origDataId||t.dataId};const u=this.dataRefCount.get(o.slice.origDataId)||1;return this.dataRefCount.set(o.slice.origDataId,u+1),a}stridedSlice(t,e,n,r){const a=this.tryRunOnCpuOrThrow([t],()=>this.cpuBackend.stridedSlice(t,e,n,r));if(a)return a;const o=s.wb.computeOutShape(e,n,r);if(o.some(t=>0===t))return Object(s.Bb)([],o);const i=new nr(e,r,o);return this.compileAndRun(i,[t])}reverse(t,e){const n=Object(s.hb)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new qn(t.shape,e):new Xn(t.shape,e);return this.compileAndRun(n,[t])}neg(t){const e=this.tryRunOnCpuOrThrow([t],()=>this.cpuBackend.neg(t));if(e)return e;if(Object(s.hb)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,fr,t.dtype);const n=new ur(t.shape,fr);return this.compileAndRun(n,[t])}batchMatMul(t,e,n,r){const a=n?t.shape[2]:t.shape[1],o=r?e.shape[1]:e.shape[2],i=n?t.shape[1]:t.shape[2],u=Math.max(t.shape[0],e.shape[0]);if((1===a||1===o)&&i>1e3){n&&(t=Object(s.Fb)(t,[0,2,1])),r&&(e=Object(s.Fb)(e,[0,2,1]));const a=1===o?t:t.as3D(u,i,1),c=1===o?2:1,l=1===o?e.as3D(u,1,i):e;return s.ob(a,l).sum(c,!0)}const c=Object(s.Hb)(t.dtype,e.dtype),l=new An(t.shape,e.shape,[u,a,o],n,r);return this.compileAndRun(l,[t,e],c)}fusedBatchMatMul({a:t,b:e,transposeA:n,transposeB:r,bias:a,activation:o,preluActivationWeights:i}){const u=n?t.shape[2]:t.shape[1],c=r?e.shape[1]:e.shape[2],l=Math.max(t.shape[0],e.shape[0]),d=Object(s.Hb)(t.dtype,e.dtype),p=null!=a,h=null!=i,f=o?Rr(o,!0):null,m=new An(t.shape,e.shape,[l,u,c],n,r,p,f,h),b=[t,e];return a&&b.push(a),i&&b.push(i),this.compileAndRun(m,b,d)}localResponseNormalization4D(t,e,n,r,a){const o=Object(s.hb)().getBool("WEBGL_PACK_NORMALIZATION")?new Sn(t.shape,e,n,r,a):new En(t.shape,e,n,r,a);return this.compileAndRun(o,[t])}LRNGrad(t,e,n,r,a,o,s){const i=new Tn(e.shape,r,a,o,s);return this.compileAndRun(i,[e,n,t])}tile(t,e){if("string"===t.dtype){const n=this.readSync(t.dataId).map(t=>s.Ib.decodeString(t)),r=Object(s.ab)(t.shape,t.dtype,n);return Er(r,e)}const n=new ir(t.shape,e);return this.compileAndRun(n,[t])}pad(t,e,n){const r=Object(s.hb)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Pn(t.shape,e,n):new Mn(t.shape,e,n);return this.compileAndRun(r,[t])}gather(t,e,n){const r=this.tryRunOnCpuOrThrow([t,e],()=>this.cpuBackend.gather(t,e,n));if(r)return r;const a=new tn(t.shape,e.size,n);return this.compileAndRun(a,[t,e])}batchToSpaceND(t,e,n){s.Ib.assert(t.rank<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const r=e.reduce((t,e)=>t*e),a=s.Y.getReshaped(t.shape,e,r),o=s.Y.getPermuted(a.length,e.length),i=s.Y.getReshapedPermuted(t.shape,e,r),u=s.Y.getSliceBeginCoords(n,e.length),c=s.Y.getSliceSize(i,n,e.length);return Object(s.Fb)(t.reshape(a),o).reshape(i).slice(u,c)}spaceToBatchND(t,e,n){s.Ib.assert(t.rank<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const r=e.reduce((t,e)=>t*e),a=[[0,0]];a.push(...n);for(let s=1+e.length;s<t.shape.length;++s)a.push([0,0]);const o=t.pad(a),i=s.Y.getReshaped(o.shape,e,r,!1),u=s.Y.getPermuted(i.length,e.length,!1),c=s.Y.getReshapedPermuted(o.shape,e,r,!1),l=Object(s.Fb)(o.reshape(i),u);return Object(s.sb)(l,c)}reduce(t,e,n){const r=t.shape[0],a=t.shape[1],o=s.Y.computeOptimalWindowSize(a),i=Math.ceil(a/o),u=new Vn({windowSize:o,inSize:a,batchSize:r,outSize:i},e),c=this.compileAndRun(u,[t],n);return 1===c.shape[1]?c:this.reduce(c,e,n)}argReduce(t,e,n=null){let r=t.shape[0],a=t.shape[1];null!=n&&(r=n.shape[0],a=n.shape[1]);const o=s.Y.computeOptimalWindowSize(a),i={windowSize:o,inSize:a,batchSize:r,outSize:Math.ceil(a/o)},u=new ae(i,e,null==n),c=[t];null!=n&&c.push(n);const l=this.compileAndRun(u,c,"int32");return 1===l.shape[1]?l:this.argReduce(t,e,l)}argReducePacked(t,e,n=null){const r=null!=n?n.shape:t.shape,a=s.Y.computeOptimalWindowSize(r[r.length-1]),o=new ve(r,a,e,null==n),i=this.compileAndRun(o,null==n?[t]:[t,n],"int32");return i.rank===t.rank?this.argReducePacked(t,e,i):i}sum(t,e){s.Y.assertAxesAreInnerMostDims("sum",e,t.rank);const[n,r]=s.Y.computeOutAndReduceShapes(t.shape,e),a=s.Ib.sizeFromShape(r),o=t.as2D(-1,a),i=s.Ab(t.dtype);return this.reduce(o,"sum",i).reshape(n)}prod(t,e){const n=this.tryRunOnCpuOrThrow([t],()=>this.cpuBackend.prod(t,e));if(n)return n;const[r,a]=s.Y.computeOutAndReduceShapes(t.shape,e),o=s.Ib.sizeFromShape(a),i=t.as2D(-1,o),u=s.Ab(t.dtype);return this.reduce(i,"prod",u).reshape(r)}unsortedSegmentSum(t,e,n){let r=0;const a=s.Y.getAxesPermutation([r],t.rank);let o=t;null!=a&&(o=Object(s.Fb)(t,a),r=s.Y.getInnerMostAxes(1,t.rank)[0]);const i=Nr.computeOutShape(o.shape,r,n),u=s.Ib.sizeFromShape([o.shape[r]]),c=o.as2D(-1,u),l=s.Ab(t.dtype);let d=this.segOpCompute(c,"unsortedSegmentSum",e,l,n).reshape(i);return null!=a&&(d=Object(s.Fb)(d,s.Y.getUndoAxesPermutation(a))),d}segOpCompute(t,e,n,r,a){const o=t.shape[0],i=t.shape[1],u=Nr.segOpComputeOptimalWindowSize(i,a),c=new Qn({windowSize:u,inSize:i,batchSize:o,numSegments:a},e),l=this.compileAndRun(c,[t,n],r);return l.shape[1]===a?l:(n=Object(s.pb)(0,a).tile([i/u]),this.segOpCompute(l,e,n,r,a))}argMinMaxReduce(t,e,n){const r=[e];if(s.Y.assertAxesAreInnerMostDims("arg"+n.charAt(0).toUpperCase()+n.slice(1),r,t.rank),!Object(s.hb)().getBool("WEBGL_PACK_REDUCE")||t.rank<=2){const[e,a]=s.Y.computeOutAndReduceShapes(t.shape,r),o=s.Ib.sizeFromShape(a),i=t.as2D(-1,o);return this.argReduce(i,n).reshape(e)}return this.argReducePacked(t,n)}argMin(t,e){return this.argMinMaxReduce(t,e,"min")}argMax(t,e){return this.argMinMaxReduce(t,e,"max")}cumsum(t,e,n,r){if(e!==t.rank-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${t.rank-1} but got axis=`+e);const a=t.shape[e];let o=t;for(let s=0;s<=Math.ceil(Math.log2(a))-1;s++){const e=new ze(t.shape,!1,r),n=e.getCustomSetupFunc(s),a=o;o=this.compileAndRun(e,[o],o.dtype,n),a.dispose()}if(n){const e=new ze(t.shape,n,r),a=o;o=this.compileAndRun(e,[o]),a.dispose()}return o}equal(t,e){if(Object(s.hb)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(equal(a, b));\n","bool");const n=new Ce("return float(a == b);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}less(t,e){const n=this.tryRunOnCpuOrThrow([t,e],()=>this.cpuBackend.less(t,e));if(n)return n;if(Object(s.hb)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(lessThan(a, b));\n","bool");const r=new Ce("return float(a < b);",t.shape,e.shape);return this.compileAndRun(r,[t,e],"bool")}lessEqual(t,e){if(Object(s.hb)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(lessThanEqual(a, b));\n","bool");const n=new Ce("return float(a <= b);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}greater(t,e){const n=this.tryRunOnCpuOrThrow([t,e],()=>this.cpuBackend.greater(t,e));if(n)return n;if(Object(s.hb)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(greaterThan(a, b));\n","bool");const r=new Ce("return float(a > b);",t.shape,e.shape);return this.compileAndRun(r,[t,e],"bool")}greaterEqual(t,e){if(Object(s.hb)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(greaterThanEqual(a, b));\n","bool");const n=new Ce("return float(a >= b);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}logicalNot(t){const e=new ur(t.shape,"return float(!(x >= 1.0));");return this.compileAndRun(e,[t])}logicalAnd(t,e){if(Object(s.hb)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n","bool");const n=new Ce("return float(a >= 1.0 && b >= 1.0);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}logicalOr(t,e){if(Object(s.hb)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n","bool");const n=new Ce("return float(a >= 1.0 || b >= 1.0);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}select(t,e,n){const r=new Jn(t.rank,e.shape,e.rank);return this.compileAndRun(r,[t,e,n],Object(s.Hb)(e.dtype,n.dtype))}where(t){s.Y.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const e=t.dataSync();return Sr(t.shape,e)}topk(t,e,n){const r=t.dataSync();return Tr(r,t.shape,t.dtype,e,n)}min(t,e){s.Y.assertAxesAreInnerMostDims("min",e,t.rank);const[n,r]=s.Y.computeOutAndReduceShapes(t.shape,e),a=s.Ib.sizeFromShape(r),o=t.as2D(-1,a);return this.reduce(o,"min",o.dtype).reshape(n)}minimum(t,e){const n=this.tryRunOnCpuOrThrow([t,e],()=>this.cpuBackend.minimum(t,e));if(n)return n;const r=Object(s.hb)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new $e("\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",t.shape,e.shape):new Ce("\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",t.shape,e.shape);return this.compileAndRun(r,[t,e])}mod(t,e){const n=Object(s.hb)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new $e("\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",t.shape,e.shape):new Ce("if (b == 0.0) return NAN;\n  return mod(a, b);",t.shape,e.shape);return this.compileAndRun(n,[t,e])}maximum(t,e){const n=this.tryRunOnCpuOrThrow([t,e],()=>this.cpuBackend.maximum(t,e));if(n)return n;const r=Object(s.hb)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new $e("\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",t.shape,e.shape):new Ce("\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",t.shape,e.shape);return this.compileAndRun(r,[t,e])}all(t,e){s.Y.assertAxesAreInnerMostDims("all",e,t.rank);const[n,r]=s.Y.computeOutAndReduceShapes(t.shape,e),a=s.Ib.sizeFromShape(r),o=t.as2D(-1,a);return this.reduce(o,"all",o.dtype).reshape(n)}any(t,e){s.Y.assertAxesAreInnerMostDims("any",e,t.rank);const[n,r]=s.Y.computeOutAndReduceShapes(t.shape,e),a=s.Ib.sizeFromShape(r),o=t.as2D(-1,a);return this.reduce(o,"any",o.dtype).reshape(n)}floorDiv(t,e){if(Object(s.hb)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n","int32");const n=new Ce("\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",t.shape,e.shape);return this.compileAndRun(n,[t,e],"int32")}packedUnaryOp(t,e,n){const r=new Ir(t.shape,e);return this.compileAndRun(r,[t],n)}packedBinaryOp(t,e,n,r,a=!1){const o=new $e(n,t.shape,e.shape,a);return this.compileAndRun(o,[t,e],r)}makeComplexComponentTensorInfo(t,e){return{dataId:e.dataId,dtype:e.dtype,shape:t.shape}}addN(t){if(1===t.length)return t[0];if(t.length>Object(s.hb)().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const e=Math.floor(t.length/2),n=this.addN(t.slice(0,e)),r=this.addN(t.slice(e));return this.addN([n,r])}const e=t.map(t=>t.dtype).reduce((t,e)=>Object(s.Hb)(t,e)),n=t.map(t=>t.shape),r=Object(s.hb)().getBool("WEBGL_PACK")?new re(t[0].shape,n):new ne(t[0].shape,n);return this.compileAndRun(r,t,e)}pow(t,e){const n=Object(s.hb)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new $e("\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",t.shape,e.shape):new Ce("\nif(a < 0.0 && floor(b) < b){\n  return NAN;\n}\nif (b == 0.0) {\n  return 1.0;\n}\nreturn (round(mod(b, 2.0)) != 1) ?\n    pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",t.shape,e.shape),r=Object(s.Hb)(t.dtype,e.dtype);return this.compileAndRun(n,[t,e],r)}ceil(t){if(this.shouldExecuteOnCPU([t])){const e=Ut(this.texData.get(t.dataId).values,t.dtype);return this.makeOutput(t.shape,t.dtype,e)}if(Object(s.hb)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,mr,t.dtype);const e=new ur(t.shape,mr);return this.compileAndRun(e,[t])}floor(t){if(this.shouldExecuteOnCPU([t])){const e=Ht(this.texData.get(t.dataId).values,t.dtype);return this.makeOutput(t.shape,t.dtype,e)}if(Object(s.hb)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,br,t.dtype);const e=new ur(t.shape,br);return this.compileAndRun(e,[t])}sign(t){const e=new ur(t.shape,"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n");return this.compileAndRun(e,[t])}isNaN(t){const e=new ur(t.shape,"return float(isnan(x));");return this.compileAndRun(e,[t],"bool")}isInf(t){const e=new ur(t.shape,"return float(isinf(x));");return this.compileAndRun(e,[t],"bool")}isFinite(t){const e=new ur(t.shape,"return float(!isnan(x) && !isinf(x));");return this.compileAndRun(e,[t],"bool")}round(t){const e=new ur(t.shape,"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n");return this.compileAndRun(e,[t])}exp(t){if(this.shouldExecuteOnCPU([t])){const e=Kt(this.texData.get(t.dataId).values,t.dtype);return this.makeOutput(t.shape,t.dtype,e)}if(Object(s.hb)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,gr,t.dtype);const e=new ur(t.shape,gr);return this.compileAndRun(e,[t])}expm1(t){if(this.shouldExecuteOnCPU([t])){const e=Gt(this.texData.get(t.dataId).values,t.dtype);return this.makeOutput(t.shape,t.dtype,e)}if(Object(s.hb)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,yr,t.dtype);const e=new ur(t.shape,yr);return this.compileAndRun(e,[t])}softmax(t,e){const n=s.Ib.parseAxisParam([e],t.shape),r=Object(s.nb)(t,n),a=s.Y.expandShapeToKeepDim(r.shape,n),o=s.zb(t,r.reshape(a)),i=this.exp(o),u=this.sum(i,n).reshape(a);return Object(s.fb)(i,u)}log(t){if(this.shouldExecuteOnCPU([t])){const e=Xt(this.texData.get(t.dataId).values,t.dtype);return this.makeOutput(t.shape,t.dtype,e)}if(Object(s.hb)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",t.dtype);const e=new ur(t.shape,"if (x < 0.0) return NAN;\n  return log(x);");return this.compileAndRun(e,[t])}log1p(t){const e=new ur(t.shape,"return log(1.0 + x);");return this.compileAndRun(e,[t])}sqrt(t){const e=new ur(t.shape,"return sqrt(x);");return this.compileAndRun(e,[t])}rsqrt(t){if(this.shouldExecuteOnCPU([t])){const e=Qt(this.texData.get(t.dataId).values,t.dtype);return this.makeOutput(t.shape,t.dtype,e)}const e=new ur(t.shape,"return inversesqrt(x);");return this.compileAndRun(e,[t])}reciprocal(t){const e=new ur(t.shape,"return 1.0 / x;");return this.compileAndRun(e,[t])}relu(t){let e;return e=Object(s.hb)().getBool("WEBGL_PACK")?new Ir(t.shape,vr):new ur(t.shape,lr),this.compileAndRun(e,[t])}relu6(t){let e;return e=Object(s.hb)().getBool("WEBGL_PACK")?new Ir(t.shape,wr):new ur(t.shape,dr),this.compileAndRun(e,[t])}prelu(t,e){const n=Object(s.hb)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new $e(Ne,t.shape,e.shape):new Ce(Ie,t.shape,e.shape);return this.compileAndRun(n,[t,e])}elu(t){if(Object(s.hb)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,jr,t.dtype);const e=new ur(t.shape,pr);return this.compileAndRun(e,[t])}eluDer(t,e){const n=Object(s.hb)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new $e("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",t.shape,e.shape):new Ce("return (b >= 1.0) ? a : a * (b + 1.0);",t.shape,e.shape);return this.compileAndRun(n,[t,e])}selu(t){const e=new ur(t.shape,hr);return this.compileAndRun(e,[t])}clip(t,e,n){let r;r=Object(s.hb)().getBool("WEBGL_PACK_CLIP")?new Te(t.shape):new Ee(t.shape);const a=r.getCustomSetupFunc(e,n);return this.compileAndRun(r,[t],null,a)}abs(t){if(this.shouldExecuteOnCPU([t])&&"complex64"!==t.dtype){const e=zt(this.texData.get(t.dataId).values);return this.makeOutput(t.shape,t.dtype,e)}if(Object(s.hb)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,cr,t.dtype);const e=new ur(t.shape,cr);return this.compileAndRun(e,[t])}complexAbs(t){const e=this.texData.get(t.dataId),n=new Se(t.shape),r=[this.makeComplexComponentTensorInfo(t,e.complexTensorInfos.real),this.makeComplexComponentTensorInfo(t,e.complexTensorInfos.imag)];return this.compileAndRun(n,r)}sigmoid(t){const e=new ur(t.shape,"return 1.0 / (1.0 + exp(-1.0 * x));");return this.compileAndRun(e,[t])}softplus(t){const e=new ur(t.shape,"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n");return this.compileAndRun(e,[t])}asin(t){const e=new ur(t.shape,"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n");return this.compileAndRun(e,[t])}acos(t){const e=new ur(t.shape,"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n");return this.compileAndRun(e,[t])}atan(t){const e=new ur(t.shape,"if (isnan(x)) return x;\n  return atan(x);\n");return this.compileAndRun(e,[t])}sinh(t){const e=new ur(t.shape,"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n");return this.compileAndRun(e,[t])}cosh(t){const e=new ur(t.shape,"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n");return this.compileAndRun(e,[t])}tanh(t){const e=new ur(t.shape,"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n");return this.compileAndRun(e,[t])}asinh(t){const e=new ur(t.shape,"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));");return this.compileAndRun(e,[t])}acosh(t){const e=new ur(t.shape,"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\n  return log(x + sqrt(x * x - 1.0));");return this.compileAndRun(e,[t])}atanh(t){const e=new ur(t.shape,"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\n  return (log(1.0 + x) - log(1.0 - x)) / 2.0;");return this.compileAndRun(e,[t])}erf(t){const e=new ur(t.shape,xr);return this.compileAndRun(e,[t])}step(t,e){const n=new ur(t.shape,function(t=0){return`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t});\n  `}(e));return this.compileAndRun(n,[t])}conv2dByMatMul(t,e,n,r,a,o){const i=t.shape,u=this.texData.get(t.dataId),c="channelsLast"===n.dataFormat,l=i[2]%2!=0&&!!u.isPacked;if((1==i[0]*i[1]*i[2]||1===n.outChannels)&&n.inChannels>1e3||!Object(s.hb)().getBool("WEBGL_LAZILY_UNPACK")||!Object(s.hb)().getBool("WEBGL_PACK_BINARY_OPERATIONS")||!l){const u=c?i[0]*i[1]*i[2]:i[0]*i[2]*i[3],l=Object(s.sb)(t,[1,u,n.inChannels]),d=Object(s.sb)(e,[1,n.inChannels,n.outChannels]),p=this.fusedBatchMatMul({a:l,b:d,transposeA:!1,transposeB:!1,bias:r,activation:a,preluActivationWeights:o});return Object(s.sb)(p,n.outShape)}const d={dataId:t.dataId,shape:[1,c?i[0]*i[1]*(i[2]+1):i[0]*i[2]*(i[3]+1),n.inChannels],dtype:t.dtype},p=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,s.Ib.assert(J(u.shape,d.shape),()=>`packed reshape ${u.shape} to ${d.shape} isn't free`);const h=Object(s.sb)(e,[1,n.inChannels,n.outChannels]),f=this.fusedBatchMatMul({a:d,b:h,transposeA:!1,transposeB:!1,bias:r,activation:a,preluActivationWeights:o}),m=this.texData.get(f.dataId);return s.Ib.assert(m.isPacked,()=>"batchMatMul result is expected to be packed"),u.shape=p,m.shape=n.outShape,Object(s.gb)().makeTensorFromDataId(f.dataId,n.outShape,f.dtype)}conv2dWithIm2Row(t,e,n,r,a,o){const{filterWidth:s,filterHeight:i,inChannels:u,outWidth:c,outHeight:l,dataFormat:d}=n,p="channelsLast"===d,h=s*i*u,f=l*c,m=[h,f],b=t.squeeze([0]),g=e.reshape([1,h,-1]),y=new $n(m,b.shape,n),x=this.compileAndRun(y,[b]).reshape([1,m[0],m[1]]),O=null!=r,v=null!=o,w=a?Rr(a,!0):null,j=new An(x.shape,g.shape,[1,f,n.outChannels],!0,!1,O,w,v),I=[x,g];return r&&I.push(r),v&&I.push(o),this.compileAndRun(j,I).reshape(p?[1,l,c,n.outChannels]:[1,n.outChannels,l,c])}fusedConv2d({input:t,filter:e,convInfo:n,bias:r,activation:a,preluActivationWeights:o}){if(1===n.filterHeight&&1===n.filterWidth&&1===n.dilationHeight&&1===n.dilationWidth&&1===n.strideHeight&&1===n.strideWidth&&("SAME"===n.padInfo.type||"VALID"===n.padInfo.type))return this.conv2dByMatMul(t,e,n,r,a,o);if(Object(s.hb)().getBool("WEBGL_CONV_IM2COL")&&1===t.shape[0])return this.conv2dWithIm2Row(t,e,n,r,a,o);const i=null!=r,u=null!=o,c=a?Rr(a,!1):null,l=new Me(n,i,c,u),d=[t,e];return r&&d.push(r),o&&d.push(o),this.compileAndRun(l,d)}conv2d(t,e,n){if(1===n.filterHeight&&1===n.filterWidth&&1===n.dilationHeight&&1===n.dilationWidth&&1===n.strideHeight&&1===n.strideWidth&&("SAME"===n.padInfo.type||"VALID"===n.padInfo.type))return this.conv2dByMatMul(t,e,n);if(Object(s.hb)().getBool("WEBGL_CONV_IM2COL")&&1===t.shape[0])return this.conv2dWithIm2Row(t,e,n);const r=new Me(n);return this.compileAndRun(r,[t,e])}conv2dDerInput(t,e,n){const r=new Re(n);return this.compileAndRun(r,[t,e])}conv2dDerFilter(t,e,n){const r=new ke(n);return this.compileAndRun(r,[t,e])}fusedDepthwiseConv2D({input:t,filter:e,convInfo:n,bias:r,activation:a,preluActivationWeights:o}){const i=Object(s.hb)().getBool("WEBGL_PACK_DEPTHWISECONV")&&n.strideWidth<=2&&n.outChannels/n.inChannels==1,u=a?Rr(a,i):null,c=[t,e],l=null!=r,d=null!=o;let p;return l&&c.push(r),d&&c.push(o),i?(p=new Le(n,l,u,d),this.compileAndRun(p,c)):(p=new Be(n,l,u,d),this.compileAndRun(p,c))}depthwiseConv2D(t,e,n){let r;return Object(s.hb)().getBool("WEBGL_PACK_DEPTHWISECONV")&&n.strideWidth<=2&&n.outChannels/n.inChannels==1?(r=new Le(n),this.compileAndRun(r,[t,e])):(r=new Be(n),this.compileAndRun(r,[t,e]))}depthwiseConv2DDerInput(t,e,n){const r=new _e(n);return this.compileAndRun(r,[t,e])}depthwiseConv2DDerFilter(t,e,n){const r=new De(n);return this.compileAndRun(r,[t,e])}conv3d(t,e,n){const r=new Pe(n);return this.compileAndRun(r,[t,e])}conv3dDerInput(t,e,n){const r=new Fe(n);return this.compileAndRun(r,[t,e])}conv3dDerFilter(t,e,n){const r=new Ae(n);return this.compileAndRun(r,[t,e])}unstack(t,e){const n=t.shape[e],r=new Array(t.rank-1);let a=0;for(let u=0;u<t.rank;u++)u!==e&&(r[a++]=t.shape[u]);const o=new Array(t.rank).fill(0),s=t.shape.slice();s[e]=1;const i=new Array(n);for(let u=0;u<i.length;u++)o[e]=u,i[u]=this.slice(t,o,s).reshape(r);return i}avgPool3d(t,e){const n=new Ln(e,"avg",!1);return this.compileAndRun(n,[t],"float32")}avgPool3dBackprop(t,e,n){const r=new je(n);return this.compileAndRun(r,[t],e.dtype)}maxPool3d(t,e){const n=new Ln(e,"max",!1);return this.compileAndRun(n,[t],"float32")}maxPool3dBackprop(t,e,n,r){const a=new Ln(r,"max",!0),o=this.compileAndRun(a,[e]),s=new Rn(r),i=this.compileAndRun(s,[t,o],e.dtype);return o.dispose(),i}resizeBilinear(t,e,n,r){const a=Object(s.hb)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Kn(t.shape,e,n,r):new Un(t.shape,e,n,r);return this.compileAndRun(a,[t],"float32")}resizeBilinearBackprop(t,e,n){const r=new Wn(t,e,n);return this.compileAndRun(r,[t])}resizeNearestNeighbor(t,e,n,r){const a=new Hn(t.shape,e,n,r);return this.compileAndRun(a,[t])}resizeNearestNeighborBackprop(t,e,n){const r=new Gn(t,e,n);return this.compileAndRun(r,[t])}multinomial(t,e,n,r){const a=e?t:Object(s.xb)(t),o=new Fn(a.shape[0],a.shape[1],n),i=o.getCustomSetupFunc(r);return this.compileAndRun(o,[a],"int32",i)}oneHot(t,e,n,r){const a=new Dn(t.size,e,n,r);return this.compileAndRun(a,[t])}diag(t){const e=new Xe(t.size);return this.compileAndRun(e,[t])}cropAndResize(t,e,n,r,a,o){const s=new Ve(t.shape,e.shape,r,a,o);return this.compileAndRun(s,[t,e,n],"float32")}depthToSpace(t,e,n){s.Ib.assert(e>1,()=>"blockSize should be > 1 for depthToSpace, but was: "+e);const r=t.shape[0],a=("NHWC"===n?t.shape[1]:t.shape[2])*e,o=("NHWC"===n?t.shape[2]:t.shape[3])*e,i=("NHWC"===n?t.shape[3]:t.shape[1])/(e*e),u=new He("NHWC"===n?[r,a,o,i]:[r,i,a,o],e,n);return this.compileAndRun(u,[t])}split(t,e,n){return $r(t,e,n)}scatterND(t,e,n){const{sliceRank:r,numUpdates:a,sliceSize:o,strides:i,outputSize:u}=s.Y.calculateShapes(e,t,n),c=[u/o,o],l=t.reshape([a,r]),d=e.reshape([a,o]);if(0===u)return s.Y.reshapeTensor(Object(s.Bb)([]),n);const p=Object(s.tb)(0),h=new Yn(a,r,l.rank,d.rank,i,c);return this.compileAndRun(h,[d,l,p]).reshape(n)}sparseToDense(t,e,n,r){const{sliceRank:a,numUpdates:o,strides:i,outputSize:u}=s.Y.calculateShapes(e,t,n),c=new Yn(o,a,t.rank,e.rank,i,[u,1],!1);return this.compileAndRun(c,[e,t,r]).reshape(n)}gatherND(t,e){const n=e.shape,r=n[n.length-1],[a,o,i,u]=s.Y.prepareAndValidate(t,e),c=e.reshape([o,r]),l=t.reshape([t.size/i,i]),d=new en(r,u,[o,i]);return this.compileAndRun(d,[l,c]).reshape(a)}fill(t,e,n){if("string"===(n=n||s.Ib.inferDtype(e))){const r=s.Ib.getArrayFromDType(n,s.Ib.sizeFromShape(t));return r.fill(e),Object(s.gb)().makeTensor(r,t,n,this)}{const r=new Ze(t,e),a=r.getCustomSetupFunc(e);return this.compileAndRun(r,[],n,a)}}onesLike(t){if("string"===t.dtype)throw new Error("onesLike is not supported under string dtype");return this.fill(t.shape,1,t.dtype)}zerosLike(t){return this.fill(t.shape,"string"===t.dtype?"":0,t.dtype)}linspace(t,e,n){return s.Y.linspaceImpl(t,e,n)}makeTensorInfo(t,e,n){const r=this.write(n,t,e);return this.texData.get(r).usage=null,{dataId:r,shape:t,dtype:e}}makeOutput(t,e,n){const{dataId:r}=this.makeTensorInfo(t,e,n);return Object(s.gb)().makeTensorFromDataId(r,t,e,this)}unpackTensor(t){const e=new Cr(t.shape);return this.runWebGLProgram(e,[t],t.dtype)}packTensor(t){const e=new _n(t.shape);return this.runWebGLProgram(e,[t],t.dtype,null,!0)}packedReshape(t,e){const n=[H(t.shape),...X(t.shape)],r={dtype:t.dtype,shape:n,dataId:t.dataId},a=[H(e),...X(e)],o=new zn(a,n),s=this.runWebGLProgram(o,[r],t.dtype,null,!0);return{dataId:s.dataId,shape:e,dtype:s.dtype}}decode(t){const e=this.texData.get(t),{isPacked:n,shape:r,dtype:a}=e,o=q(r);let s;return s=n?new Ge(o):new Ke(o),{dtype:a,shape:r,dataId:this.runWebGLProgram(s,[{shape:o,dtype:a,dataId:t}],a,null,!0).dataId}}runWebGLProgram(t,e,n,r,a=!1){const o=this.makeTensorInfo(t.outputShape,n),i=this.texData.get(o.dataId);if(t.packedOutput&&(i.isPacked=!0),t.outPackingScheme===d.DENSE){const e=m(t.outputShape);i.texShape=e.map(t=>2*t)}if(null!=t.outTexUsage&&(i.usage=t.outTexUsage),0===s.Ib.sizeFromShape(o.shape))return i.values=s.Ib.getTypedArrayFromDType(o.dtype,0),o;const u=[],c=e.map(e=>{if("complex64"===e.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(e.dataId);if(null==n.texture){if(!t.packedInputs&&s.Ib.sizeFromShape(e.shape)<=Object(s.hb)().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:e.shape,texData:null,isUniform:!0,uniformValues:n.values};t.packedInputs&&(n.isPacked=!0,n.shape=e.shape)}else if(!!n.isPacked!=!!t.packedInputs)e=n.isPacked?this.unpackTensor(e):this.packTensor(e),u.push(e),n=this.texData.get(e.dataId);else if(n.isPacked&&!J(n.shape,e.shape)){const t=e,r=e.shape;e.shape=n.shape,e=this.packedReshape(e,r),u.push(e),n=this.texData.get(e.dataId),t.shape=r}return this.uploadToGPU(e.dataId),{shape:e.shape,texData:n,isUniform:!1}});this.uploadToGPU(o.dataId);const l={shape:o.shape,texData:i,isUniform:!1},p=function(t,e,n){let r="";e.concat(n).forEach(t=>{r+=`${t.shape}_${t.isUniform?"uniform":t.texData.texShape}_${null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0}`});let a=t.constructor.name;return a+="_"+r+"_"+t.userCode,a}(t,c,l),h=this.getAndSaveBinary(p,()=>function(t,e,n,r){const a=e.userCode,o=n.map((t,n)=>{const r={logicalShape:t.shape,texShape:t.isUniform?null:t.texData.texShape,isUniform:t.isUniform,isPacked:!t.isUniform&&t.texData.isPacked,flatOffset:null};return null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0&&(r.flatOffset=t.texData.slice.flatOffset),{name:e.variableNames[n],shapeInfo:r}}),i=o.map(t=>t.shapeInfo),u={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},c=function(t,e,n,r){const a=[];t.forEach(t=>{const e=s.Ib.sizeFromShape(t.shapeInfo.logicalShape);t.shapeInfo.isUniform?a.push(`uniform float ${t.name}${e>1?`[${e}]`:""};`):(a.push(`uniform sampler2D ${t.name};`),a.push(`uniform int offset${t.name};`))});const o=a.join("\n"),i=t.map(t=>function(t,e,n=!1){let r="";return r+=n?function t(e){switch(e.shapeInfo.logicalShape.length){case 0:return function(t){const e=t.name;return`\n    vec4 ${"get"+e.charAt(0).toUpperCase()+e.slice(1)}() {\n      return ${ie().texture2D}(${e}, halfCR);\n    }\n  `}(e);case 1:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),r=t.shapeInfo.texShape,a=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],o=ie();return`\n    vec4 ${n}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${a[0]}, ${a[1]}, index);\n      return ${o.texture2D}(${e}, uv);\n    }\n  `}(e);case 2:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t.shapeInfo.texShape,o=a[0],i=a[1],u=ie();if(null!=a&&s.Ib.arraysEqual(e,a))return`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${o}.0);\n\n        return ${u.texture2D}(${n}, uv);\n      }\n    `;const c=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`\n    vec4 ${r}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(e[1]/2)}, ${c[0]}, ${c[1]}, row, col);\n      return ${u.texture2D}(${n}, uv);\n    }\n  `}(e);case 3:return function(e){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),o=e.shapeInfo.texShape,s=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];if(1===n[0]){const r=[1,2],o=["b","row","col"];return`\n        ${t(xe(e,n.slice(1)))}\n        vec4 ${a}(int b, int row, int col) {\n          return ${a}(${Oe(o,r)});\n        }\n      `}const i=s[0],u=s[1],c=Math.ceil(n[2]/2);return`\n    vec4 ${a}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${i}, ${u}, ${c*Math.ceil(n[1]/2)}, ${c}, b, row, col);\n      return ${ie().texture2D}(${r}, uv);\n    }\n  `}(e);default:return function(t){const e=t.shapeInfo.logicalShape,n=e.length,r=t.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),o=t.shapeInfo.texShape,s=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],i=s[0],u=s[1],c=Math.ceil(e[n-1]/2);let l=c*Math.ceil(e[n-2]/2),d="int b, int row, int col",p=`b * ${l} + (row / 2) * ${c} + (col / 2)`;for(let h=2;h<n-1;h++)d=`int b${h}, `+d,l*=e[n-h-1],p=`b${h} * ${l} + `+p;return`\n    vec4 ${a}(${d}) {\n      int index = ${p};\n      int texR = index / ${u};\n      int texC = index - texR * ${u};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${u}, ${i});\n      return ${ie().texture2D}(${r}, uv);\n    }\n  `}(e)}}(t):function t(e){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(t.shapeInfo.isUniform)return`float ${n}() {return ${e};}`;const[r,a]=t.shapeInfo.texShape;if(1===r&&1===a)return`\n      float ${n}() {\n        return sampleTexture(${e}, halfCR);\n      }\n    `;const[o,s]=t.shapeInfo.texShape;return`\n    float ${n}() {\n      vec2 uv = uvFromFlat(${o}, ${s}, ${be(e)});\n      return sampleTexture(${e}, uv);\n    }\n  `}(e);case 1:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(t.shapeInfo.isUniform)return`\n      float ${n}(int index) {\n        ${ge(t)}\n      }\n    `;const r=t.shapeInfo.texShape,a=r[0],o=r[1];if(1===o&&1===a)return`\n      float ${n}(int index) {\n        return sampleTexture(${e}, halfCR);\n      }\n    `;const s=be(e);return 1===o?`\n      float ${n}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${s}) + 0.5) / ${a}.0);\n        return sampleTexture(${e}, uv);\n      }\n    `:1===a?`\n      float ${n}(int index) {\n        vec2 uv = vec2((float(index + ${s}) + 0.5) / ${o}.0, 0.5);\n        return sampleTexture(${e}, uv);\n      }\n    `:`\n    float ${n}(int index) {\n      vec2 uv = uvFromFlat(${a}, ${o}, index + ${s});\n      return sampleTexture(${e}, uv);\n    }\n  `}(e);case 2:return function(e){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),o=e.shapeInfo.texShape;if(null!=o&&s.Ib.arraysEqual(n,o))return`\n    float ${a}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${o[1]}.0, ${o[0]}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;const{newShape:i,keptDims:u}=s.Ib.squeezeShape(n);if(i.length<n.length){const n=["row","col"];return`\n      ${t(xe(e,i))}\n      float ${a}(int row, int col) {\n        return ${a}(${Oe(n,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${ge(e)}\n      }\n    `;const c=o[0],l=o[1],d=be(r);return 1===l?`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${d}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${c}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `:1===c?`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${d}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${l}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `:`\n  float ${a}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${d};\n    vec2 uv = uvFromFlat(${c}, ${l}, index);\n    return sampleTexture(${r}, uv);\n  }\n`}(e);case 3:return function(e){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),o=n[1]*n[2],i=n[2],{newShape:u,keptDims:c}=s.Ib.squeezeShape(n);if(u.length<n.length){const n=["row","col","depth"];return`\n        ${t(xe(e,u))}\n        float ${a}(int row, int col, int depth) {\n          return ${a}(${Oe(n,c)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${o}, ${i}, 1)));\n        ${ge(e)}\n      }\n    `;const l=e.shapeInfo.texShape,d=l[0],p=l[1],h=e.shapeInfo.flatOffset;return p===o&&null==h?`\n        float ${a}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${p}.0, ${d}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `:p===i&&null==h?`\n    float ${a}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}.0, ${d}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `:`\n      float ${a}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${o} + col * ${i} + depth + ${be(r)};\n        vec2 uv = uvFromFlat(${d}, ${p}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `}(e);case 4:return function(e){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),o=n[3],i=n[2]*o,u=n[1]*i,{newShape:c,keptDims:l}=s.Ib.squeezeShape(n);if(c.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${t(xe(e,c))}\n      float ${a}(int row, int col, int depth, int depth2) {\n        return ${a}(${Oe(n,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${u}, ${i}, ${o}, 1)));\n        ${ge(e)}\n      }\n    `;const d=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,h=p[0],f=p[1];return f===u&&null==d?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${o}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${h}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `:f===o&&null==d?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${h}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${u} + col * ${i} +\n          depth * ${o} + depth2;\n      vec2 uv = uvFromFlat(${h}, ${f}, index + ${be(r)});\n      return sampleTexture(${r}, uv);\n    }\n  `}(e);case 5:return function(e){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),o=n[4],i=n[3]*o,u=n[2]*i,c=n[1]*u,{newShape:l,keptDims:d}=s.Ib.squeezeShape(n);if(l.length<n.length){const n=["row","col","depth","depth2","depth3"];return`\n      ${t(xe(e,l))}\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        return ${a}(${Oe(n,d)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${u}, ${i}, ${o})) +\n          depth3;\n        ${ge(e)}\n      }\n    `;const p=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,f=h[0],m=h[1];return m===c&&null==p?`\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${u}, ${i}, ${o}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${m}.0, ${f}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `:m===o&&null==p?`\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${n[1]*n[2]*n[3]},\n               ${n[2]*n[3]}, ${n[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${m}.0, ${f}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${u} + depth * ${i} +\n          depth2 * ${o} + depth3 + ${be(r)};\n      vec2 uv = uvFromFlat(${f}, ${m}, index);\n      return sampleTexture(${r}, uv);\n    }\n  `}(e);case 6:return function(e){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),{newShape:o,keptDims:i}=s.Ib.squeezeShape(n);if(o.length<n.length){const n=["row","col","depth","depth2","depth3","depth4"];return`\n      ${t(xe(e,o))}\n      float ${a}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${a}(${Oe(n,i)});\n      }\n    `}const u=n[5],c=n[4]*u,l=n[3]*c,d=n[2]*l,p=n[1]*d;if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${p}, ${d}, ${l}, ${c})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${u}, 1)));\n        ${ge(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,f=e.shapeInfo.texShape,m=f[0],b=f[1];return b===p&&null==h?`\n      float ${a}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${d}, ${l}, ${c}, ${u})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${b}.0, ${m}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `:b===u&&null==h?`\n      float ${a}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${n[1]*n[2]*n[3]*n[4]},\n               ${n[2]*n[3]*n[4]},\n               ${n[3]*n[4]},\n               ${n[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${b}.0, ${m}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${p} + col * ${d} + depth * ${l} +\n          depth2 * ${c} + depth3 * ${u} + depth4 + ${be(r)};\n      vec2 uv = uvFromFlat(${m}, ${b}, index);\n      return sampleTexture(${r}, uv);\n    }\n  `}(e);default:throw new Error(n.length+"-D input sampling is not yet supported")}}(t),t.shapeInfo.logicalShape.length<=e.logicalShape.length&&(r+=n?function(t,e){const n=t.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",o=t.shapeInfo.logicalShape.length,i=e.logicalShape.length,u=de(t.shapeInfo.logicalShape,e.logicalShape),c=ye(i),l=i-o;let d;const p=["x","y","z","w","u","v"];d=0===o?"":i<2&&u.length>=1?"coords = 0;":u.map(t=>`coords.${p[t+l]} = 0;`).join("\n");let h="";h=i<2&&o>0?"coords":t.shapeInfo.logicalShape.map((t,e)=>"coords."+p[e+l]).join(", ");let f="return outputValue;";const m=1===s.Ib.sizeFromShape(t.shapeInfo.logicalShape),b=1===s.Ib.sizeFromShape(e.logicalShape);if(1!==o||m||b){if(m&&!b)f=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(u.length){const t=o-2,e=o-1;u.indexOf(t)>-1&&u.indexOf(e)>-1?f="return vec4(outputValue.x);":u.indexOf(t)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":u.indexOf(e)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}}else f="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${a}() {\n      ${c} coords = getOutputCoords();\n      ${d}\n      vec4 outputValue = get${r}(${h});\n      ${f}\n    }\n  `}(t,e):function(t,e){const n=t.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",o=t.shapeInfo.logicalShape.length,i=e.logicalShape.length;if(!t.shapeInfo.isUniform&&o===i&&null==t.shapeInfo.flatOffset&&s.Ib.arraysEqual(t.shapeInfo.texShape,e.texShape))return`\n      float ${a}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const u=ye(i),c=de(t.shapeInfo.logicalShape,e.logicalShape),l=i-o;let d;const p=["x","y","z","w","u","v"];d=0===o?"":i<2&&c.length>=1?"coords = 0;":c.map(t=>`coords.${p[t+l]} = 0;`).join("\n");let h="";return h=i<2&&o>0?"coords":t.shapeInfo.logicalShape.map((t,e)=>"coords."+p[e+l]).join(", "),`\n    float ${a}() {\n      ${u} coords = getOutputCoords();\n      ${d}\n      return get${r}(${h});\n    }\n  `}(t,e)),r}(t,e,r)).join("\n"),u=e.texShape,c=ie(),l=function(t){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${t.texture2D}(textureSampler, uv).r;\n    }\n  `}(c);let d,p,h=function(t){return`${t.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${t.varyingFs} vec2 resultUV;\n    ${t.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${t.defineSpecialNaN}\n    ${t.defineSpecialInf}\n    ${t.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${pe}\n    ${he}\n    ${fe}\n  `}(c);return e.isPacked?(d=function(t,e){switch(t.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return 1===n[0]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);\n    }\n  `}(0,e);case 2:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(s.Ib.arraysEqual(t,e))return`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));\n      }\n    `;const r=Math.ceil(t[1]/2);return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(t,e);case 3:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(t[2]/2),a=r*Math.ceil(t[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(t,e);default:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(t[t.length-1]/2),a=r*Math.ceil(t[t.length-2]/2);let o=a,s="",i="b, r, c";for(let u=2;u<t.length-1;u++)o*=t[t.length-u-1],s=`\n      int b${u} = index / ${o};\n      index -= b${u} * ${o};\n    `+s,i=`b${u}, `+i;return`\n    ivec${t.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      ${s}\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${t.length}(${i});\n    }\n  `}(t,e)}}(e.logicalShape,u),p=function(t){return`\n    void setOutput(vec4 val) {\n      ${t.output} = val;\n    }\n  `}(c)):(d=function(t,e){switch(t.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return 1===(n=e)[0]?`\n      int getOutputCoords() {\n        return int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return resTexRC.x * ${n[1]} + resTexRC.y;\n    }\n  `;case 2:return function(t,e){return s.Ib.arraysEqual(t,e)?`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));\n      }\n    `:1===t[1]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===t[0]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      int r = index / ${t[1]};\n      int c = index - r * ${t[1]};\n      return ivec2(r, c);\n    }\n  `}(t,e);case 3:return function(t,e){const n=ue(["r","c","d"],t);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${n}\n      return ivec3(r, c, d);\n    }\n  `}(t,e);case 4:return function(t,e){const n=ue(["r","c","d","d2"],t);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${n}\n      return ivec4(r, c, d, d2);\n    }\n  `}(t,e);case 5:return function(t,e){const n=ue(["r","c","d","d2","d3"],t);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},\n                             ${e[1]}));\n\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(t,e);case 6:return function(t,e){const n=ue(["r","c","d","d2","d3","d4"],t);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(t,e);default:throw new Error(t.length+"-D output sampling is not yet supported")}var n}(e.logicalShape,u),p=function(t){return`\n    void setOutput(float val) {\n      ${t.output} = vec4(val, 0, 0, 0);\n    }\n  `}(c)),r&&(h+=me),[h,l,p,o,d,i,n].join("\n")}(o,u,a,e.packedInputs),l=t.createProgram(c);let d=null;const p=t.getUniformLocation(l,"NAN",!1);1===Object(s.hb)().getNumber("WEBGL_VERSION")&&(d=t.getUniformLocation(l,"INFINITY",!1));const h={};for(let s=0;s<e.variableNames.length;s++){const n=e.variableNames[s],r=!1;h[n]=t.getUniformLocation(l,n,r),h["offset"+n]=t.getUniformLocation(l,"offset"+n,r)}return{program:e,source:c,webGLProgram:l,uniformLocations:h,inShapeInfos:i,outShapeInfo:u,infLoc:d,nanLoc:p}}(this.gpgpu,t,c,l)),f=null!=this.activeTimers;let b;if(f&&(b=this.startTimer()),function(t,e,n,r,a){Nn(e.inShapeInfos,n),Nn([e.outShapeInfo],[r]);const o=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?t.setOutputPackedMatrixTexture(o,i[0],i[1]):t.setOutputMatrixTexture(o,i[0],i[1]),t.setProgram(e.webGLProgram),1===Object(s.hb)().getNumber("WEBGL_VERSION")&&null!==e.infLoc&&t.gl.uniform1f(e.infLoc,1/0),null!==e.nanLoc&&t.gl.uniform1f(e.nanLoc,NaN),n.forEach((n,r)=>{const a=e.program.variableNames[r],o=e.uniformLocations[a],i=e.uniformLocations["offset"+a];if(null!=o)if(n.isUniform)if(s.Ib.sizeFromShape(n.shape)<2)t.gl.uniform1f(o,n.uniformValues[0]);else{let e=n.uniformValues;e instanceof Float32Array||(e=new Float32Array(e)),t.gl.uniform1fv(o,e)}else null!=n.texData.slice&&null!=i&&t.gl.uniform1i(i,n.texData.slice.flatOffset),t.setInputMatrixTexture(n.texData.texture,o,r)}),null!=a&&a(t,e.webGLProgram),t.executeProgram()}(this.gpgpu,h,c,l,r),u.forEach(t=>this.disposeIntermediateTensorInfo(t)),f&&(b=this.endTimer(b),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(b)})),!Object(s.hb)().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&!1===a){const t=this.unpackTensor(o);return this.disposeIntermediateTensorInfo(o),t}return o}compileAndRun(t,e,n,r,a=!1){const o=this.runWebGLProgram(t,e,n=n||e[0].dtype,r,a);return Object(s.gb)().makeTensorFromDataId(o.dataId,o.shape,o.dtype)}getAndSaveBinary(t,e){return t in this.binaryCache||(this.binaryCache[t]=e()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(Object(s.hb)().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Object(s.Eb)(()=>{if(!Object(s.hb)().get("WEBGL_RENDER_FLOAT32_ENABLED")){const t=Object(s.hb)().getBool("DEBUG");Object(s.hb)().set("DEBUG",!1);const e=this.abs(Object(s.tb)(1e-8)).dataSync()[0];if(Object(s.hb)().set("DEBUG",t),e>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(t){const e=this.texData.get(t),{shape:n,dtype:r,values:a,texture:o,usage:i,isPacked:u}=e;if(null!=o)return;const c=null!=this.activeTimers;let l;c&&(l=s.Ib.now());let d=e.texShape;if(null==d&&(d=Y(n,u),e.texShape=d),null!=a){const t=q(n);let o,i=d[1],h=d[0];const f=a instanceof Uint8Array;u?([i,h]=b(d[0],d[1]),o=new Je(t,[h,i],f)):o=new Qe(t,[h,i],f);const m=this.makeTensorInfo([h,i],r);this.texData.get(m.dataId).usage=f?p.PIXELS:p.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(m.dataId),i,h,a);const g=this.runWebGLProgram(o,[m],r,null,!0),y=this.texData.get(g.dataId);e.texture=y.texture,e.texShape=y.texShape,e.isPacked=y.isPacked,e.usage=y.usage,this.disposeIntermediateTensorInfo(m),this.texData.delete(g.dataId),e.values=null,c&&(this.uploadWaitMs+=s.Ib.now()-l)}else{const t=this.acquireTexture(d,i,r,u);e.texture=t}}convertAndCacheOnCPU(t,e){const n=this.texData.get(t),{dtype:r}=n;return this.releaseGPUData(t),null!=e&&(n.values=function(t,e){if("float32"===e||"complex64"===e)return t;if("int32"===e||"bool"===e){const n="int32"===e?new Int32Array(t.length):new Uint8Array(t.length);for(let e=0;e<n.length;++e)n[e]=Math.round(t[e]);return n}throw new Error("Unknown dtype "+e)}(e,r)),n.values}acquireTexture(t,e,n,r){if(this.numBytesInGPU+=this.computeBytes(t,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const t=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${t} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(t,e,r)}computeBytes(t,e){return t[0]*t[1]*s.Ib.bytesPerElement(e)}tryRunOnCpuOrThrow(t,e){if(this.shouldExecuteOnCPU(t))try{return e()}catch(n){if(Object(s.hb)().getBool("IS_TEST"))throw new Error("CPU forwarding failed")}return null}}const Fr="2.7.0";function Dr(){Object(s.hb)().set("WEBGL_FORCE_F16_TEXTURES",!0)}s.eb.isBrowser()&&Object(s.qb)("webgl",()=>new Ar,2);const _r={forceHalfFloat:Dr};function Mr(t){const{inputs:e,backend:n}=t,{x:r}=e;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const Pr={kernelName:s.u,backendName:"webgl",kernelFunc:Mr};function Br(t){const{inputs:e,backend:n}=t,{real:r,imag:a}=e,o=n.makeTensorInfo(r.shape,"complex64"),s=n.texData.get(o.dataId),i=Mr({inputs:{x:r},backend:n});n.texData.get(i.dataId).complexParentRefCount++;const u=Mr({inputs:{x:a},backend:n});return n.texData.get(u.dataId).complexParentRefCount++,s.complexTensorInfos={real:i,imag:u},o}const Lr={kernelName:s.h,backendName:"webgl",kernelFunc:Br};function Vr(t){return({inputs:e,backend:n})=>{const{x:r}=e,a=n,o=new ur(r.shape,t);return a.runWebGLProgram(o,[r],r.dtype)}}function zr({opSnippet:t,packedOpSnippet:e,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:a,dtype:o}){return({inputs:i,backend:u})=>{const{a:c,b:l}=i,d=u;if(r&&"complex64"===c.dtype){const e=d.texData.get(c.dataId),n=d.texData.get(l.dataId),[r,a]=[[e.complexTensorInfos.real,n.complexTensorInfos.real],[e.complexTensorInfos.imag,n.complexTensorInfos.imag]].map(e=>{const[n,r]=e,a={dataId:n.dataId,dtype:n.dtype,shape:c.shape},o={dataId:r.dataId,dtype:r.dtype,shape:l.shape},i=new Ce(t,c.shape,l.shape);return d.runWebGLProgram(i,[a,o],Object(s.Hb)(n.dtype,r.dtype))}),o=Br({inputs:{real:r,imag:a},backend:d});return d.disposeIntermediateTensorInfo(r),d.disposeIntermediateTensorInfo(a),o}const p=o||Object(s.Hb)(c.dtype,l.dtype);if(d.shouldExecuteOnCPU([c,l])&&null!=a){const t=d.texData.get(c.dataId),e=d.texData.get(l.dataId),[n,r]=a(c.shape,l.shape,t.values,e.values,p),o=d.makeTensorInfo(r,p);return d.texData.get(o.dataId).values=n,o}let h;return h=Object(s.hb)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=e?new $e(e,c.shape,l.shape,n):new Ce(t,c.shape,l.shape),d.runWebGLProgram(h,[c,l],p)}}const Wr="return a + b;",Ur=zr({opSnippet:Wr,packedOpSnippet:Wr,supportsComplex:!0,cpuKernelImpl:Wt}),Kr={kernelName:s.b,backendName:"webgl",kernelFunc:Ur},Gr=zr({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),Hr={kernelName:s.c,backendName:"webgl",kernelFunc:Gr},Xr={kernelName:s.d,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e;pt(a,"avgPool");const{filterSize:o,strides:i,pad:u,dimRoundingMode:c}=r;s.Ib.assert(s.Y.eitherStridesOrDilationsAreOne(i,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`);const l=s.Y.computePool2DInfo(a.shape,o,i,1,u,c);if(1===l.filterWidth&&1===l.filterHeight&&s.Ib.arraysEqual(l.inShape,l.outShape))return Mr({inputs:{x:a},backend:n});const d=new Bn(l,"avg",!1);return n.runWebGLProgram(d,[a],"float32")}},qr={kernelName:s.e,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:a,input:o}=e,i=o;pt([a,o],"avgPoolBackprop");const{filterSize:u,strides:c,pad:l}=r,d=s.Y.computePool2DInfo(i.shape,u,c,1,l),p=new we(d);return n.runWebGLProgram(p,[a],i.dtype)}};class Yr{constructor(t,e,n,r,a,o){this.outputShape=[],this.variableNames=["x","mean","variance"],s.Y.assertAndGetBroadcastShape(t,e),s.Y.assertAndGetBroadcastShape(t,n);let i="0.0";null!=r&&(s.Y.assertAndGetBroadcastShape(t,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let u="1.0";null!=a&&(s.Y.assertAndGetBroadcastShape(t,a),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${u};\n        float inv = scale * inversesqrt(variance + float(${o}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class Qr{constructor(t,e,n,r,a,o){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],s.Y.assertAndGetBroadcastShape(t,e),s.Y.assertAndGetBroadcastShape(t,n);let i="vec4(0.0)";null!=r&&(s.Y.assertAndGetBroadcastShape(t,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let u="vec4(1.0)";null!=a&&(s.Y.assertAndGetBroadcastShape(t,a),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${u};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${o}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const Jr={kernelName:s.s,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,mean:a,variance:o,offset:i,scale:u}=t;s.Ib.assert(a.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),s.Ib.assert(null==i||a.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),s.Ib.assert(null==u||a.shape.length===u.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:c}=n;null==c&&(c=.001);const l=[r,a,o];let d=null;null!=i&&(d=i.shape,l.push(i));let p=null;null!=u&&(p=u.shape,l.push(u));const h=Object(s.hb)().getBool("WEBGL_PACK_NORMALIZATION")?new Qr(r.shape,a.shape,o.shape,d,p,c):new Yr(r.shape,a.shape,o.shape,d,p,c);return e.runWebGLProgram(h,l,l[0].dtype)}},Zr=zr({opSnippet:"return float(a != b);",dtype:"bool"}),ta={kernelName:s.I,backendName:"webgl",kernelFunc:Zr};function ea(t){const{inputs:e,backend:n}=t,{input:r}=e;return Mr({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const na={kernelName:s.J,backendName:"webgl",kernelFunc:ea},ra={kernelName:s.f,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:r,attrs:a}=e,{x:o}=n,{dtype:i}=a;if("complex64"===i){if("complex64"===o.dtype)return Mr({inputs:{x:o},backend:r});const e=s.Jb(o.shape),n=t({inputs:{x:o},backend:r,attrs:{dtype:"float32"}}),a=Br({inputs:{real:n,imag:e},backend:r});return e.dispose(),r.disposeIntermediateTensorInfo(n),a}if("complex64"===o.dtype){const e=ea({inputs:{input:o},backend:r}),n=t({inputs:{x:e},backend:r,attrs:{dtype:i}});return r.disposeIntermediateTensorInfo(e),n}if(!s.Ib.hasEncodingLoss(o.dtype,i)){const t=Mr({inputs:{x:o},backend:r});return{dataId:t.dataId,shape:t.shape,dtype:i}}if("int32"===i)return function(t,e){const n=new ur(t.shape,"return float(int(x));"),r=e.runWebGLProgram(n,[t],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(o,r);if("bool"===i){const t=r.makeTensorInfo([],"bool",s.Ib.getTypedArrayFromDType("bool",1)),e=Zr({inputs:{a:o,b:t},backend:r});return r.disposeIntermediateTensorInfo(t),e}throw new Error(`Error in Cast: failed to cast ${o.dtype} to ${i}`)}};class aa{constructor(t){this.outputShape=[],this.outputShape=s.Y.computeOutShape(t,1),this.variableNames=t.map((t,e)=>"T"+e);const e=new Array(t.length-1);e[0]=t[0][1];for(let r=1;r<e.length;r++)e[r]=e[r-1]+t[r][1];const n=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let r=1;r<e.length;r++)n.push(`else if (yC < ${e[r]}) setOutput(getT${r}(yR, yC-${e[r-1]}));`);n.push(`else setOutput(getT${e.length}(yR, yC-${e[e.length-1]}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class oa{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=s.Y.computeOutShape(t,e);const n=this.outputShape,r=n.length,a=ye(r),o=se("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=t.map((t,e)=>"T"+e);const u=new Array(t.length-1);u[0]=t[0][e];for(let s=1;s<u.length;s++)u[s]=u[s-1]+t[s][e];const c=i[e],l=i.slice(-2),d=i.join();let p=`if (${c} < ${u[0]}) {\n        return getChannel(\n            getT0(${d}), vec2(${l.join()}));\n        }`;for(let s=1;s<u.length;s++){const t=u[s-1];p+=`\n        if (${c} < ${u[s]}  && ${c} >= ${u[s-1]}) {\n          return getChannel(\n            getT${s}(${sa(i,c,t)}),\n            vec2(${sa(l,c,t)}));\n        }`}const h=u[u.length-1];p+=`\n        return getChannel(\n          getT${u.length}(${sa(i,c,h)}),\n          vec2(${sa(l,c,h)}));`,this.userCode=`\n      float getValue(${i.map(t=>"int "+t)}) {\n        ${p}\n      }\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${o}), 0., 0., 0.);\n\n        ${o[r-1]} = ${o[r-1]} + 1;\n        if (${o[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${o});\n        }\n\n        ${o[r-2]} = ${o[r-2]} + 1;\n        if (${o[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${o});\n        }\n\n        ${o[r-1]} = ${o[r-1]} - 1;\n        if (${o[r-2]} < ${n[r-2]} &&\n            ${o[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${o});\n        }\n        setOutput(result);\n      }\n    `}}function sa(t,e,n){const r=t.indexOf(e);return t.map((t,e)=>e===r?`${t} - ${n}`:t).join()}function ia(t){const{inputs:e,backend:n}=t,{input:r}=e;return Mr({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const ua={kernelName:s.v,backendName:"webgl",kernelFunc:ia};function ca(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{shape:o}=r,i=n,u=s.Ib.sizeFromShape(a.shape),c=s.Ib.inferFromImplicitShape(o,u),l=s.Ib.sizeFromShape(c);s.Ib.assert(u===l,()=>`The new shape (${c}) has ${l} elements and the old shape (${a.shape}) has ${u} elements. The new shape and old shape must have the same number of elements.`);const d=i.texData.get(a.dataId);return!d.isPacked||J(a.shape,c)||null!==d.texture&&J(d.shape,c)?(i.incRef(a.dataId),{dataId:a.dataId,shape:c,dtype:a.dtype}):function(t,e,n){const r=[H(t.shape),...X(t.shape)],a={dtype:t.dtype,shape:r,dataId:t.dataId},o=[H(e),...X(e)],s=new zn(o,r),i=n.runWebGLProgram(s,[a],t.dtype,null,!0);return{dataId:i.dataId,shape:e,dtype:i.dtype}}(a,c,i)}const la={kernelName:s.K,backendName:"webgl",kernelFunc:ca},da={kernelName:s.i,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{axis:a}=r,o=s.Ib.parseAxisParam(a,e[0].shape)[0],i=s.Y.computeOutShape(e.map(t=>t.shape),o);if(0===s.Ib.sizeFromShape(i))return n.makeTensorInfo(i,e[0].dtype,[]);const u=e.filter(t=>s.Ib.sizeFromShape(t.shape)>0);if(1===u.length)return u[0];const c=u.map(t=>t.shape);return s.Y.assertParamsConsistent(c,o),function t(e,n,r){const a=e[0].dtype;if("complex64"===a){const a=e.map(t=>ea({inputs:{input:t},backend:r})),o=e.map(t=>ia({inputs:{input:t},backend:r})),s=t(a,n,r),i=t(o,n,r),u=Br({inputs:{real:s,imag:i},backend:r});return a.forEach(t=>r.disposeIntermediateTensorInfo(t)),o.forEach(t=>r.disposeIntermediateTensorInfo(t)),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),u}if(e.length>Object(s.hb)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const a=Math.floor(e.length/2),o=t(e.slice(0,a),n,r),s=t(e.slice(a),n,r),i=t([o,s],n,r);return r.disposeIntermediateTensorInfo(o),r.disposeIntermediateTensorInfo(s),i}if(Object(s.hb)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const t=new oa(e.map(t=>t.shape),n);return r.runWebGLProgram(t,e,a)}const o=s.Y.computeOutShape(e.map(t=>t.shape),n),i=e.map(t=>ca({inputs:{x:t},attrs:{shape:[-1,s.Ib.sizeFromShape(t.shape.slice(n))]},backend:r})),u=new aa(i.map(t=>t.shape)),c=r.runWebGLProgram(u,i,a);i.forEach(t=>r.disposeIntermediateTensorInfo(t));const l=ca({inputs:{x:c},attrs:{shape:o},backend:r});return r.disposeIntermediateTensorInfo(c),l}(u,o,n)}},pa=Vr("if (isnan(x)) return x;\n  return cos(x);\n"),ha={kernelName:s.j,backendName:"webgl",kernelFunc:pa},fa=zr({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),ma={kernelName:s.l,backendName:"webgl",kernelFunc:fa};class ba{constructor(t,e,n){this.variableNames=["real","imag"];const r=e[1];this.outputShape=e;const a=n?"2.0 * "+Math.PI:"-2.0 * "+Math.PI,o=n?r+".0":"1.0";let s;if("real"===t)s="return real * expR - imag * expI;";else{if("imag"!==t)throw new Error(`FFT component must be either "real" or "imag", got ${t}.`);s="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${a};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${s}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${o};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function ga(t,e,n){const r=n.texData.get(t.dataId),a=s.Ib.sizeFromShape(t.shape),o=t.shape[t.shape.length-1],i=ca({inputs:{x:t},backend:n,attrs:{shape:[a/o,o]}}).shape,u=new ba("real",i,e),c=new ba("imag",i,e),l=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:i},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:i}],d=n.runWebGLProgram(u,l,"float32"),p=n.runWebGLProgram(c,l,"float32"),h=Br({inputs:{real:d,imag:p},backend:n});n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p);const f=ca({inputs:{x:h},backend:n,attrs:{shape:t.shape}});return n.disposeIntermediateTensorInfo(f),f}const ya={kernelName:s.o,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e;return ga(r,!1,n)}};class xa{constructor(t){this.variableNames=["Image"],this.outputShape=[];const e=t[2];this.outputShape=t,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${e} - x;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${e}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const Oa={kernelName:s.p,backendName:"webgl",kernelFunc:({inputs:t,backend:e})=>{const{image:n}=t,r=e,a=new xa(n.shape);return r.runWebGLProgram(a,[n],n.dtype)}};class va{constructor(t){this.variableNames=["A"];const e=ie(),[n,r]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${e.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class wa{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const e=ie(),[n,r]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${e.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${e.output} = result;\n      }\n    `}}const ja={kernelName:s.r,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t;let{pixels:a}=e;const{numChannels:o}=r,i="undefined"!=typeof HTMLVideoElement&&a instanceof HTMLVideoElement,u="undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement,[c,l]=i?[a.videoWidth,a.videoHeight]:[a.width,a.height],d=[l,c],h=[l,c,o];(u||i)&&(null==Ia&&(Ia=document.createElement("canvas").getContext("2d")),Ia.canvas.width=c,Ia.canvas.height=l,Ia.drawImage(a,0,0,c,l),a=Ia.canvas);const f=n.makeTensorInfo(d,"int32");n.texData.get(f.dataId).usage=p.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(f.dataId),a);const m=Object(s.hb)().getBool("WEBGL_PACK")?new wa(h):new va(h),b=n.runWebGLProgram(m,[f],"int32");return n.disposeData(f.dataId),b}};let Ia;const Ca={kernelName:s.t,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e;return ga(r,!0,n)}};class Na{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:o}=t;this.outputShape=[r,o];const i=4*Math.floor(n/4),u=n%4;let c="sumValue += dot(values, ones);";if(null!=e){const t=1/e;c=`sumValue += dot(values * ${s.Ib.isInt(t)?t.toPrecision(2):t}, ones);`}let l="";a%n>0&&(l=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${l}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${c}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===u}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${c}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${c}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${c}\n        }\n        setOutput(sumValue);\n      }\n    `}}function $a(t,e,n,r){const a=function(t){const e=[];for(;0===e.length||1!==e[e.length-1].outSize;){const n=e.length?e[e.length-1].outSize:t[1],r=s.Y.computeOptimalWindowSize(n);e.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return e}(t.shape);let o=t;for(let s=0;s<a.length;s++){const{inSize:i,windowSize:u,outSize:c}=a[s];let l,d;l="mean"===n?0===s?new Na({windowSize:u,inSize:i,batchSize:t.shape[0],outSize:c},i):new Na({windowSize:u,inSize:i,batchSize:t.shape[0],outSize:c}):new Vn({windowSize:u,inSize:i,batchSize:t.shape[0],outSize:c},n),d=o,o=r.runWebGLProgram(l,[o],e),d.dataId!==t.dataId&&r.disposeIntermediateTensorInfo(d)}return o}class Ea{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let o=0;o<n.length;o++)n[o]=t[e[o]];this.outputShape=n,this.rank=n.length;const r=ye(this.rank),a=function(t){const e=t.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(e);for(let a=0;a<t.length;a++)r[t[a]]=n[a];return r.join()}(e);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${a}));\n    }\n    `}}class Ta{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(t.length);for(let c=0;c<n.length;c++)n[c]=t[e[c]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=ye(this.rank),a=oe("rc",this.rank),o=new Array(this.rank);for(let c=0;c<e.length;c++)o[e[c]]=a[c];const s=`vec2(${o.slice(-2).join()})`,i=`++${a[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${o.join()}), ${s})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${i}) {\n        result[1] = ${u};\n      }\n      --${a[this.rank-1]};\n      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${i}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function Sa(t,e,n){const r=Object(s.hb)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Ta(t.shape,e):new Ea(t.shape,e);return n.runWebGLProgram(r,[t],t.dtype)}const ka={kernelName:s.y,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{reductionIndices:a,keepDims:o}=e,i=n,u=r.shape.length,c=s.Ib.parseAxisParam(a,r.shape);let l=c;const d=s.Y.getAxesPermutation(l,u),p=null!=d,h=i.shouldExecuteOnCPU([r]);let f=r;if(p){if(h){const t=i.texData.get(f.dataId).values,e=new Array(u);for(let a=0;a<e.length;a++)e[a]=r.shape[d[a]];const n=te(t,r.shape,r.dtype,d,e);f=i.makeTensorInfo(e,r.dtype),i.texData.get(f.dataId).values=n}else f=Sa(r,d,i);l=s.Y.getInnerMostAxes(l.length,u)}s.Y.assertAxesAreInnerMostDims("max",l,u);const[m,b]=s.Y.computeOutAndReduceShapes(f.shape,l);let g,y=m;if(o&&(y=s.Y.expandShapeToKeepDim(m,c)),h){const t=i.texData.get(f.dataId),e=qt(t.values,s.Ib.sizeFromShape(b),y,r.dtype);g=i.makeTensorInfo(y,r.dtype),i.texData.get(g.dataId).values=e}else g=function(t,e,n,r){const a=s.Ib.sizeFromShape(e),o=ca({inputs:{x:t},attrs:{shape:[s.Ib.sizeFromShape(t.shape)/a,a]},backend:r}),i=$a(o,t.dtype,"max",r),u=ca({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(o),r.disposeIntermediateTensorInfo(i),u}(f,b,y,i);return p&&i.disposeIntermediateTensorInfo(f),g}},Ra={kernelName:s.z,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e;pt(a,"maxPool");const{filterSize:o,strides:i,pad:u,dimRoundingMode:c}=r;s.Ib.assert(s.Y.eitherStridesOrDilationsAreOne(i,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`);const l=s.Y.computePool2DInfo(a.shape,o,i,1,u,c);if(1===l.filterWidth&&1===l.filterHeight&&s.Ib.arraysEqual(l.inShape,l.outShape))return Mr({inputs:{x:a},backend:n});const d=new Bn(l,"max",!1);return n.runWebGLProgram(d,[a],a.dtype)}},Aa={kernelName:s.A,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:a,input:o,output:i}=e,u=o;pt([o,i],"maxPoolBackprop");const{filterSize:c,strides:l,pad:d,dimRoundingMode:p}=r,h=s.Y.computePool2DInfo(u.shape,c,l,1,d,p),f=new Bn(h,"max",!0),m=n.runWebGLProgram(f,[u],u.dtype),b=new kn(h),g=n.runWebGLProgram(b,[a,m],u.dtype);return n.disposeIntermediateTensorInfo(m),g}},Fa={kernelName:s.B,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{filterSize:a,strides:o,pad:i,includeBatchInIndex:u}=e,c=n;s.Ib.assert(4===r.shape.length,()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`);const l=[1,1];s.Ib.assert(s.Y.eitherStridesOrDilationsAreOne(o,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${l}'`);const d=s.Y.computePool2DInfo(r.shape,a,o,l,i),[p,h]=function(t,e,n,r){let a=new Bn(n,"max",!1);const o=r.runWebGLProgram(a,[t],"float32");return a=new Bn(n,"max",!0,!0,e),[o,r.runWebGLProgram(a,[t],"float32")]}(r,u,d,c);return[p,h]}},Da={kernelName:s.C,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{keepDims:a,axis:o}=e,i=n,u=r.shape.length,c=s.Ib.parseAxisParam(o,r.shape);let l=c;const d=s.Y.getAxesPermutation(l,u),p=null!=d,h=i.shouldExecuteOnCPU([r]),f=[];let m=r;if(p){if(h){const t=i.texData.get(m.dataId).values,e=new Array(u);for(let a=0;a<e.length;a++)e[a]=r.shape[d[a]];const n=te(t,r.shape,r.dtype,d,e);m=i.makeTensorInfo(e,r.dtype),i.texData.get(m.dataId).values=n}else m=Sa(r,d,i);f.push(m),l=s.Y.getInnerMostAxes(l.length,u)}s.Y.assertAxesAreInnerMostDims("sum",l,u);const[b,g]=s.Y.computeOutAndReduceShapes(m.shape,l);let y=b;a&&(y=s.Y.expandShapeToKeepDim(b,c));const x=function(t,e,n,r){const a=s.Ib.sizeFromShape(e),o=ca({inputs:{x:t},attrs:{shape:[s.Ib.sizeFromShape(t.shape)/a,a]},backend:r}),i=$a(o,"float32","mean",r),u=ca({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(o),r.disposeIntermediateTensorInfo(i),u}(m,g,y,i);for(const s of f)i.disposeIntermediateTensorInfo(s);return x}};class _a{constructor(t,e,n){this.variableNames=["x"],this.outputShape=e.map((e,n)=>e[0]+t[n]+e[1]);const r=t.length,a=ye(r),o=e.map(t=>t[0]).join(","),s=e.map((e,n)=>e[0]+t[n]).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===n?0:1;this.userCode=1!==r?`\n      ${a} start = ${a}(${o});\n      ${a} end = ${a}(${s});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${a} coords = outC - start;\n        setOutput(getX(${i}));\n      }\n    `:`\n        int start = ${o};\n        int end = ${s};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class Ma{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map((e,n)=>e[0]+t[n]+e[1]);const r=t.length,a=ye(r),o=e.map(t=>t[0]).join(","),s=e.map((e,n)=>e[0]+t[n]).join(","),i=se("rc",r),u=se("source",r),c=`${i[r-1]} < ${this.outputShape[r-1]}`,l=1===r?"source":`vec2(${u.slice(-2).join()})`,d="reflect"===n?0:1;let p="";if(1===r){const t=`\n        ${a} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${d};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${d};\n        }\n        source -= start;\n      `;p=`\n        ${a} rc = outputLoc;\n        ${t}\n        result[0] = getChannel(getX(${u.join()}), ${l});\n        ${i[r-1]} += 1;\n        if(${c}) {\n          ${t}\n          result[1] = getChannel(getX(${u.join()}), ${l});\n        }\n      `}else{const t=`\n        ${a} source = rc;\n        ${a} lt = ${a}(lessThan(source, start));\n        ${a} gte = ${a}(greaterThanEqual(source, end));\n        ${a} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${d}) +\n                gte * ((end - 1) * 2 - source + ${d});\n        source -= start;\n      `;p=`\n        ${a} rc = outputLoc;\n        ${t}\n        result[0] = getChannel(getX(${u.join()}), ${l});\n        ${i[r-1]} += 1;\n        if(${c}) {\n          ${t}\n          result[1] = getChannel(getX(${u.join()}), ${l});\n        }\n        rc = outputLoc;\n        ${i[r-2]} += 1;\n        if(${i[r-2]} < ${this.outputShape[r-2]}) {\n          ${t}\n          result[2] = getChannel(getX(${u.join()}), ${l});\n          ${i[r-1]} += 1;\n          if(${c}) {\n            ${t}\n            result[3] = getChannel(getX(${u.join()}), ${l});\n          }\n        }\n      `}this.userCode=`\n      const ${a} start = ${a}(${o});\n      const ${a} end = ${a}(${s});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const Pa={kernelName:s.D,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r}=t,{paddings:a,mode:o}=n,i=Object(s.hb)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Ma(r.shape,a,o):new _a(r.shape,a,o);return e.runWebGLProgram(i,[r],r.dtype)}};class Ba{constructor(t,e,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=s.Y.assertAndGetBroadcastShape(e,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${t}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const La="return a * b;",Va={kernelName:s.E,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{a:r,b:a}=e,o=s.Y.upcastType(r.dtype,a.dtype);if("complex64"===r.dtype){const t=n.texData.get(r.dataId),e=n.texData.get(a.dataId),o=new Ba("return areal * breal - aimag * bimag;",r.shape,a.shape),s=new Ba("return areal * bimag + aimag * breal;",r.shape,a.shape),i=[{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:r.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:a.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:a.shape}],u=n.runWebGLProgram(o,i,"float32"),c=n.runWebGLProgram(s,i,"float32"),l=Br({inputs:{real:u,imag:c},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),l}if(n.shouldExecuteOnCPU([r,a])){const t=n.texData.get(r.dataId),e=n.texData.get(a.dataId),[s,i]=Yt(r.shape,a.shape,t.values,e.values,o),u=n.makeTensorInfo(i,o);return n.texData.get(u.dataId).values=s,u}let i;return i=Object(s.hb)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new $e(La,r.shape,a.shape):new Ce(La,r.shape,a.shape),n.runWebGLProgram(i,[r,a],o)}},za={kernelName:s.F,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{s.Y.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:u}=n,c=e,l=c.readSync(r.dataId),d=c.readSync(a.dataId);return s.mb.nonMaxSuppressionV3Impl(l,d,o,i,u)}},Wa=s.mb.nonMaxSuppressionV4Impl,Ua={kernelName:s.G,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{s.Y.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:u,padToMaxOutputSize:c}=n,l=e,d=l.readSync(r.dataId),p=l.readSync(a.dataId),{selectedIndices:h,validOutputs:f}=Wa(d,p,o,i,u,c);return[h,f]}},Ka=s.mb.nonMaxSuppressionV5Impl,Ga={kernelName:s.H,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{s.Y.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:u,softNmsSigma:c}=n,l=e,d=l.readSync(r.dataId),p=l.readSync(a.dataId),h=o,f=i,m=u,b=c,{selectedIndices:g,selectedScores:y}=Ka(d,p,h,f,m,b);return[g,y]}};class Ha{constructor(t,e,n,r){this.variableNames=["Image"],this.outputShape=[];const a=t[1],o=t[2],i=Math.sin(e).toFixed(3),u=Math.cos(e).toFixed(3);this.outputShape=t;const[c,l]=s.Y.getImageCenter(r,a,o),d=c.toFixed(3),p=l.toFixed(3);let h="";h="number"==typeof n?`float outputValue = ${n.toFixed(2)};`:`\n        vec3 fill = vec3(${n.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - ${d}) * ${u} - (float(y) - ${p}) * ${i};\n          float coordYFloat = (float(x) - ${d}) * ${i} + (float(y) - ${p}) * ${u};\n          int coordX = int(round(coordXFloat + ${d}));\n          int coordY = int(round(coordYFloat + ${p}));\n          ${h}\n          if(coordX >= 0 && coordX < ${o} && coordY >= 0 && coordY < ${a}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const Xa={kernelName:s.L,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:r}=t,{radians:a,fillValue:o,center:s}=e,i=n,u=new Ha(r.shape,a,o,s);return i.runWebGLProgram(u,[r],r.dtype)}},qa=Vr("if (isnan(x)) return x;\n  return sin(x);\n"),Ya={kernelName:s.N,backendName:"webgl",kernelFunc:qa},Qa=Vr("return x * x;"),Ja={kernelName:s.P,backendName:"webgl",kernelFunc:Qa},Za=zr({opSnippet:"return (a - b) * (a - b);",packedOpSnippet:"return (a - b) * (a - b);"}),to={kernelName:s.Q,backendName:"webgl",kernelFunc:Za},eo="return a - b;",no=zr({opSnippet:eo,packedOpSnippet:eo,supportsComplex:!0,cpuKernelImpl:Zt}),ro={kernelName:s.R,backendName:"webgl",kernelFunc:no},ao=Vr("return tan(x);"),oo=[Kr,Hr,Xr,qr,Jr,ra,Lr,da,ha,ma,ya,Oa,ja,Pr,Ca,ua,ka,Ra,Aa,Fa,Da,Pa,Va,za,Ua,Ga,ta,na,la,Xa,Ya,Ja,ro,to,{kernelName:s.S,backendName:"webgl",kernelFunc:ao},{kernelName:s.V,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{perm:a}=e,o=n,s=new Array(r.shape.length);for(let u=0;u<s.length;u++)s[u]=r.shape[a[u]];let i;if(o.shouldExecuteOnCPU([r])){const t=o.texData.get(r.dataId),e=te(t.values,r.shape,r.dtype,a,s);i=o.makeTensorInfo(s,r.dtype),o.texData.get(i.dataId).values=e}else i=Sa(r,a,o);return i}},{kernelName:s.W,backendName:"webgl",kernelFunc:function(t){const{inputs:e,attrs:n,backend:r}=t,{axis:a}=n,{x:o}=e;pt(o,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const s=r.readSync(o.dataId),{outputValues:i,outputShape:u,indices:c}=ee(s,a,o.shape,o.dtype);return[r.makeTensorInfo(u,o.dtype,i),r.makeTensorInfo([c.length],"int32",c)]}}];for(const so of oo)Object(s.rb)(so)},"7wDt":function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("VO80");const i=Object(s.a)({logicalNot_:function(t){const e=Object(o.a)(t,"x","logicalNot","bool");return r.a.runKernelFunc(t=>t.logicalNot(e),{x:e},null,a.Ab)}})},8:function(t,e){},"867m":function(t,e,n){"use strict";n.d(e,"a",(function(){return p}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("atXS"),i=n("NuWS"),u=n("3rNm"),c=n("VO80"),l=n("NclT"),d=n("yRKQ");const p=Object(c.a)({prod_:function(t,e=null,n=!1){let c=Object(o.a)(t,"x","prod");return"bool"===c.dtype&&(c=Object(u.a)(c,"int32")),r.a.runKernelFunc(t=>{const r=Object(s.I)(e,c.shape),a=Object(i.f)(r,c.rank);let o=r,u=c;null!=a&&(u=Object(d.a)(c,a),o=Object(i.g)(o.length,c.rank));let p=t.prod(u,o);if(n){const t=Object(i.e)(p.shape,r);p=Object(l.a)(p,t)}return p},{x:c},null,a.Zb,{axis:e,keepDims:n})}})},"87nf":function(t,e,n){"use strict";n.d(e,"a",(function(){return a})),n.d(e,"b",(function(){return o}));var r=n("atXS");function a(t,e){const n=t[0].length;t.forEach((t,e)=>{r.b(t.length===n,()=>`Error in concat${n}D: rank of tensors[${e}] must be the same as the rank of the rest (${n})`)}),r.b(e>=0&&e<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);const a=t[0];t.forEach((t,o)=>{for(let s=0;s<n;s++)r.b(s===e||t[s]===a[s],()=>`Error in concat${n}D: Shape of tensors[${o}] (${t}) does not match the shape of the rest (${a}) along the non-concatenated axis ${o}.`)})}function o(t,e){const n=t[0].slice();for(let r=1;r<t.length;r++)n[e]+=t[r][e];return n}},"8Km0":function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("VO80");const i=Object(s.a)({clone_:function(t){const e=Object(o.a)(t,"x","clone",null);return r.a.runKernelFunc(()=>r.a.makeTensorFromDataId(e.dataId,e.shape,e.dtype),{x:e},null,a.mb)}})},"8OX7":function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("auKK"),a=n("wFtI"),o=n("dsKV"),s=n("o/e8"),i=n("Um8L"),u=n("3rNm"),c=n("VO80");const l=Object(c.a)({minimum_:function(t,e){let n=Object(s.a)(t,"a","minimum"),c=Object(s.a)(e,"b","minimum");return[n,c]=Object(o.b)(n,c),"bool"===n.dtype&&(n=Object(u.a)(n,"int32"),c=Object(u.a)(c,"int32")),Object(i.a)(n.shape,c.shape),r.a.runKernelFunc((t,e)=>{const r=t.minimum(n,c);return e([n,c]),r},{a:n,b:c},null,a.Lb)}})},"8YN0":function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("Um8L"),i=n("VO80");const u=Object(i.a)({logicalOr_:function(t,e){const n=Object(o.a)(t,"a","logicalOr","bool"),i=Object(o.a)(e,"b","logicalOr","bool");return Object(s.a)(n.shape,i.shape),r.a.runKernelFunc(t=>t.logicalOr(n,i),{a:n,b:i},null,a.Bb)}})},"8bUJ":function(t,e,n){"use strict";n.d(e,"a",(function(){return h})),n.d(e,"b",(function(){return f})),n.d(e,"c",(function(){return m})),n.d(e,"d",(function(){return b})),n.d(e,"e",(function(){return g})),n.d(e,"f",(function(){return y}));var r=n("wE5H"),a=n("o/e8"),o=n("atXS"),s=n("ubnP"),i=n("zvA9"),u=n("uy0A"),c=n("4f3O"),l=n("shz4"),d=n("1N4k"),p=n("VO80");const h=Object(p.a)({equalStrict_:function(t,e){Object(r.a)("strict variants of ops have been deprecated and will be removed in future");const n=Object(a.a)(t,"a","equalStrict"),i=Object(a.a)(e,"b","equalStrict");return Object(o.e)(n.shape,i.shape,"Error in equalStrict: "),Object(s.a)(n,i)}}),f=Object(p.a)({greaterEqualStrict_:function(t,e){Object(r.a)("strict variants of ops have been deprecated and will be removed in future");const n=Object(a.a)(t,"a","greaterEqualStrict"),s=Object(a.a)(e,"b","greaterEqualStrict");return Object(o.e)(n.shape,s.shape,"Error in greaterEqualStrict: "),Object(u.a)(n,s)}}),m=Object(p.a)({greaterStrict_:function(t,e){Object(r.a)("strict variants of ops have been deprecated and will be removed in future");const n=Object(a.a)(t,"a","greaterStrict"),s=Object(a.a)(e,"b","greaterStrict");return Object(o.e)(n.shape,s.shape,"Error in greaterStrict: "),Object(i.a)(n,s)}}),b=Object(p.a)({lessEqualStrict_:function(t,e){Object(r.a)("strict variants of ops have been deprecated and will be removed in future");const n=Object(a.a)(t,"a","lessEqualStrict"),s=Object(a.a)(e,"b","lessEqualStrict");return Object(o.e)(n.shape,s.shape,"Error in lessEqualStrict: "),Object(l.a)(n,s)}}),g=Object(p.a)({lessStrict_:function(t,e){Object(r.a)("strict variants of ops have been deprecated and will be removed in future");const n=Object(a.a)(t,"a","lessStrict"),s=Object(a.a)(e,"b","lessStrict");return Object(o.e)(n.shape,s.shape,"Error in lessStrict: "),Object(c.a)(n,s)}}),y=Object(p.a)({notEqualStrict_:function(t,e){Object(r.a)("strict variants of ops have been deprecated and will be removed in future");const n=Object(a.a)(t,"a","notEqualStrict"),s=Object(a.a)(e,"b","notEqualStrict");return Object(o.e)(n.shape,s.shape,"Error in notEqualStrict: "),Object(d.a)(n,s)}})},9:function(t,e){},"90yW":function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var r=n("NNfn"),a=n("o/e8"),o=n("atXS");const s=async function(t,e){const n=Object(a.a)(t,"x","setdiff1d"),s=Object(a.a)(e,"y","setdiff1d");o.b(n.dtype===s.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${s.dtype}).`),o.b(1===n.rank,()=>`x should be 1D tensor, but got x (${n.shape}).`),o.b(1===s.rank,()=>`y should be 1D tensor, but got y (${s.shape}).`);const i=await n.data(),u=await s.data(),c=new Set(u);let l=0;for(let r=0;r<i.length;r++)c.has(i[r])||l++;const d=new r.b([l],n.dtype),p=new r.b([l],"int32");for(let r=0,a=0;r<i.length;r++)c.has(i[r])||(d.values[a]=i[r],p.values[a]=r,a++);return[d.toTensor(),p.toTensor()]}},"91d6":function(t,e,n){"use strict";n.d(e,"a",(function(){return b}));var r=n("o/e8"),a=n("atXS"),o=n("iuCH"),s=n("NuWS"),i=n("wCH+"),u=n("rm0a"),c=n("VO80"),l=n("yfHJ"),d=n("NclT"),p=n("AV8V"),h=n("Fjpt"),f=n("k7Jv"),m=n("4FMF");const b=Object(c.a)({norm_:function(t,e="euclidean",n=null,c=!1){const b=function t(e,n,r=null){if(0===e.rank)return Object(o.a)(e);if(1!==e.rank&&null===r)return t(Object(d.a)(e,[-1]),n,r);if(1===e.rank||"number"==typeof r||Array.isArray(r)&&1===r.length){if(1===n)return Object(m.a)(Object(o.a)(e),r);if(n===1/0)return Object(i.a)(Object(o.a)(e),r);if(n===-1/0)return Object(u.a)(Object(o.a)(e),r);if("euclidean"===n||2===n)return Object(h.a)(Object(m.a)(Object(l.a)(Object(o.a)(e),Object(p.a)(2,"int32")),r));throw new Error("Error in norm: invalid ord value: "+n)}if(Array.isArray(r)&&2===r.length){if(1===n)return Object(i.a)(Object(m.a)(Object(o.a)(e),r[0]),r[1]-1);if(n===1/0)return Object(i.a)(Object(m.a)(Object(o.a)(e),r[1]),r[0]);if(n===-1/0)return Object(u.a)(Object(m.a)(Object(o.a)(e),r[1]),r[0]);if("fro"===n||"euclidean"===n)return Object(h.a)(Object(m.a)(Object(f.a)(e),r));throw new Error("Error in norm: invalid ord value: "+n)}throw new Error("Error in norm: invalid axis: "+r)}(t=Object(r.a)(t,"x","norm"),e,n);let g=b.shape;if(c){const e=Object(a.I)(n,t.shape);g=s.e(b.shape,e)}return Object(d.a)(b,g)}})},"9JAK":function(t,e,n){"use strict";let r;function a(){if(null==r){let t;if("undefined"!=typeof window)t=window;else if("undefined"!=typeof global)t=global;else if("undefined"!=typeof process)t=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");t=self}r=t}return r}function o(t,e){const n=function(){const t=a();return null==t._tfGlobals&&(t._tfGlobals=new Map),t._tfGlobals}();if(n.has(t))return n.get(t);{const r=e();return n.set(t,r),n.get(t)}}n.d(e,"b",(function(){return a})),n.d(e,"a",(function(){return o}))},"9jvw":function(t,e,n){"use strict";n.d(e,"a",(function(){return a})),n.d(e,"b",(function(){return o}));var r=n("atXS");const a=30;function o(t){return t<=a?t:Object(r.G)(t,Math.floor(Math.sqrt(t)))}},"ARu+":function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("dsKV"),a=n("o/e8"),o=n("x3y4"),s=n("ubnP"),i=n("VO80"),u=n("Z5Ez"),c=n("oJu+");const l=Object(i.a)({divNoNan_:function(t,e){let n=Object(a.a)(t,"a","div"),i=Object(a.a)(e,"b","div");[n,i]=Object(r.b)(n,i);const l=Object(o.a)(n,i),d=Object(c.a)(l),p=Object(s.a)(i,d);return Object(u.a)(p,d,l)}})},AV8V:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("atXS"),a=n("WVnj");function o(t,e){if((Object(r.A)(t)&&"string"!==e||Array.isArray(t))&&"complex64"!==e)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===e&&Object(r.A)(t)&&!(t instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Object(a.a)(t,[],[],e)}},AoCb:function(t,e,n){"use strict";n.d(e,"a",(function(){return a}));var r=n("BD40");function a(t,e){const n=[];for(let r=0;r<e.length;r++)e[r]&&n.push(r);const a=Object(r.a)(t,"int32"),o=Object(r.a)([n.length,t.length],"int32");for(let r=0;r<n.length;r++){const e=a.indexToLoc(n[r]);o.values.set(e,r*t.length)}return o.toTensor()}},B3db:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("atXS"),i=n("VO80");const u=Object(i.a)({complex_:function(t,e){const n=Object(o.a)(t,"real","complex"),i=Object(o.a)(e,"imag","complex");return s.e(n.shape,i.shape,`real and imag shapes, ${n.shape} and ${i.shape}, must match in call to tf.complex().`),r.a.runKernelFunc(t=>t.complex(n,i),{real:n,imag:i},null,a.y)}})},BD40:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("NNfn"),a=n("atXS");function o(t,e="float32",n){return e=e||"float32",a.c(t),new r.b(t,e,n)}},BbuY:function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var r=n("o/e8"),a=n("atXS"),o=n("WVnj");function s(t,e,n){if(Object(a.d)(t),null!=e&&3!==e.length)throw new Error("tensor3d() requires shape to have three numbers");const s=Object(r.c)(t,n);if(3!==s.length&&1!==s.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===s.length&&null==e)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Object(o.a)(t,e,s,n)}},CKnt:function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("VO80");const i=Object(s.a)({round_:function(t){const e=Object(o.a)(t,"x","round");return r.a.runKernelFunc(t=>t.round(e),{x:e},null,a.mc)}})},CfTU:function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("auKK"),a=n("wFtI"),o=n("dsKV"),s=n("o/e8"),i=n("Um8L"),u=n("3rNm"),c=n("VO80");const l=Object(c.a)({maximum_:function(t,e){let n=Object(s.a)(t,"a","maximum"),c=Object(s.a)(e,"b","maximum");return[n,c]=Object(o.b)(n,c),"bool"===n.dtype&&(n=Object(u.a)(n,"int32"),c=Object(u.a)(c,"int32")),Object(i.a)(n.shape,c.shape),r.a.runKernelFunc((t,e)=>{const r=t.maximum(n,c);return e([n,c]),r},{a:n,b:c},null,a.Ib)}})},"D2/b":function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),o=n("atXS"),s=n("uBja"),i=n("VO80"),u=n("NclT");const c=Object(i.a)({conv2DBackpropFilter_:function(t,e,n,i,c,l="NHWC",d){let p=t;3===t.rank&&(p=Object(u.a)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let h=e;3===h.rank&&(h=Object(u.a)(e,[1,e.shape[0],e.shape[1],e.shape[2]])),o.b(4===p.rank,()=>"Error in conv2dDerFilter: input must be rank 4, but got shape "+p.shape+"."),o.b(4===h.rank,()=>"Error in conv2dDerFilter: dy must be rank 4, but got shape "+h.shape+"."),o.b(4===n.length,()=>"Error in conv2dDerFilter: filterShape must be length 4, but got "+n+".");const f="NHWC"===l?p.shape[3]:p.shape[1],m="NHWC"===l?h.shape[3]:h.shape[1];return o.b(f===n[2],()=>`Error in conv2dDerFilter: depth of input ${f}) must match input depth in filter (${n[2]}.`),o.b(m===n[3],()=>`Error in conv2dDerFilter: depth of dy (${m}) must match output depth for filter (${n[3]}).`),null!=d&&o.b(o.v(c),()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${d} but got pad ${c}.`),r.a.runKernelFunc(t=>{const e=s.g(l),r=s.a(p.shape,n,i,1,c,d,!1,e);return t.conv2dDerFilter(p,h,r)},{x:p,dy:h},null,a.B,{strides:i,pad:c,dataFormat:l,dimRoundingMode:d,filterShape:n})}})},D4ac:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("atXS"),i=n("VO80"),u=n("NclT");const c=Object(i.a)({resizeNearestNeighbor_:function(t,e,n=!1){const i=Object(o.a)(t,"images","resizeNearestNeighbor");s.b(3===i.rank||4===i.rank,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${i.rank}.`),s.b(2===e.length,()=>"Error in resizeNearestNeighbor: new shape must 2D, but got shape "+e+"."),s.b("float32"===i.dtype||"int32"===i.dtype,()=>"`images` must have `int32` or `float32` as dtype");let c=i,l=!1;3===i.rank&&(l=!0,c=Object(u.a)(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const[d,p]=e,h=r.a.runKernelFunc((t,e)=>(e([c]),t.resizeNearestNeighbor(c,d,p,n)),{images:c},null,a.ic,{alignCorners:n,size:e});return l?Object(u.a)(h,[h.shape[1],h.shape[2],h.shape[3]]):h}})},DbV5:function(t,e,n){"use strict";n.d(e,"a",(function(){return d}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("B3db"),i=n("JLAb"),u=n("VO80"),c=n("17CO"),l=n("oJu+");const d=Object(u.a)({onesLike_:function(t){const e=Object(o.a)(t,"x","onesLike");return r.a.runKernelFunc((t,n)=>{if("complex64"===e.dtype){const t=d(Object(c.a)(e)),n=Object(l.a)(Object(i.a)(e));return Object(s.a)(t,n)}return t.onesLike(e)},{x:e},null,a.Vb)}})},DrVt:function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("VO80");const i=Object(s.a)({pad_:function(t,e,n=0){const s=Object(o.a)(t,"x","pad");if(0===s.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");return r.a.runKernelFunc((t,r)=>(r([s]),t.pad(s,e,n)),{x:s},null,a.Wb,{paddings:e,constantValue:n})}})},E1lT:function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("VO80");const i=Object(s.a)({log_:function(t){const e=Object(o.a)(t,"x","log");return r.a.runKernelFunc((t,n)=>{const r=t.log(e);return n([e]),r},{x:e},null,a.wb)}})},EWu9:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("o/e8"),a=n("atXS"),o=n("3X4V"),s=n("g4+C"),i=n("VO80"),u=n("NclT");const c=Object(i.a)({separableConv2d_:function(t,e,n,i,c,l=[1,1],d="NHWC"){const p=Object(r.a)(t,"x","separableConv2d"),h=Object(r.a)(e,"depthwiseFilter","separableConv2d"),f=Object(r.a)(n,"pointwiseFilter","separableConv2d");let m=p,b=!1;if(3===p.rank&&(b=!0,m=Object(u.a)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),"NCHW"===d)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");a.b(4===m.rank,()=>`Error in separableConv2d: input must be rank 4, but got rank ${m.rank}.`),a.b(4===h.rank,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${h.rank}.`),a.b(4===f.rank,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${h.rank}.`),a.b(1===f.shape[0],()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${f.shape[0]}.`),a.b(1===f.shape[1],()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${f.shape[1]}.`);const g=h.shape[2],y=h.shape[3];a.b(f.shape[2]===g*y,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${g*y}, but got ${f.shape[2]}.`);const x=Object(s.a)(m,h,i,c,d,l),O=Object(o.a)(x,f,1,"valid",d);return b?Object(u.a)(O,[O.shape[1],O.shape[2],O.shape[3]]):O}})},EhIR:function(t,e,n){(function(t){var r;!function(t,a,o){function s(t){var e,n=this,r=(e=4022871197,function(t){t=t.toString();for(var n=0;n<t.length;n++){var r=.02519603282416938*(e+=t.charCodeAt(n));r-=e=r>>>0,e=(r*=e)>>>0,e+=4294967296*(r-=e)}return 2.3283064365386963e-10*(e>>>0)});n.next=function(){var t=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=t-(n.c=0|t)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(t),n.s0<0&&(n.s0+=1),n.s1-=r(t),n.s1<0&&(n.s1+=1),n.s2-=r(t),n.s2<0&&(n.s2+=1),r=null}function i(t,e){return e.c=t.c,e.s0=t.s0,e.s1=t.s1,e.s2=t.s2,e}function u(t,e){var n=new s(t),r=e&&e.state,a=n.next;return a.int32=function(){return 4294967296*n.next()|0},a.double=function(){return a()+11102230246251565e-32*(2097152*a()|0)},a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n("kU2C")&&n("QvbP")?void 0===(r=(function(){return u}).call(e,n,e,a))||(a.exports=r):this.alea=u}(0,t,n("kU2C"))}).call(this,n("0SIU")(t))},Ei6o:function(t,e,n){"use strict";n.d(e,"a",(function(){return g}));var r=n("auKK"),a=n("U45G"),o=n("wFtI"),s=n("o/e8"),i=n("atXS"),u=n("NuWS"),c=n("3rNm"),l=n("x3y4"),d=n("parS"),p=n("wion"),h=n("VO80"),f=n("NclT"),m=n("AV8V"),b=n("4FMF");const g=Object(h.a)({mean_:function(t,e=null,n=!1){const h=Object(s.a)(t,"x","mean"),g=Object(i.I)(e,h.shape),y=Object(u.d)(h.shape,g)[1],x=Object(i.N)(y),O={x:h},v={axis:e,keepDims:n},w=()=>{const t=Object(m.a)(x),r=t.dtype===h.dtype?h:Object(c.a)(h,t.dtype),a=Object(l.a)(r,t);return Object(b.a)(a,e,n)};return Object(a.a)(t=>({value:r.a.runKernelFunc(w,O,null,o.Jb,v),gradFunc:e=>{const n=t.shape.slice();g.forEach(t=>{n[t]=1});const r=Object(f.a)(e,n);return Object(l.a)(Object(d.a)(r,Object(p.a)(t.shape,"float32")),x)}}))(h)}})},EysY:function(t,e,n){"use strict";n.d(e,"a",(function(){return a.a})),n.d(e,"b",(function(){return o.a})),n.d(e,"c",(function(){return s.a})),n.d(e,"d",(function(){return i.a})),n.d(e,"e",(function(){return c})),n.d(e,"f",(function(){return l.a})),n.d(e,"i",(function(){return d.a})),n.d(e,"j",(function(){return p.a})),n.d(e,"k",(function(){return h.a})),n.d(e,"l",(function(){return f.a})),n.d(e,"m",(function(){return m.a})),n.d(e,"n",(function(){return b.a})),n.d(e,"o",(function(){return g.a})),n.d(e,"p",(function(){return y.a})),n.d(e,"q",(function(){return x.a})),n.d(e,"r",(function(){return O.a})),n.d(e,"s",(function(){return v.a})),n.d(e,"t",(function(){return w.a})),n.d(e,"u",(function(){return N})),n.d(e,"w",(function(){return $.a})),n.d(e,"x",(function(){return E.a})),n.d(e,"v",(function(){return T.a})),n.d(e,"h",(function(){return Bt})),n.d(e,"g",(function(){return r}));var r={};n.r(r),n.d(r,"conv2d",(function(){return V})),n.d(r,"depthwiseConv2d",(function(){return K})),n.d(r,"matMul",(function(){return H}));var a=n("kRdc"),o=n("BD40"),s=n("8Km0"),i=n("ZJ6U"),u=n("VO80");const c=Object(u.a)({concat2d_:function(t,e){return Object(i.a)(t,e)}});var l=n("x3y4"),d=n("wCH+"),p=n("parS"),h=n("hNYx"),f=n("NclT"),m=n("AV8V"),b=n("/7N0"),g=n("bTzI"),y=n("X4fa"),x=n("1U0N"),O=n("oAkI"),v=n("NX3e"),w=n("lg8H"),j=n("o/e8"),I=n("atXS"),C=n("WVnj");function N(t,e,n){if(Object(I.d)(t),null!=e&&2!==e.length)throw new Error("tensor2d() requires shape to have two numbers");const r=Object(j.c)(t,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Object(C.a)(t,e,r,n)}var $=n("OkRW"),E=n("Wiw4"),T=n("yRKQ"),S=n("th0q"),k=(n("Grcp"),n("THqV"),n("adw1"),n("auKK")),R=n("U45G"),A=n("wFtI"),F=n("dsKV"),D=n("Um8L"),_=n("3X4V"),M=n("D2/b"),P=n("c9N1"),B=n("uBja"),L=n("R0ls");const V=Object(u.a)({fusedConv2d_:function({x:t,filter:e,strides:n,pad:r,dataFormat:o="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:u,activation:c="linear",preluActivationWeights:l}){if(c=c||"linear",!1===Object(L.d)(k.a.state.gradientDepth,c)){let d=Object(_.a)(t,e,n,r,o,s,i);return null!=u&&(d=Object(a.a)(d,u)),Object(L.a)(d,c,l)}const d=Object(j.a)(t,"x","conv2d"),p=Object(j.a)(e,"filter","conv2d");let h=d,m=!1;3===d.rank&&(m=!0,h=Object(f.a)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),I.b(4===h.rank,()=>"Error in fused conv2d: input must be rank 4, but got rank "+h.rank+"."),I.b(4===p.rank,()=>"Error in fused conv2d: filter must be rank 4, but got rank "+p.rank+"."),null!=i&&I.b(I.v(r),()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`),I.b(h.shape[3]===p.shape[2],()=>`Error in conv2d: depth of input (${h.shape[3]}) must match input depth for filter ${p.shape[2]}.`),I.b(B.h(n,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),I.b("NHWC"===o,()=>`Error in conv2d: got dataFormat of ${o} but only NHWC is currently supported.`);const b=B.a(h.shape,p.shape,n,s,r,i);let g,y;null!=u&&(g=Object(j.a)(u,"bias","fused conv2d"),[g]=Object(F.b)(g,d),D.a(b.outShape,g.shape)),null!=l&&(y=Object(j.a)(l,"prelu weights","fused conv2d"));const x=(t,e)=>{const[a,o,i,u]=e,l=Object(L.c)(t,i,c);I.b(B.i(s),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);const d=[Object(P.a)(o.shape,l,a,n,r),Object(M.a)(o,l,a.shape,n,r)];if(null!=u){const t=Object(L.b)(u,l);d.push(t)}return d},O=t=>t.fusedConv2d({input:h,filter:p,convInfo:b,bias:g,activation:c,preluActivationWeights:y}),v={x:h,filter:p,bias:g,preluActivationWeights:y},w={strides:n,pad:r,dataFormat:o,dilations:s,dimRoundingMode:i,activation:c};return null==u?Object(R.a)((t,e,n)=>{let r=k.a.runKernelFunc(O,v,null,A.fb,w);return n([e,t,r]),m&&(r=Object(f.a)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}})(h,p):Object(R.a)((t,e,n,r)=>{let a=k.a.runKernelFunc(O,v,null,A.fb,w);return r([e,t,a,n]),m&&(a=Object(f.a)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:x}})(h,p,g)}});var z=n("g4+C"),W=n("aSZd"),U=n("jLCh");const K=Object(u.a)({fusedDepthwiseConv2d_:function({x:t,filter:e,strides:n,pad:r,dataFormat:o="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:u,activation:c="linear",preluActivationWeights:l}){if(!1===Object(L.d)(k.a.state.gradientDepth,c)){let d=Object(z.a)(t,e,n,r,o,s,i);return null!=u&&(d=Object(a.a)(d,u)),Object(L.a)(d,c,l)}const d=Object(j.a)(t,"x","depthwiseConv2d"),p=Object(j.a)(e,"filter","depthwiseConv2d");let h=d,m=!1;3===d.rank&&(m=!0,h=Object(f.a)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),I.b(4===h.rank,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${h.rank}.`),I.b(4===p.rank,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`),I.b(h.shape[3]===p.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${h.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`),null==s&&(s=[1,1]),I.b(B.h(n,s),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),null!=i&&I.b(I.v(r),()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${i} but got pad ${r}.`);const b=B.a(h.shape,p.shape,n,s,r,i,!0);let g,y;null!=u&&(g=Object(j.a)(u,"bias","fused conv2d"),[g]=Object(F.b)(g,d),D.a(b.outShape,g.shape)),null!=l&&(y=Object(j.a)(l,"prelu weights","fused depthwiseConv2d"));const x=(t,e)=>{I.b(B.i(s),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`);const[a,o,u,l]=e,d=Object(L.c)(t,u,c),p=Object(U.a)(o.shape,d,a,n,r,s,i),h=Object(W.a)(o,d,a.shape,n,r,s,i);return null!=l?[p,h,Object(L.b)(g,d)]:[p,h]},O=t=>t.fusedDepthwiseConv2D({input:h,filter:p,convInfo:b,bias:g,activation:c,preluActivationWeights:y}),v={x:h,filter:p,bias:g,preluActivationWeights:y},w={strides:n,pad:r,dataFormat:o,dilations:s,dimRoundingMode:i,activation:c};return null==u?Object(R.a)((t,e,n)=>{let r=k.a.runKernelFunc(O,v,null,A.gb,w);return n([e,t,r]),m&&(r=Object(f.a)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}})(h,p):Object(R.a)((t,e,n,r)=>{let a=k.a.runKernelFunc(O,v,null,A.gb,w);return r([e,t,a,n]),m&&(a=Object(f.a)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:x}})(h,p,g)}});var G=n("SHv8");const H=Object(u.a)({fusedMatMul_:function({a:t,b:e,transposeA:n=!1,transposeB:r=!1,bias:o,activation:s="linear",preluActivationWeights:i}){if(!1===Object(L.d)(k.a.state.gradientDepth,s)){let u=Object(G.a)(t,e,n,r);return null!=o&&(u=Object(a.a)(u,o)),Object(L.a)(u,s,i)}let u=Object(j.a)(t,"a","fused matMul"),c=Object(j.a)(e,"b","fused matMul");[u,c]=Object(F.b)(u,c);const l=n?u.shape[u.rank-2]:u.shape[u.rank-1],d=r?c.shape[c.rank-1]:c.shape[c.rank-2],p=n?u.shape[u.rank-1]:u.shape[u.rank-2],h=r?c.shape[c.rank-2]:c.shape[c.rank-1],m=u.shape.slice(0,-2),b=c.shape.slice(0,-2),g=I.N(m),y=I.N(b);I.b(u.rank>=2&&c.rank>=2&&u.rank===c.rank,()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${u.rank} and ${c.rank}.`),I.b(I.a(m,b),()=>`Error in fused matMul: outer dimensions (${m}) and (${b}) of Tensors with shapes ${u.shape} and `+c.shape+" must match."),I.b(l===d,()=>`Error in fused matMul: inner shapes (${l}) and (${d}) of Tensors with shapes ${u.shape} and ${c.shape} and transposeA=${n} and transposeB=${r} must match.`);const x=u.shape.slice(0,-2).concat([p,h]),O=n?Object(f.a)(u,[g,l,p]):Object(f.a)(u,[g,p,l]),v=r?Object(f.a)(c,[y,h,d]):Object(f.a)(c,[y,d,h]);let w,C;null!=o&&(w=Object(j.a)(o,"bias","fused matMul"),[w]=Object(F.b)(w,u),D.a(x,w.shape)),null!=i&&(C=Object(j.a)(i,"prelu weights","fused matMul"));const N=(t,e)=>{const[a,i,u,c]=e,l=Object(L.c)(Object(f.a)(t,u.shape),u,s);let d,p;return n||r?!n&&r?(d=Object(G.a)(l,i,!1,!1),p=Object(G.a)(l,a,!0,!1)):n&&!r?(d=Object(G.a)(i,l,!1,!0),p=Object(G.a)(a,l,!1,!1)):(d=Object(G.a)(i,l,!0,!0),p=Object(G.a)(l,a,!0,!0)):(d=Object(G.a)(l,i,!1,!0),p=Object(G.a)(a,l,!0,!1)),null!=o?[d,p,Object(L.b)(c,l)]:[d,p]},$=t=>t.fusedBatchMatMul({a:O,b:v,transposeA:n,transposeB:r,bias:w,activation:s,preluActivationWeights:C}),E={a:O,b:v,bias:w,preluActivationWeights:C},T={transposeA:n,transposeB:r,activation:s};return null==o?Object(R.a)((t,e,n)=>{const r=k.a.runKernelFunc($,E,null,A.Rc,T);return n([t,e,r]),{value:Object(f.a)(r,x),gradFunc:N}})(O,v):Object(R.a)((t,e,n,r)=>{const a=k.a.runKernelFunc($,E,null,A.Rc,T);return r([t,e,a,n]),{value:Object(f.a)(a,x),gradFunc:N}})(O,v,w)}});function X(t,e,n){const r=1-t%2,a=new Float32Array(t);for(let o=0;o<t;++o){const s=2*Math.PI*o/(t+r-1);a[o]=e-n*Math.cos(s)}return Object(w.a)(a,"float32")}Object(u.a)({hammingWindow_:function(t){return X(t,.54,.46)}});const q=Object(u.a)({hannWindow_:function(t){return X(t,.5,.5)}});var Y=n("RrjA");const Q=Object(u.a)({frame_:function(t,e,n,r=!1,a=0){let o=0;const s=[];for(;o+e<=t.size;)s.push(Object(g.a)(t,o,e)),o+=n;if(r)for(;o<t.size;){const r=o+e-t.size,u=Object(i.a)([Object(g.a)(t,o,e-r),Object(Y.a)([r],a)]);s.push(u),o+=n}return 0===s.length?N([],[0,e]):Object(f.a)(Object(i.a)(s),[s.length,e])}});Object(u.a)({stft_:function(t,e,n,r,a=q){null==r&&(r=Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2)))));const o=Q(t,e,n),s=Object(p.a)(o,a(e)),u=[];for(let i=0;i<o.shape[0];i++)u.push(Object(S.a)(Object(g.a)(s,[i,0],[1,e]),r));return Object(i.a)(u)}});const J=Object(u.a)({cropAndResize_:function(t,e,n,r,a,o){const s=Object(j.a)(t,"image","cropAndResize"),i=Object(j.a)(e,"boxes","cropAndResize","float32"),u=Object(j.a)(n,"boxInd","cropAndResize","int32");a=a||"bilinear",o=o||0;const c=i.shape[0];return I.b(4===s.rank,()=>`Error in cropAndResize: image must be rank 4,but got rank ${s.rank}.`),I.b(2===i.rank&&4===i.shape[1],()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${i.shape}.`),I.b(1===u.rank&&u.shape[0]===c,()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${i.shape}.`),I.b(2===r.length,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`),I.b(r[0]>=1&&r[1]>=1,()=>"cropSize must be atleast [1,1], but was "+r),I.b("bilinear"===a||"nearest"===a,()=>"method must be bilinear or nearest, but was "+a),k.a.runKernelFunc(t=>t.cropAndResize(s,i,u,r,a,o),{image:s,boxes:i,boxInd:u},null,A.I,{method:a,extrapolationValue:o,cropSize:r})}}),Z=Object(u.a)({flipLeftRight_:function(t){const e=Object(j.a)(t,"image","flipLeftRight","float32");return I.b(4===e.rank,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`),k.a.runKernel(A.ab,{image:e},{})}}),tt=Object(u.a)({rotateWithOffset_:function(t,e,n=0,r=.5){const a=Object(j.a)(t,"image","rotateWithOffset","float32");return I.b(4===a.rank,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`),k.a.runKernel(A.lc,{image:a},{radians:e,fillValue:n,center:r})}});function et(t,e,n,r,a,o){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==o&&(o=0);const s=t.shape[0];return n=Math.min(n,s),I.b(0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),I.b(2===t.rank,()=>`boxes must be a 2D tensor, but was of rank '${t.rank}'`),I.b(4===t.shape[1],()=>"boxes must have 4 columns, but 2nd dimension was "+t.shape[1]),I.b(1===e.rank,()=>"scores must be a 1D tensor"),I.b(e.shape[0]===s,()=>`scores has incompatible shape with boxes. Expected ${s}, but was `+e.shape[0]),I.b(0<=o&&o<=1,()=>`softNmsSigma must be in [0, 1], but was '${o}'`),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:o}}const nt=Object(u.a)({nonMaxSuppression_:function(t,e,n,r=.5,a=Number.NEGATIVE_INFINITY){const o=Object(j.a)(t,"boxes","nonMaxSuppression"),s=Object(j.a)(e,"scores","nonMaxSuppression"),i=et(o,s,n,r,a);return k.a.runKernelFunc(t=>t.nonMaxSuppression(o,s,n,r,a),{boxes:o,scores:s},null,A.Qb,{maxOutputSize:n=i.maxOutputSize,iouThreshold:r=i.iouThreshold,scoreThreshold:a=i.scoreThreshold})}});var rt=n("g4m1");const at=Object(u.a)({nonMaxSuppressionWithScore_:function(t,e,n,r=.5,a=Number.NEGATIVE_INFINITY,o=0){const s=Object(j.a)(t,"boxes","nonMaxSuppression"),i=Object(j.a)(e,"scores","nonMaxSuppression"),u=et(s,i,n,r,a,o),c=k.a.runKernel(A.Sb,{boxes:s,scores:i},{maxOutputSize:n=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:a=u.scoreThreshold,softNmsSigma:o=u.softNmsSigma});return{selectedIndices:c[0],selectedScores:c[1]}}}),ot=Object(u.a)({nonMaxSuppressionPadded_:function(t,e,n,r=.5,a=Number.NEGATIVE_INFINITY,o=!1){const s=Object(j.a)(t,"boxes","nonMaxSuppression"),i=Object(j.a)(e,"scores","nonMaxSuppression"),u=et(s,i,n,r,a,null),c=k.a.runKernel(A.Rb,{boxes:s,scores:i},{maxOutputSize:u.maxOutputSize,iouThreshold:u.iouThreshold,scoreThreshold:u.scoreThreshold,padToMaxOutputSize:o});return{selectedIndices:c[0],validOutputs:c[1]}}});var st=n("c/ib"),it=n("D4ac"),ut=n("uy0A"),ct=n("shz4"),lt=n("4zPZ"),dt=n("Z5Ez");Object(u.a)({bandPart_:function(t,e,n){Object(I.b)(e%1==0,()=>`bandPart(): numLower must be an integer, got ${e}.`),Object(I.b)(n%1==0,()=>`bandPart(): numUpper must be an integer, got ${n}.`);const r=Object(j.a)(t,"a","bandPart");Object(I.b)(r.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`);const a=r.shape,[o,s]=r.shape.slice(-2);if(!(e<=o))throw new Error(`bandPart(): numLower (${e}) must not be greater than the number of rows (${o}).`);if(!(n<=s))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${s}).`);e<0&&(e=o),n<0&&(n=s);const i=Object(f.a)(Object(h.a)(0,o,1,"int32"),[-1,1]),u=Object(h.a)(0,s,1,"int32"),c=Object(O.a)(i,u),l=Object(lt.a)(Object(ct.a)(c,Object(m.a)(+e,"int32")),Object(ut.a)(c,Object(m.a)(-n,"int32"))),d=Object(E.a)([o,s],r.dtype);return Object(f.a)(Object(x.a)(Object($.a)(Object(f.a)(r,[-1,o,s])).map(t=>Object(dt.a)(l,t,d))),a)}});var pt=n("91d6"),ht=n("RbuM"),ft=n("0fRV"),mt=n("4FMF");Object(u.a)({gramSchmidt_:function(t){let e;if(Array.isArray(t)){e=!1,Object(I.b)(null!=t&&t.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const n=t[0].shape[0];for(let e=1;e<t.length;++e)Object(I.b)(t[e].shape[0]===n,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${t[e].shape[0]} vs. ${n})`)}else e=!0,t=Object(ht.a)(t,t.shape[0],0).map(t=>Object(ft.a)(t,[0]));Object(I.b)(t.length<=t[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${t.length}) exceeds number of dimensions (${t[0].shape[0]}).`);const n=[],r=t;for(let a=0;a<t.length;++a)n.push(k.a.tidy(()=>{let t=r[a];if(a>0)for(let e=0;e<a;++e){const r=Object(p.a)(Object(mt.a)(Object(p.a)(n[e],t)),n[e]);t=Object(O.a)(t,r)}return Object(l.a)(t,Object(pt.a)(t,"euclidean"))}));return e?Object(x.a)(n,0):n}});var bt=n("wE5H"),gt=n("2ugP"),yt=n("jXH2");const xt=Object(u.a)({eye_:function(t,e,n,r="float32"){null==e&&(e=t);const a=Object(o.a)([t,e],r),s=t<=e?t:e;for(let o=0;o<s;++o)a.set(1,o,o);const i=Object(f.a)(a.toTensor(),[t,e]);if(null==n)return i;if(1===n.length)return Object(yt.a)(Object(gt.a)(i,0),[n[0],1,1]);if(2===n.length)return Object(yt.a)(Object(gt.a)(Object(gt.a)(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return Object(yt.a)(Object(gt.a)(Object(gt.a)(Object(gt.a)(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});var Ot=n("zvA9"),vt=n("O7f5");function wt(t,e=!1){return k.a.tidy(()=>{Object(I.b)(2===t.shape.length,()=>`qr2d() requires a 2D Tensor, but got a ${t.shape.length}D Tensor.`);const n=t.shape[0],r=t.shape[1];let a=xt(n),o=Object(s.a)(t);const u=N([[1]],[1,1]);let c=Object(s.a)(u);const d=n>=r?r:n;for(let t=0;t<d;++t){const e=o,d=c,h=a;[c,o,a]=k.a.tidy(()=>{const e=Object(g.a)(o,[t,t],[n-t,1]),d=Object(pt.a)(e),h=Object(g.a)(o,[t,t],[1,1]),f=Object(dt.a)(Object(Ot.a)(h,0),N([[-1]]),N([[1]])),m=Object(O.a)(h,Object(p.a)(f,d)),b=Object(l.a)(e,m);c=1===b.shape[0]?Object(s.a)(u):Object(i.a)([u,Object(g.a)(b,[1,0],[b.shape[0]-1,b.shape[1]])],0);const y=Object(vt.a)(Object(l.a)(Object(G.a)(f,m),d)),x=Object(g.a)(o,[t,0],[n-t,r]),v=Object(p.a)(y,c),w=Object(T.a)(c);if(0===t)o=Object(O.a)(x,Object(G.a)(v,Object(G.a)(w,x)));else{const e=Object(O.a)(x,Object(G.a)(v,Object(G.a)(w,x)));o=Object(i.a)([Object(g.a)(o,[0,0],[t,r]),e],0)}const j=Object(T.a)(v),I=Object(g.a)(a,[0,t],[n,a.shape[1]-t]);if(0===t)a=Object(O.a)(I,Object(G.a)(Object(G.a)(I,c),j));else{const e=Object(O.a)(I,Object(G.a)(Object(G.a)(I,c),j));a=Object(i.a)([Object(g.a)(a,[0,0],[n,t]),e],1)}return[c,o,a]}),Object(bt.b)([e,d,h])}return!e&&n>r&&(a=Object(g.a)(a,[0,0],[n,r]),o=Object(g.a)(o,[0,0],[r,r])),[a,o]})}Object(u.a)({qr_:function(t,e=!1){if(Object(I.b)(t.rank>=2,()=>"qr() requires input tensor to have a rank >= 2, but got rank "+t.rank),2===t.rank)return wt(t,e);{const n=t.shape.slice(0,t.shape.length-2).reduce((t,e)=>t*e),r=Object($.a)(Object(f.a)(t,[n,t.shape[t.shape.length-2],t.shape[t.shape.length-1]]),0),a=[],o=[];return r.forEach(t=>{const[n,r]=wt(t,e);a.push(n),o.push(r)}),[Object(f.a)(Object(x.a)(a,0),t.shape),Object(f.a)(Object(x.a)(o,0),t.shape)]}}});var jt=n("iuCH"),It=n("V+B2"),Ct=n("3rNm"),Nt=n("Ei6o"),$t=n("1N4k"),Et=n("wion");const Tt=Object(u.a)({computeWeightedLoss_:function(t,e,n=It.a.SUM_BY_NONZERO_WEIGHTS){const r=Object(j.a)(t,"losses","computeWeightedLoss");let a=null;null!=e&&(a=Object(j.a)(e,"weights","computeWeightedLoss"));const o=null==a?r:Object(p.a)(r,a);if(n===It.a.NONE)return o;if(n===It.a.SUM)return Object(mt.a)(o);if(n===It.a.MEAN){if(null==a)return Object(Nt.a)(o);{const t=r.size/a.size,e=Object(l.a)(Object(mt.a)(o),Object(mt.a)(a));return t>1?Object(l.a)(e,Object(m.a)(t)):e}}if(n===It.a.SUM_BY_NONZERO_WEIGHTS){if(null==a)return Object(l.a)(Object(mt.a)(o),Object(m.a)(r.size));{const t=Object(p.a)(a,Object(Et.a)(r.shape)),e=Object(Ct.a)(Object(mt.a)(Object($t.a)(t,Object(m.a)(0))),"float32");return Object(l.a)(Object(mt.a)(o),e)}}throw Error("Unknown reduction: "+n)}});Object(u.a)({absoluteDifference_:function(t,e,n,r=It.a.SUM_BY_NONZERO_WEIGHTS){const a=Object(j.a)(t,"labels","absoluteDifference"),o=Object(j.a)(e,"predictions","absoluteDifference");let s=null;null!=n&&(s=Object(j.a)(n,"weights","absoluteDifference")),Object(I.e)(a.shape,o.shape,"Error in absoluteDifference: ");const i=Object(jt.a)(Object(O.a)(a,o));return Tt(i,s,r)}}),Object(u.a)({cosineDistance_:function(t,e,n,r,a=It.a.SUM_BY_NONZERO_WEIGHTS){const o=Object(j.a)(t,"labels","cosineDistance"),s=Object(j.a)(e,"predictions","cosineDistance");let i=null;null!=r&&(i=Object(j.a)(r,"weights","cosineDistance")),Object(I.e)(o.shape,s.shape,"Error in cosineDistance: ");const u=Object(m.a)(1),c=Object(O.a)(u,Object(mt.a)(Object(p.a)(o,s),n,!0));return Tt(c,i,a)}});var St=n("kXpR");Object(u.a)({hingeLoss_:function(t,e,n,r=It.a.SUM_BY_NONZERO_WEIGHTS){let a=Object(j.a)(t,"labels","hingeLoss");const o=Object(j.a)(e,"predictions","hingeLoss");let s=null;null!=n&&(s=Object(j.a)(n,"weights","hingeLoss")),Object(I.e)(a.shape,o.shape,"Error in hingeLoss: ");const i=Object(m.a)(1);a=Object(O.a)(Object(p.a)(Object(m.a)(2),a),i);const u=Object(St.a)(Object(O.a)(i,Object(p.a)(a,o)));return Tt(u,s,r)}});var kt=n("8OX7"),Rt=n("k7Jv");Object(u.a)({huberLoss_:function(t,e,n,r=1,o=It.a.SUM_BY_NONZERO_WEIGHTS){const s=Object(j.a)(t,"labels","huberLoss"),i=Object(j.a)(e,"predictions","huberLoss");let u=null;null!=n&&(u=Object(j.a)(n,"weights","huberLoss")),Object(I.e)(s.shape,i.shape,"Error in huberLoss: ");const c=Object(m.a)(r),l=Object(jt.a)(Object(O.a)(i,s)),d=Object(kt.a)(l,c),h=Object(O.a)(l,d),f=Object(a.a)(Object(p.a)(Object(m.a)(.5),Object(Rt.a)(d)),Object(p.a)(c,h));return Tt(f,u,o)}});var At=n("E1lT");Object(u.a)({logLoss_:function(t,e,n,r=1e-7,o=It.a.SUM_BY_NONZERO_WEIGHTS){const s=Object(j.a)(t,"labels","logLoss"),i=Object(j.a)(e,"predictions","logLoss");let u=null;null!=n&&(u=Object(j.a)(n,"weights","logLoss")),Object(I.e)(s.shape,i.shape,"Error in logLoss: ");const c=Object(m.a)(1),l=Object(m.a)(r),d=Object(vt.a)(Object(p.a)(s,Object(At.a)(Object(a.a)(i,l)))),h=Object(p.a)(Object(O.a)(c,s),Object(At.a)(Object(a.a)(Object(O.a)(c,i),l))),f=Object(O.a)(d,h);return Tt(f,u,o)}});var Ft=n("QYQ3");Object(u.a)({meanSquaredError_:function(t,e,n,r=It.a.SUM_BY_NONZERO_WEIGHTS){const a=Object(j.a)(t,"labels","meanSquaredError"),o=Object(j.a)(e,"predictions","meanSquaredError");let s=null;null!=n&&(s=Object(j.a)(n,"weights","meanSquaredError")),Object(I.e)(a.shape,o.shape,"Error in meanSquaredError: ");const i=Object(Ft.a)(a,o);return Tt(i,s,r)}});var Dt=n("TyAZ"),_t=n("RrGL");Object(u.a)({sigmoidCrossEntropy_:function(t,e,n,r=0,o=It.a.SUM_BY_NONZERO_WEIGHTS){let s=Object(j.a)(t,"multiClassLabels","sigmoidCrossEntropy");const i=Object(j.a)(e,"logits","sigmoidCrossEntropy");let u=null;if(null!=n&&(u=Object(j.a)(n,"weights","sigmoidCrossEntropy")),Object(I.e)(s.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){const t=Object(m.a)(r),e=Object(m.a)(1),n=Object(m.a)(.5);s=Object(a.a)(Object(p.a)(s,Object(O.a)(e,t)),Object(p.a)(n,t))}const c=function(t,e){const n=Object(j.a)(t,"labels","sigmoidCrossEntropyWithLogits"),r=Object(j.a)(e,"logits","sigmoidCrossEntropyWithLogits");Object(I.e)(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const o=Object(St.a)(r),s=Object(p.a)(r,n),i=Object(_t.a)(Object(Dt.a)(Object(vt.a)(Object(jt.a)(r))));return Object(a.a)(Object(O.a)(o,s),i)}(s,i);return Tt(c,u,o)}});var Mt=n("NuWS"),Pt=n("r9q9");Object(u.a)({softmaxCrossEntropy_:function(t,e,n,r=0,o=It.a.SUM_BY_NONZERO_WEIGHTS){let s=Object(j.a)(t,"onehotLabels","softmaxCrossEntropy");const i=Object(j.a)(e,"logits","softmaxCrossEntropy");let u=null;if(null!=n&&(u=Object(j.a)(n,"weights","softmaxCrossEntropy")),Object(I.e)(s.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){const t=Object(m.a)(r),e=Object(m.a)(1),n=Object(m.a)(s.shape[1]);s=Object(a.a)(Object(p.a)(s,Object(O.a)(e,t)),Object(l.a)(t,n))}const c=function(t,e,n=-1){if(-1===n&&(n=e.rank-1),n!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was `+n);return Object(R.a)((t,e,r)=>{const a=Object(Pt.a)(e,[n],!0),o=Object(O.a)(Object(Ct.a)(e,"float32"),a);r([t,o]);const s=Object(vt.a)(Object(p.a)(o,t));return{value:Object(mt.a)(s,[n]),gradFunc:(t,e)=>{const[r,a]=e,o=Object(Mt.e)(t.shape,[n]);return[Object(p.a)(Object(f.a)(t,o),Object(O.a)(Object(Ct.a)(r,"float32"),Object(Dt.a)(a))),Object(p.a)(Object(f.a)(t,o),Object(O.a)(Object(Dt.a)(a),Object(Ct.a)(r,"float32")))]}}})(t,e)}(s,i);return Tt(c,u,o)}});const Bt={flipLeftRight:Z,resizeNearestNeighbor:it.a,resizeBilinear:st.a,rotateWithOffset:tt,cropAndResize:J,nonMaxSuppression:nt,nonMaxSuppressionAsync:async function(t,e,n,r=.5,a=Number.NEGATIVE_INFINITY){const o=Object(j.a)(t,"boxes","nonMaxSuppressionAsync"),s=Object(j.a)(e,"scores","nonMaxSuppressionAsync"),i=et(o,s,n,r,a);n=i.maxOutputSize,r=i.iouThreshold,a=i.scoreThreshold;const u=await Promise.all([o.data(),s.data()]),c=u[0],l=u[1],d=Object(rt.a)(c,l,n,r,a);return o!==t&&o.dispose(),s!==e&&s.dispose(),d},nonMaxSuppressionWithScore:at,nonMaxSuppressionWithScoreAsync:async function(t,e,n,r=.5,a=Number.NEGATIVE_INFINITY,o=0){const s=Object(j.a)(t,"boxes","nonMaxSuppressionAsync"),i=Object(j.a)(e,"scores","nonMaxSuppressionAsync"),u=et(s,i,n,r,a,o);n=u.maxOutputSize,r=u.iouThreshold,a=u.scoreThreshold,o=u.softNmsSigma;const c=await Promise.all([s.data(),i.data()]),l=c[0],d=c[1],p=Object(rt.c)(l,d,n,r,a,o);return s!==t&&s.dispose(),i!==e&&i.dispose(),p},nonMaxSuppressionPadded:ot,nonMaxSuppressionPaddedAsync:async function(t,e,n,r=.5,a=Number.NEGATIVE_INFINITY,o=!1){const s=Object(j.a)(t,"boxes","nonMaxSuppressionAsync"),i=Object(j.a)(e,"scores","nonMaxSuppressionAsync"),u=et(s,i,n,r,a,null),c=u.maxOutputSize,l=u.iouThreshold,d=u.scoreThreshold,[p,h]=await Promise.all([s.data(),i.data()]),f=Object(rt.b)(p,h,c,l,d,o);return s!==t&&s.dispose(),i!==e&&i.dispose(),f}}},FZCF:function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("atXS"),i=n("uBja"),u=n("VO80"),c=n("NclT");const l=Object(u.a)({conv3d_:function(t,e,n,u,l="NDHWC",d=[1,1,1]){const p=Object(o.a)(t,"x","conv3d"),h=Object(o.a)(e,"filter","conv3d");let f=p,m=!1;4===p.rank&&(m=!0,f=Object(c.a)(p,[1,p.shape[0],p.shape[1],p.shape[2],p.shape[3]])),s.b(5===f.rank,()=>`Error in conv3d: input must be rank 5, but got rank ${f.rank}.`),s.b(5===h.rank,()=>"Error in conv3d: filter must be rank 5, but got rank "+h.rank+"."),s.b(f.shape[4]===h.shape[3],()=>`Error in conv3d: depth of input (${f.shape[4]}) must match input depth for filter ${h.shape[3]}.`),s.b(Object(i.h)(n,d),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${d}'`),s.b("NDHWC"===l,()=>`Error in conv3d: got dataFormat of ${l} but only NDHWC is currently supported.`);const b=r.a.runKernelFunc((t,e)=>{const r=i.b(f.shape,h.shape,n,d,u),a=t.conv3d(f,h,r);return e([f,h]),a},{x:f,filter:h},null,a.D,{strides:n,pad:u,dataFormat:l,dilations:d});return m?Object(c.a)(b,[b.shape[1],b.shape[2],b.shape[3],b.shape[4]]):b}})},Fjpt:function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("VO80");const i=Object(s.a)({sqrt_:function(t){const e=Object(o.a)(t,"x","sqrt");return r.a.runKernelFunc((t,n)=>{const r=t.sqrt(e);return n([e]),r},{x:e},null,a.Bc)}})},G6IW:function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("VO80");const i=Object(s.a)({expm1_:function(t){const e=Object(o.a)(t,"x","expm1");return r.a.runKernelFunc((t,n)=>{const r=t.expm1(e);return n([e]),r},{x:e},null,a.X)}})},Grcp:function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("auKK"),a=n("wFtI"),o=n("atXS"),s=n("VO80");const i=Object(s.a)({fft_:function(t){return Object(o.b)("complex64"===t.dtype,()=>`The dtype for tf.spectral.fft() must be complex64 but got ${t.dtype}.`),r.a.runKernelFunc(e=>{const n=t.shape[t.shape.length-1],r=t.as2D(t.size/n,n);return e.fft(r).reshape(t.shape)},{input:t},null,a.Y)}})},Hfat:function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("VO80");const i=Object(s.a)({sign_:function(t){const e=Object(o.a)(t,"x","sign");return r.a.runKernelFunc(t=>t.sign(e),{x:e},null,a.sc)}})},HmhO:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("NuWS"),i=n("VO80"),u=n("yRKQ");const c=Object(i.a)({cumsum_:function(t,e=0,n=!1,i=!1){const c=Object(o.a)(t,"x","cumsum");return r.a.runKernelFunc((t,r)=>{const a=Object(s.f)([e],c.rank);let o=c;null!=a&&(o=Object(u.a)(c,a));const l=Object(s.g)(1,c.rank)[0];let d=t.cumsum(o,l,n,i);if(r([c]),null!=a){const t=Object(s.h)(a);d=Object(u.a)(d,t)}return d},{x:c},null,a.J,{axis:e,exclusive:n,reverse:i})}})},I79q:function(t,e,n){"use strict";var r,a,o,s,i;n.d(e,"b",(function(){return c})),n.d(e,"a",(function(){return l})),function(t){t.R0="R0",t.R1="R1",t.R2="R2",t.R3="R3",t.R4="R4",t.R5="R5",t.R6="R6"}(r||(r={})),function(t){t.float32="float32",t.int32="int32",t.bool="int32",t.complex64="complex64"}(a||(a={})),function(t){t.float32="float32",t.int32="int32",t.bool="bool",t.complex64="complex64"}(o||(o={})),function(t){t.float32="float32",t.int32="float32",t.bool="float32",t.complex64="complex64"}(s||(s={})),function(t){t.float32="complex64",t.int32="complex64",t.bool="complex64",t.complex64="complex64"}(i||(i={}));const u={float32:s,int32:a,bool:o,complex64:i};function c(t,e){if("string"===t||"string"===e){if("string"===t&&"string"===e)return"string";throw new Error(`Can not upcast ${t} with ${e}`)}return u[t][e]}function l(t){return c(t,"int32")}},"Ig+c":function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("VO80");const i=Object(s.a)({asin_:function(t){const e=Object(o.a)(t,"x","asin");return r.a.runKernelFunc((t,n)=>{const r=t.asin(e);return n([e]),r},{x:e},null,a.j)}})},JLAb:function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("VO80");const i=Object(s.a)({imag_:function(t){const e=Object(o.a)(t,"input","imag");return r.a.runKernelFunc(t=>t.imag(e),{input:e},null,a.nb)}})},Kfzt:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("o/e8"),a=n("atXS"),o=n("SHv8"),s=n("VO80"),i=n("NclT");const u=Object(s.a)({dot_:function(t,e){const n=Object(r.a)(t,"t1","dot"),s=Object(r.a)(e,"t2","dot");a.b(!(1!==n.rank&&2!==n.rank||1!==s.rank&&2!==s.rank),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${s.rank}.`);const u=1===n.rank?n.size:n.shape[1],c=1===s.rank?s.size:s.shape[0];if(a.b(u===c,()=>`Error in dot: inner dimensions of inputs must match, but got ${u} and ${c}.`),1===n.rank&&1===s.rank){const t=Object(i.a)(n,[1,-1]),e=Object(i.a)(s,[-1,1]),r=Object(o.a)(t,e);return Object(i.a)(r,[])}if(1===n.rank&&2===s.rank){const t=Object(i.a)(n,[1,-1]),e=Object(i.a)(s,[s.shape[0],s.shape[1]]),r=Object(o.a)(t,e);return Object(i.a)(r,[r.size])}if(2===n.rank&&1===s.rank){const t=Object(i.a)(s,[-1,1]),e=Object(o.a)(n,t);return Object(i.a)(e,[e.size])}{const t=Object(i.a)(s,[s.shape[0],s.shape[1]]);return Object(o.a)(n,t)}}})},L7Hl:function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("VO80");const i=Object(s.a)({step_:function(t,e=0){const n=Object(o.a)(t,"x","step");return r.a.runKernelFunc(t=>t.step(n,e),{x:n},null,a.Ec,{alpha:e})}})},NNfn:function(t,e,n){"use strict";n.d(e,"b",(function(){return u})),n.d(e,"f",(function(){return p})),n.d(e,"e",(function(){return h})),n.d(e,"d",(function(){return f})),n.d(e,"a",(function(){return m})),n.d(e,"c",(function(){return b}));var r=n("atXS");function a(t,e,n){let a;return a=Array.isArray(t)?parseFloat(t[0].toFixed(7))+" + "+parseFloat(t[1].toFixed(7))+"j":Object(r.z)(t)?`'${t}'`:"bool"===n?o(t):parseFloat(t.toFixed(7)).toString(),Object(r.L)(a,e)}function o(t){return 0===t?"false":"true"}function s(t){const e=[];for(let n=0;n<t.length;n+=2)e.push([t[n],t[n+1]]);return e}var i=n("6366");class u{constructor(t,e,n){if(this.dtype=e,this.shape=t.slice(),this.size=r.N(t),null!=n){const t=n.length;r.b(t===this.size,()=>`Length of values '${t}' does not match the size inferred by the shape '${this.size}'.`)}if("complex64"===e)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||r.n(e,this.size),this.strides=Object(r.j)(t)}set(t,...e){0===e.length&&(e=[0]),r.b(e.length===this.rank,()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`);const n=this.locToIndex(e);this.values[n]=t}get(...t){0===t.length&&(t=[0]);let e=0;for(const r of t){if(r<0||r>=this.shape[e])throw new Error(`Requested out of range element at ${t}.   Buffer shape=`+this.shape);e++}let n=t[t.length-1];for(let r=0;r<t.length-1;++r)n+=this.strides[r]*t[r];return this.values[n]}locToIndex(t){if(0===this.rank)return 0;if(1===this.rank)return t[0];let e=t[t.length-1];for(let n=0;n<t.length-1;++n)e+=this.strides[n]*t[n];return e}indexToLoc(t){if(0===this.rank)return[];if(1===this.rank)return[t];const e=new Array(this.shape.length);for(let n=0;n<e.length-1;++n)e[n]=Math.floor(t/this.strides[n]),t-=e[n]*this.strides[n];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return c().makeTensor(this.values,this.shape,this.dtype)}}let c=null,l=null,d=null;function p(t){c=t}function h(t){l=t}function f(t){d=t}class m{constructor(t,e,n,a){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=r.N(t),this.strides=Object(r.j)(t),this.dataId=n,this.id=a,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const t=await this.data();return l.buffer(this.shape,this.dtype,t)}bufferSync(){return l.buffer(this.shape,this.dtype,this.dataSync())}async array(){const t=await this.data();return Object(r.S)(this.shape,t)}arraySync(){return Object(r.S)(this.shape,this.dataSync())}async data(){this.throwIfDisposed();const t=c().read(this.dataId);if("string"===this.dtype){const n=await t;try{return n.map(t=>i.decodeString(t))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataSync(){this.throwIfDisposed();const t=c().readSync(this.dataId);if("string"===this.dtype)try{return t.map(t=>i.decodeString(t))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();const t=await c().read(this.dataId);return"string"===this.dtype?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||(c().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return l.print(this,t)}clone(){return this.throwIfDisposed(),l.clone(this)}toString(t=!1){return function(t,e,n,i){const u=Object(r.j)(e),c=function(t,e,n,o){const i=Object(r.N)(e),u=o[o.length-1],c=new Array(u).fill(0),l=e.length,d="complex64"===n?s(t):t;if(l>1)for(let r=0;r<i/u;r++){const t=r*u;for(let e=0;e<u;e++)c[e]=Math.max(c[e],a(d[t+e],0,n).length)}return c}(t,e,n,u),l=e.length,d=function t(e,n,r,i,u,c=!0){const l="complex64"===r?2:1,d=n[0],p=n.length;if(0===p)return"complex64"===r?[a(s(e)[0],0,r)]:"bool"===r?[o(e[0])]:[e[0].toString()];if(1===p){if(d>20){let t=Array.from(e.slice(0,3*l)),n=Array.from(e.slice((d-3)*l,d*l));return"complex64"===r&&(t=s(t),n=s(n)),["["+t.map((t,e)=>a(t,u[e],r)).join(", ")+", ..., "+n.map((t,e)=>a(t,u[d-3+e],r)).join(", ")+"]"]}return["["+("complex64"===r?s(e):Array.from(e)).map((t,e)=>a(t,u[e],r)).join(", ")+"]"]}const h=n.slice(1),f=i.slice(1),m=i[0]*l,b=[];if(d>20){for(let n=0;n<3;n++){const a=n*m;b.push(...t(e.slice(a,a+m),h,r,f,u,!1))}b.push("...");for(let n=d-3;n<d;n++){const a=n*m;b.push(...t(e.slice(a,a+m),h,r,f,u,n===d-1))}}else for(let a=0;a<d;a++){const n=a*m;b.push(...t(e.slice(n,n+m),h,r,f,u,a===d-1))}const g=2===p?",":"";b[0]="["+b[0]+g;for(let a=1;a<b.length-1;a++)b[a]=" "+b[a]+g;let y=",\n";for(let a=2;a<p;a++)y+="\n";return b[b.length-1]=" "+b[b.length-1]+"]"+(c?"":y),b}(t,e,n,u,c),p=["Tensor"];return i&&(p.push("  dtype: "+n),p.push("  rank: "+l),p.push(`  shape: [${e}]`),p.push("  values:")),p.push(d.map(t=>"    "+t).join("\n")),p.join("\n")}(this.dataSync(),this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),l.cast(this,t)}variable(t=!0,e,n){return this.throwIfDisposed(),c().makeVariable(this,t,e,n)}}Object.defineProperty(m,Symbol.hasInstance,{value:t=>!!t&&null!=t.data&&null!=t.dataSync&&null!=t.throwIfDisposed});class b extends m{constructor(t,e,n,r){super(t.shape,t.dtype,t.dataId,r),this.trainable=e,this.name=n}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!r.a(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);c().disposeTensor(this),this.dataId=t.dataId,c().incRef(this,null)}dispose(){c().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(b,Symbol.hasInstance,{value:t=>t instanceof m&&null!=t.assign&&t.assign instanceof Function})},NX3e:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("o/e8"),a=n("WVnj");function o(t,e,n){const o=Object(r.c)(t,n);return Object(a.a)(t,e,o,n)}},NclT:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("atXS"),i=n("VO80");const u=Object(i.a)({reshape_:function(t,e){const n=Object(o.a)(t,"x","reshape",null);return r.a.runKernelFunc((t,r)=>(e=s.s(e,n.size),s.b(n.size===s.N(e),()=>"new shape and old shape must have the same number of elements."),r([n]),t.reshape(n,e)),{x:n},null,a.fc,{shape:e})}})},Nk7E:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("atXS"),i=n("VO80");const u=Object(i.a)({depthToSpace_:function(t,e,n="NHWC"){const i=Object(o.a)(t,"x","depthToSpace"),u="NHWC"===n?i.shape[1]:i.shape[2],c="NHWC"===n?i.shape[2]:i.shape[3],l="NHWC"===n?i.shape[3]:i.shape[1];return s.b(u*e>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${u} and ${e}  for depthToSpace with input shape\n    ${i.shape}`),s.b(c*e>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${c} and ${e} for depthToSpace with input shape\n        ${i.shape}`),s.b(l%(e*e)==0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${l} for depthToSpace with input shape ${i.shape}`),r.a.runKernelFunc(t=>t.depthToSpace(i,e,n),{x:i},null,a.K,{blockSize:e,dataFormat:n})}})},NuWS:function(t,e,n){"use strict";n.d(e,"b",(function(){return a})),n.d(e,"c",(function(){return o})),n.d(e,"d",(function(){return s})),n.d(e,"e",(function(){return i})),n.d(e,"a",(function(){return u})),n.d(e,"f",(function(){return c})),n.d(e,"h",(function(){return l})),n.d(e,"g",(function(){return d}));var r=n("atXS");function a(t,e){for(let n=0;n<t.length;++n)if(t[t.length-n-1]!==e-1-n)return!1;return!0}function o(t,e,n){const r=t.length+e.length,a=[];let o=0,s=0;for(let i=0;i<r;i++)-1===n.indexOf(i)?a.push(t[o++]):a.push(e[s++]);return a}function s(t,e){const n=[],r=t.length;for(let a=0;a<r;a++)-1===e.indexOf(a)&&n.push(t[a]);return[n,e.map(e=>t[e])]}function i(t,e){return o(t,e.map(t=>1),e)}function u(t,e,n){r.b(a(e,n),()=>t+" supports only inner-most axes for now. "+`Got axes ${e} and rank-${n} input.`)}function c(t,e){if(a(t,e))return null;const n=[];for(let r=0;r<e;++r)-1===t.indexOf(r)&&n.push(r);return t.forEach(t=>n.push(t)),n}function l(t){return t.map((t,e)=>[e,t]).sort((t,e)=>t[1]-e[1]).map(t=>t[0])}function d(t,e){const n=[];for(let r=e-t;r<e;++r)n.push(r);return n}},NyRW:function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var r=n("ofXK"),a=n("5dmV"),o=n("fXoL");let s=(()=>{class t{}return t.\u0275mod=o.Kb({type:t}),t.\u0275inj=o.Jb({factory:function(e){return new(e||t)},imports:[[r.c,a.a]]}),t})()},O74K:function(t,e,n){"use strict";n.r(e),n.d(e,"FaceMeshModule",(function(){return O}));var r=n("3Pt+"),a=n("ofXK"),o=n("tyNb"),s=n("fXoL"),i=n("42F4"),u=n("0IaG"),c=n("dNgK"),l=n("tk/3"),d=n("Wp6s"),p=n("A5z7");const h=["video"],f=["canvasLast"],m=["canvasPrior"],b=[{path:"",component:(()=>{class t{constructor(t,e,r,a,o,s){this.renderer=t,this.os=e,this.dialog=r,this.snackBar=a,this.httpClient=o,this.ngZone=s,this.constraints={audio:!1,video:{facingMode:"selfie",width:{ideal:4096},height:{ideal:2160}}},this.faceLandmarksDetection=n("pJIP"),n("7n2I")}ngOnInit(){console.log(this.faceLandmarksDetection),this.startCamera()}attachVideo(t){this.renderer.setProperty(this.videoElement.nativeElement,"srcObject",t),this.renderer.listen(this.videoElement.nativeElement,"play",t=>{this.main()})}handleError(t){console.log("Error: ",t)}startCamera(){navigator.mediaDevices&&navigator.mediaDevices.getUserMedia?navigator.mediaDevices.getUserMedia(this.constraints).then(this.attachVideo.bind(this)).catch(this.handleError):alert("Camera not available.")}async main(){const t=await this.faceLandmarksDetection.load(this.faceLandmarksDetection.SupportedPackages.mediapipeFacemesh),e=await t.estimateFaces({input:document.querySelector("video")});console.log(e)}}return t.\u0275fac=function(e){return new(e||t)(s.Mb(s.G),s.Mb(i.b),s.Mb(u.b),s.Mb(c.a),s.Mb(l.a),s.Mb(s.B))},t.\u0275cmp=s.Gb({type:t,selectors:[["ng-component"]],viewQuery:function(t,e){if(1&t&&(s.xc(h,!0),s.xc(f,!0),s.xc(m,!0)),2&t){let t;s.pc(t=s.bc())&&(e.videoElement=t.first),s.pc(t=s.bc())&&(e.canvasLast=t.first),s.pc(t=s.bc())&&(e.canvasPrior=t.first)}},decls:17,vars:0,consts:[["selected","true",1,"pointer"],[1,"p-1"],["autoplay","","muted","",1,"vid"],["video",""],["color","accent","selected","true",1,"pointer"]],template:function(t,e){1&t&&(s.Sb(0,"mat-card"),s.Sb(1,"mat-card-header"),s.Sb(2,"mat-card-subtitle"),s.Sb(3,"mat-chip",0),s.Cc(4,"Compare images"),s.Rb(),s.Rb(),s.Rb(),s.Sb(5,"div",1),s.Nb(6,"video",2,3),s.Rb(),s.Sb(8,"mat-card-content"),s.Sb(9,"p"),s.Cc(10," Allow the browser to use your camera and click on video to capture image or press buttons below, or either click on image holders on the left/below "),s.Rb(),s.Rb(),s.Sb(11,"mat-card-actions"),s.Sb(12,"mat-chip-list"),s.Sb(13,"mat-chip",4),s.Cc(14,"Capture first image from camera"),s.Rb(),s.Sb(15,"mat-chip",4),s.Cc(16,"Capture second image from camera"),s.Rb(),s.Rb(),s.Rb(),s.Rb())},directives:[d.a,d.d,d.f,p.a,d.c,d.b,p.b],styles:[".vid[_ngcontent-%COMP%]{width:100%;height:100%}.mat-chip[_ngcontent-%COMP%]{justify-content:space-between}.pointer[_ngcontent-%COMP%]{cursor:pointer}.center[_ngcontent-%COMP%]{position:absolute;top:50%;left:50%;transform:translateX(-50%) translateY(-50%)}.overlay[_ngcontent-%COMP%]{height:100vh;width:100%;background-color:rgba(0,0,0,.286);z-index:10;top:0;left:0;position:fixed;background:#000;opacity:.75!important}body[_ngcontent-%COMP%]{margin:0}.close-right[_ngcontent-%COMP%]{cursor:pointer;position:absolute;right:0;margin-right:10px}"]}),t})()}];var g=n("5dmV"),y=n("Q92/"),x=n("NyRW");let O=(()=>{class t{}return t.\u0275mod=s.Kb({type:t}),t.\u0275inj=s.Jb({factory:function(e){return new(e||t)},providers:[i.b],imports:[[o.e.forChild(b),r.o,r.h,a.c,g.a,y.a,x.a]]}),t})()},O7f5:function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("VO80");const i=Object(s.a)({neg_:function(t){const e=Object(o.a)(t,"x","neg");return r.a.runKernelFunc(t=>t.neg(e),{x:e},null,a.Pb)}})},OkRW:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("atXS"),i=n("VO80");const u=Object(i.a)({unstack_:function(t,e=0){const n=Object(o.a)(t,"x","unstack");return s.b(e>=-n.shape.length&&e<n.shape.length,()=>`Axis = ${e} is not in [-${n.shape.length}, ${n.shape.length})`),e<0&&(e+=n.shape.length),r.a.runKernelFunc(t=>t.unstack(n,e),{value:n},null,a.Oc,{axis:e})}})},OygE:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("atXS"),i=n("VO80");const u=Object(i.a)({batchToSpaceND_:function(t,e,n){const i=Object(o.a)(t,"x","batchToSpaceND"),u=e.reduce((t,e)=>t*e);return s.b(i.rank>=1+e.length,()=>`input rank is ${i.rank} but should be > than blockShape.length ${e.length}`),s.b(n.length===e.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${e.length}`),s.b(i.shape[0]%u==0,()=>`input tensor batch is ${i.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${u}`),r.a.runKernelFunc(t=>t.batchToSpaceND(i,e,n),{x:i},null,a.t,{blockShape:e,crops:n})}})},Pvz5:function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("auKK"),a=n("o/e8"),o=n("VO80"),s=n("NclT");const i=Object(o.a)({multinomial_:function(t,e,n,o=!1){const i=Object(a.a)(t,"logits","multinomial"),u=i.size,c=i.rank;if(u<2)throw new Error("Error in multinomial: you need at least 2 outcomes, but got "+u+".");if(c>2)throw new Error("Rank of probabilities must be 1 or 2, but is "+c);n=n||Math.random();const l=1===c?Object(s.a)(i,[1,-1]):i,d=r.a.runKernelFunc(t=>t.multinomial(l,o,e,n),{logits2D:l});return 1===c?Object(s.a)(d,[d.size]):d}})},"Q92/":function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var r=n("ofXK"),a=n("5dmV"),o=n("fXoL");let s=(()=>{class t{}return t.\u0275mod=o.Kb({type:t}),t.\u0275inj=o.Jb({factory:function(e){return new(e||t)},imports:[[r.c,a.a]]}),t})()},QVv9:function(t,e,n){"use strict";n.d(e,"a",(function(){return a}));var r=n("atXS");function a(t,e,n=0){let a=[];if("number"==typeof e)Object(r.b)(t.shape[n]%e==0,()=>"Number of splits must evenly divide the axis."),a=new Array(e).fill(t.shape[n]/e);else{const o=e.reduce((t,e)=>(-1===e&&(t+=1),t),0);Object(r.b)(o<=1,()=>"There should be only one negative value in split array.");const s=e.indexOf(-1);if(-1!==s){const r=e.reduce((t,e)=>e>0?t+e:t);e[s]=t.shape[n]-r}Object(r.b)(t.shape[n]===e.reduce((t,e)=>t+e),()=>"The sum of sizes must match the size of the axis dimension."),a=e}return a}},QYQ3:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),o=n("dsKV"),s=n("o/e8"),i=n("Um8L"),u=n("VO80");const c=Object(u.a)({squaredDifference_:function(t,e){let n=Object(s.a)(t,"a","squaredDifference"),u=Object(s.a)(e,"b","squaredDifference");return[n,u]=Object(o.b)(n,u),Object(i.a)(n.shape,u.shape),r.a.runKernelFunc((t,e)=>{const r=t.squaredDifference(n,u);return e([n,u]),r},{a:n,b:u},null,a.Dc,{})}})},QvbP:function(t,e){(function(e){t.exports=e}).call(this,{})},R0ls:function(t,e,n){"use strict";n.d(e,"c",(function(){return p})),n.d(e,"b",(function(){return h})),n.d(e,"a",(function(){return f})),n.d(e,"d",(function(){return m}));var r=n("Um8L"),a=n("njhW"),o=n("parS"),s=n("Ug8H"),i=n("kXpR"),u=n("Rqg+"),c=n("NclT"),l=n("L7Hl"),d=n("4FMF");function p(t,e,n){if(null==n||"linear"===n)return t;if("relu"===n)return Object(o.a)(t,Object(l.a)(e));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function h(t,e){let n=e;const a=r.c(t.shape,e.shape);return a.length>0&&(n=Object(d.a)(n,a)),Object(c.a)(n,t.shape)}function f(t,e,n){if("linear"===e)return t;if("relu"===e)return Object(i.a)(t);if("elu"===e)return Object(a.a)(t);if("relu6"===e)return Object(u.a)(t);if("prelu"===e)return Object(s.a)(t,n);throw new Error(`Unknown fused activation ${e}.`)}const m=(t,e)=>!(t>0)||"linear"===e},RRa9:function(t,e,n){"use strict";n.d(e,"a",(function(){return d}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("atXS"),i=n("NuWS"),u=n("VO80"),c=n("NclT"),l=n("yRKQ");const d=Object(u.a)({any_:function(t,e=null,n=!1){let u=Object(o.a)(t,"x","any","bool");return r.a.runKernelFunc(t=>{const r=Object(s.I)(e,u.shape);let a=r;const o=Object(i.f)(a,u.rank);null!=o&&(u=Object(l.a)(u,o),a=Object(i.g)(a.length,u.rank));const d=t.any(u,a);if(n){const t=Object(i.e)(d.shape,r);return Object(c.a)(d,t)}return d},{x:u},null,a.g,{axis:e,keepDims:n})}})},RbuM:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("atXS"),i=n("VO80"),u=n("QVv9");const c=Object(i.a)({split_:function(t,e,n=0){const i=Object(o.a)(t,"x","split");return r.a.runKernelFunc((t,r)=>{const a=Object(s.I)(n,i.shape)[0],o=Object(u.a)(i,e,a);return t.split(i,o,a)},{x:i},null,a.Ac,{numOrSizeSplits:e,axis:n})}})},RhH0:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),o=n("dsKV"),s=n("o/e8"),i=n("VO80");const u=Object(i.a)({mod_:function(t,e){let n=Object(s.a)(t,"a","mod"),i=Object(s.a)(e,"b","mod");return[n,i]=Object(o.b)(n,i),r.a.runKernelFunc((t,e)=>{const r=t.mod(n,i);return e([n,i]),r},{a:n,b:i},null,a.Nb)}})},RhVc:function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("VO80");const i=Object(s.a)({acosh_:function(t){const e=Object(o.a)(t,"x","acosh");return r.a.runKernelFunc((t,n)=>{const r=t.acosh(e);return n([e]),r},{x:e},null,a.c)}})},"Rqg+":function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("3rNm"),i=n("VO80");const u=Object(i.a)({relu6_:function(t){const e=Object(o.a)(t,"x","relu6");return r.a.runKernelFunc((t,n)=>(n([e]),"bool"===e.dtype?Object(s.a)(e,"int32"):t.relu6(e)),{x:e},null,a.ec)}})},RrGL:function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("VO80");const i=Object(s.a)({log1p_:function(t){const e=Object(o.a)(t,"x","log1p");return r.a.runKernelFunc((t,n)=>{const r=t.log1p(e);return n([e]),r},{x:e},null,a.xb)}})},RrjA:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI");function o(t,e,n){return r.a.runKernelFunc(r=>r.fill(t,e,n),{},null,a.Z,{shape:t,value:e,dtype:n})}},SFB9:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("atXS"),i=n("VO80");const u=Object(i.a)({addN_:function(t){s.b(Array.isArray(t),()=>"The argument passed to tf.addN() must be a list of tensors"),s.b(t.length>=1,()=>"Must pass at least one tensor to tf.addN(), but got "+t.length);const e=t.map((t,e)=>Object(o.a)(t,"tensors"+e,"addN")),n=e[0];return e.forEach(t=>{if(t.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),e.forEach(t=>{if(!s.a(t.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}),r.a.runKernelFunc((t,n)=>{const r=t.addN(e);return n(e),r},e,null,a.e)}})},SHv8:function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("auKK"),a=n("wFtI"),o=n("dsKV"),s=n("o/e8"),i=n("atXS"),u=n("VO80"),c=n("NclT");const l=Object(u.a)({matMul_:function(t,e,n=!1,u=!1){let l=Object(s.a)(t,"a","matMul"),d=Object(s.a)(e,"b","matMul");return[l,d]=Object(o.b)(l,d),r.a.runKernelFunc((t,e)=>{e([l,d]);const r=n?l.shape[l.rank-2]:l.shape[l.rank-1],a=u?d.shape[d.rank-1]:d.shape[d.rank-2],o=n?l.shape[l.rank-1]:l.shape[l.rank-2],s=u?d.shape[d.rank-2]:d.shape[d.rank-1],p=l.shape.slice(0,-2),h=d.shape.slice(0,-2),f=i.N(p),m=i.N(h);i.b(l.rank>=2&&d.rank>=2&&(f===m||1===f||1===m),()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${p}) and (${h}).`),i.b(r===a,()=>`Error in matMul: inner shapes (${r}) and (${a}) of Tensors with shapes ${l.shape} and ${d.shape} and transposeA=${n} and transposeB=${u} must match.`);const b=(f>m?p:h).concat([o,s]),g=n?Object(c.a)(l,[f,r,o]):Object(c.a)(l,[f,o,r]),y=u?Object(c.a)(d,[m,s,a]):Object(c.a)(d,[m,a,s]),x=t.batchMatMul(g,y,n,u);return Object(c.a)(x,b)},{a:l,b:d},null,a.s,{transposeA:n,transposeB:u})}})},SNsm:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("8Km0"),i=n("VO80"),u=n("NclT");const c=Object(i.a)({broadcastTo_:function(t,e){let n=Object(o.a)(t,"broadcastTo","x");const i=n.shape;if(e.some(t=>!(t>0)||t%1!=0))throw new Error(`broadcastTo(): Invalid broadcast shape [${e}].`);if(e.length<n.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${n.rank}.`);if(e.length>n.rank){const t=n.shape.slice();for(;t.length<e.length;)t.unshift(1);n=Object(u.a)(n,t)}const c=n.shape,l=Array.from(e);for(let r=e.length-1;r>=0;r--)if(c[r]===e[r])l[r]=1;else if(1!==n.shape[r])throw new Error(`broadcastTo(): [${i}] cannot be broadcast to [${e}].`);return 0===l.map((t,e)=>t>1?e:-1).filter(t=>t>=0).length?Object(s.a)(n):r.a.runKernelFunc(t=>t.tile(n,l),{x:n},null,a.u,{shape:e,inputShape:c})}})},THqV:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),o=n("atXS"),s=n("VO80"),i=n("NclT");const u=Object(s.a)({ifft_:function(t){return Object(o.b)("complex64"===t.dtype,()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${t.dtype}.`),r.a.runKernelFunc(e=>{const n=t.shape[t.shape.length-1],r=t.size/n,a=Object(i.a)(t,[r,n]),o=e.ifft(a);return Object(i.a)(o,t.shape)},{input:t},null,a.lb)}})},TyAZ:function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("VO80");const i=Object(s.a)({exp_:function(t){const e=Object(o.a)(t,"x","exp");return r.a.runKernelFunc((t,n)=>{const r=t.exp(e);return n([r]),r},{x:e},null,a.W)}})},"U/2n":function(t,e,n){"use strict";n.d(e,"a",(function(){return d}));var r=n("auKK"),a=n("wE5H"),o=n("wFtI"),s=n("o/e8"),i=n("atXS"),u=n("uBja"),c=n("VO80"),l=n("NclT");const d=Object(c.a)({maxPool3d_:function(t,e=[1,1,1],n,c,d,p="NDHWC",h){null==h?h=[1,1,1]:Object(a.a)("dilations is deprecated, this field will be gone in v3.0.0.");const f=Object(s.a)(t,"x","maxPool3d");let m=f,b=!1;4===f.rank&&(b=!0,m=Object(l.a)(f,[1,f.shape[0],f.shape[1],f.shape[2],f.shape[3]])),i.b(5===m.rank,()=>`Error in maxPool3d: x must be rank 5 but got rank ${m.rank}.`),i.b("NDHWC"===p,()=>"Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of "+p),i.b(u.h(n,h),()=>`Error in maxPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${h}'`),null!=d&&i.b(i.v(c),()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${d} but got pad ${c}.`);const g=r.a.runKernelFunc((t,r)=>{null==h&&(h=[1,1,1]);const a=u.f(m.shape,e,n,h,c,d,p),o=t.maxPool3d(m,a);return r([m,o]),o},{x:m},null,o.Eb,{filterSize:e,strides:n,pad:c,dimRoundingMode:d,dataFormat:p,dilations:h});return b?Object(l.a)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}})},"U/Lz":function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("atXS"),i=n("VO80");const u=Object(i.a)({unsortedSegmentSum_:function(t,e,n){const i=Object(o.a)(t,"x","unsortedSegmentSum"),u=Object(o.a)(e,"segmentIds","unsortedSegmentSum","int32");return Object(s.b)(Object(s.v)(n),()=>"numSegments must be of dtype int"),r.a.runKernelFunc((t,e)=>{const r=t.unsortedSegmentSum(i,u,n);return e([u]),r},{x:i,segmentIds:u},null,a.Pc,{numSegments:n})}})},U45G:function(t,e,n){"use strict";n.d(e,"a",(function(){return a}));var r=n("auKK");function a(t){return r.a.customGrad(t)}n("NNfn"),n("o/e8"),n("atXS")},UI8N:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),o=n("dsKV"),s=n("o/e8"),i=n("VO80");const u=Object(i.a)({floorDiv_:function(t,e){let n=Object(s.a)(t,"a","floorDiv"),i=Object(s.a)(e,"b","floorDiv");return[n,i]=Object(o.b)(n,i),r.a.runKernelFunc((t,e)=>{const r=t.floorDiv(n,i);return e([n,i]),r},{a:n,b:i},null,a.cb)}})},Ug8H:function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("VO80");const i=Object(s.a)({prelu_:function(t,e){const n=Object(o.a)(t,"x","prelu"),s=Object(o.a)(e,"alpha","prelu");return r.a.runKernelFunc((t,e)=>{const r=t.prelu(n,s);return e([n,s]),r},{x:n,alpha:s},null,a.Yb)}})},Um8L:function(t,e,n){"use strict";function r(t,e){const n=t.length,r=[];for(let a=0;a<n;a++){const o=n-1-a,s=t[o]||1;(e[e.length-1-a]||1)>1&&1===s&&r.unshift(o)}return r}function a(t,e){const n=[];for(let r=0;r<e.length;r++){const a=t[t.length-r-1],o=e.length-r-1,s=e[o];(null==a||1===a&&s>1)&&n.unshift(o)}return n}function o(t,e){const n=[],r=Math.max(t.length,e.length);for(let a=0;a<r;a++){let r=t[t.length-a-1];null==r&&(r=1);let o=e[e.length-a-1];if(null==o&&(o=1),1===r)n.unshift(o);else if(1===o)n.unshift(r);else{if(r!==o)throw Error(`Operands could not be broadcast together with shapes ${t} and ${e}.`);n.unshift(r)}}return n}n.d(e,"b",(function(){return r})),n.d(e,"c",(function(){return a})),n.d(e,"a",(function(){return o}))},"V+B2":function(t,e,n){"use strict";var r;n.d(e,"a",(function(){return r})),function(t){t[t.NONE=0]="NONE",t[t.MEAN=1]="MEAN",t[t.SUM=2]="SUM",t[t.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(r||(r={}))},VO80:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("atXS");function o(t){const e=Object.keys(t);if(1!==e.length)throw new Error("Please provide an object with a single key (operation name) mapping to a function. Got an object with "+e.length+" keys.");let n=e[0];const o=t[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const s=(...t)=>{r.a.startScope(n);try{const e=o(...t);return Object(a.x)(e)&&console.error("Cannot return a Promise inside of tidy."),r.a.endScope(e),e}catch(e){throw r.a.endScope(null),e}};return Object.defineProperty(s,"name",{value:n,configurable:!0}),s}},VhY8:function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("VO80");const i=Object(s.a)({topk_:function(t,e=1,n=!0){const s=Object(o.a)(t,"x","topk");if(0===s.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const i=s.shape[s.shape.length-1];if(e>i)throw new Error(`'k' passed to topk() must be <= the last dimension (${i}) but got `+e);const u={x:s},c={k:e,sorted:n},[l,d]=r.a.runKernelFunc(t=>t.topk(s,e,n),u,null,a.Lc,c);return{values:l,indices:d}}})},WJRb:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI");function o(t,e,n){if(n<=0)throw new Error("The number of values should be positive.");return r.a.runKernelFunc(r=>r.linspace(t,e,n),{},null,a.vb,{start:t,stop:e,num:n})}},WVnj:function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var r=n("auKK"),a=n("atXS"),o=n("6366");function s(t,e,n,s){if(null==s&&(s=Object(a.r)(t)),"complex64"===s)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Object(a.A)(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=e){Object(a.c)(e);const t=Object(a.N)(e),r=Object(a.N)(n);Object(a.b)(t===r,()=>`Based on the provided shape, [${e}], the tensor should have ${t} values but has ${r}`);for(let o=0;o<n.length;++o){const t=n[o],r=o!==n.length-1||t!==Object(a.N)(e.slice(o));Object(a.b)(n[o]===e[o]||!r,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${e}). `)}}return Object(a.A)(t)||Array.isArray(t)||(t=[t]),e=e||n,t="string"!==s?Object(o.toTypedArray)(t,s):Object(a.m)(t,[],!0),r.a.makeTensor(t,e,s)}},WWBm:function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("VO80");const i=Object(s.a)({ceil_:function(t){const e=Object(o.a)(t,"x","ceil");return r.a.runKernelFunc(t=>t.ceil(e),{x:e},null,a.w)}})},WYAb:function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("VO80");const i=Object(s.a)({isInf_:function(t){const e=Object(o.a)(t,"x","isInf");return r.a.runKernelFunc(t=>t.isInf(e),{x:e},null,a.pb)}})},Wiw4:function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var r=n("auKK"),a=n("atXS"),o=n("B3db");function s(t,e="float32"){if("complex64"===e){const e=s(t,"float32"),n=s(t,"float32");return Object(o.a)(e,n)}const n=Object(a.F)(Object(a.N)(t),e);return r.a.makeTensor(n,t,e)}},X4fa:function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("VO80");const i=Object(s.a)({softmax_:function(t,e=-1){const n=Object(o.a)(t,"logits","softmax","float32");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${e}`);return r.a.runKernelFunc((t,r)=>{const a=t.softmax(n,e);return r([a]),a},{logits:n},null,a.wc,{dim:e})}})},XcSs:function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("VO80");const i=Object(s.a)({sinh_:function(t){const e=Object(o.a)(t,"x","sinh");return r.a.runKernelFunc((t,n)=>{const r=t.sinh(e);return n([e]),r},{x:e},null,a.uc)}})},Xr0w:function(t,e,n){"use strict";n.r(e),n.d(e,"assertParamsValid",(function(){return a})),n.d(e,"maskToAxes",(function(){return o})),n.d(e,"computeOutShape",(function(){return s})),n.d(e,"stridesWithElidedDims",(function(){return i})),n.d(e,"getNormalizedAxes",(function(){return l})),n.d(e,"startIndicesWithElidedDims",(function(){return d})),n.d(e,"stopIndicesWithElidedDims",(function(){return p})),n.d(e,"stridesForAxis",(function(){return h})),n.d(e,"startForAxis",(function(){return f})),n.d(e,"stopForAxis",(function(){return m})),n.d(e,"isSliceContinous",(function(){return b})),n.d(e,"computeFlatOffset",(function(){return g})),n.d(e,"parseSliceParams",(function(){return y}));var r=n("atXS");function a(t,e,n){const a=t.shape.length;r.b(a===e.length,()=>`Error in slice${a}D: Length of begin ${e} must match the rank of the array (${a}).`),r.b(a===n.length,()=>`Error in slice${a}D: Length of size ${n} must match the rank of the array (${a}).`);for(let o=0;o<a;++o)r.b(e[o]+n[o]<=t.shape[o],()=>`Error in slice${a}D: begin[${o}] + size[${o}] (${e[o]+n[o]}) would overflow input.shape[${o}] (${t.shape[o]})`)}function o(t){const e=[];let n=0;for(;t>0;)1&t&&e.push(n),t/=2,n++;return e}function s(t,e,n){const r=[];for(let a=0;a<t.length;a++)r[a]=Math.ceil((e[a]-t[a])/n[a]);return r}function i(t,e,n,r){const a=[...t];for(let o=a.length;o<r.length;o++)a.push(1);for(let o=0;o<n;o++)0===o?a[e]=1:(a.splice(e,0,1),a.pop());return a}function u(t,e,n){return n<=t?n:n-(e-1)}function c(t,e){const n=[];for(let r=0;r<t;r++)n.push(e+r);return n}function l(t,e,n,r,a,o,s,u,c){const l=t.length;let b=new Array(l),g=new Array(l),y=new Array(l);if(e.length&&n>0){const c=e[0],l=n+1;b=d(s,c,l,r,t),g=p(u,c,l,a,t),y=i(o,c,l,t)}else for(let i=0;i<l;i++)b[i]=f(s,r,o,t,i,c),g[i]=m(u,a,o,t,i,c),y[i]=h(o,i,c);return{begin:b,end:g,strides:y}}function d(t,e,n,r,a){const o=[...a],s=c(n,e);for(let i=0;i<o.length;i++)if(s.indexOf(i)>-1)o[i]=0;else{const a=u(e,n,i);let s=r[a];t&1<<a&&(s=0),o[i]=s}return o}function p(t,e,n,a,o){const s=[...o],i=c(n,e);for(let r=0;r<s.length;r++)if(i.indexOf(r)>-1)s[r]=Number.MAX_SAFE_INTEGER;else{const o=u(e,n,r);let i=a[o];t&1<<o&&(i=Number.MAX_SAFE_INTEGER),s[r]=i}for(let u=0;u<s.length;u++){const t=o[u];s[u]<0&&(s[u]+=t),s[u]=r.i(0,s[u],o[u])}return s}function h(t,e,n){let r=t[e];return(n&1<<e||null==r)&&(r=1),r}function f(t,e,n,a,o,s){let i=e[o];(t&1<<o||s&1<<o||null==i)&&(i=(n[o]||1)>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const u=a[o];return i<0&&(i+=u),i=r.i(0,i,u-1),i}function m(t,e,n,a,o,s){let i=e[o];const u=n[o]||1;(t&1<<o||s&1<<o||null==i)&&(i=u>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const c=a[o];return i<0&&(i+=c),i=u>0?r.i(0,i,c):r.i(-1,i,c-1),i}function b(t,e,n){let r=n.length;for(let a=0;a<n.length;a++)if(n[a]>1){r=a;break}for(let a=r+1;a<n.length;a++)if(e[a]>0||n[a]!==t[a])return!1;return!0}function g(t,e){let n=t.length>0?t[t.length-1]:1;for(let r=0;r<t.length-1;r++)n+=t[r]*e[r];return n}function y(t,e,n){let a;const o=t.shape.length;let s;return a="number"==typeof e?[e,...new Array(o-1).fill(0)]:e.length<o?e.concat(new Array(o-e.length).fill(0)):e.slice(),a.forEach(t=>{r.b(-1!==t,()=>"slice() does not support negative begin indexing.")}),s=null==n?new Array(o).fill(-1):"number"==typeof n?[n,...new Array(o-1).fill(-1)]:n.length<o?n.concat(new Array(o-n.length).fill(-1)):n,s=s.map((e,n)=>e>=0?e:(r.b(-1===e,()=>`Negative size values should be exactly -1 but got ${e} for the slice() size at index ${n}.`),t.shape[n]-a[n])),[a,s]}},Xyqe:function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("VO80");const i=Object(s.a)({rsqrt_:function(t){const e=Object(o.a)(t,"x","rsqrt");return r.a.runKernelFunc((t,n)=>{const r=t.rsqrt(e);return n([e]),r},{x:e},null,a.nc)}})},YAKK:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),o=n("dsKV"),s=n("o/e8"),i=n("VO80");const u=Object(i.a)({atan2_:function(t,e){let n=Object(s.a)(t,"a","atan2"),i=Object(s.a)(e,"b","atan2");return[n,i]=Object(o.b)(n,i),r.a.runKernelFunc((t,e)=>{const r=t.atan2(n,i);return e([n,i]),r},{a:n,b:i},null,a.m)}})},YSVl:function(t,e,n){var r=n("EhIR"),a=n("uDiL"),o=n("pJ6O"),s=n("yuCN"),i=n("euyF"),u=n("ie1u"),c=n("pJ3+");c.alea=r,c.xor128=a,c.xorwow=o,c.xorshift7=s,c.xor4096=i,c.tychei=u,t.exports=c},Z5Ez:function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("atXS"),i=n("SNsm"),u=n("Um8L"),c=n("VO80");const l=Object(c.a)({where_:function(t,e,n){const c=Object(o.a)(e,"a","where"),l=Object(o.a)(n,"b","where"),d=Object(o.a)(t,"condition","where","bool"),p=Object(u.a)(c.shape,l.shape),h=Object(i.a)(c,p),f=Object(i.a)(l,p);return 1===d.rank&&Object(s.b)(d.shape[0]===c.shape[0],()=>"The first dimension of `a` must match the size of `condition`."),1!==d.rank&&Object(s.e)(d.shape,f.shape,"Error in where: "),r.a.runKernelFunc((t,e)=>{const n=t.select(d,h,f);return e([d]),n},{condition:d,t:h,e:f},null,a.pc)}})},ZJ6U:function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("atXS"),i=n("87nf"),u=n("VO80"),c=n("NX3e");const l=Object(u.a)({concat_:function(t,e=0){Object(s.b)(t.length>=1,()=>"Pass at least one tensor to concat");let n=Object(o.b)(t,"tensors","concat");return"complex64"===n[0].dtype&&n.forEach(t=>{if("complex64"!==t.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${t.dtype}. `)}),r.a.runKernelFunc((t,r)=>{const a=Object(s.I)(e,n[0].shape)[0],o=Object(i.b)(n.map(t=>t.shape),a);if(0===Object(s.N)(o))return Object(c.a)([],o);if(n=n.filter(t=>t.size>0),1===n.length)return n[0];const u=n.map(t=>t.shape);Object(i.a)(u,a);const l=t.concat(n,a);return r(n),l},n,null,a.z,{axis:e})}})},aSZd:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),o=n("uBja"),s=n("VO80"),i=n("NclT");const u=Object(s.a)({depthwiseConv2dNativeBackpropFilter_:function(t,e,n,s,u,c=[1,1],l){let d=t;3===t.rank&&(d=Object(i.a)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let p=e;return 3===p.rank&&(p=Object(i.a)(e,[1,e.shape[0],e.shape[1],e.shape[2]])),r.a.runKernelFunc(e=>{const r=o.a(t.shape,n,s,c,u,l,!0);return e.depthwiseConv2DDerFilter(d,p,r)},{x:d,dy:p},null,a.M,{strides:s,pad:u,dimRoundingMode:l,dilations:c,filterShape:n})}})},aTLu:function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("VO80");const i=Object(s.a)({sin_:function(t){const e=Object(o.a)(t,"x","sin");return r.a.runKernelFunc((t,n)=>{const r=t.sin(e);return n([e]),r},{x:e},null,a.tc)}})},adw1:function(t,e,n){"use strict";n.d(e,"a",(function(){return f}));var r=n("B3db"),a=n("ZJ6U"),o=n("JLAb"),s=n("parS"),i=n("VO80"),u=n("17CO"),c=n("NclT"),l=n("0I63"),d=n("AV8V"),p=n("bTzI"),h=n("THqV");const f=Object(i.a)({irfft_:function(t){const e=t.shape[t.shape.length-1],n=t.size/e;let i;if(e<=2){const r=Object(c.a)(t,[n,e]);i=Object(h.a)(r)}else{const f=[n,2*(e-1)],m=Object(c.a)(Object(u.a)(t),[n,e]),b=Object(c.a)(Object(o.a)(t),[n,e]),g=Object(l.a)(Object(p.a)(m,[0,1],[n,e-2]),1),y=Object(s.a)(Object(l.a)(Object(p.a)(b,[0,1],[n,e-2]),1),Object(d.a)(-1)),x=Object(a.a)([m,g],1),O=Object(a.a)([b,y],1),v=Object(c.a)(Object(r.a)(x,O),[f[0],f[1]]);i=Object(h.a)(v)}if(i=Object(u.a)(i),3===t.rank&&0!==t.shape[0]){const e=i,n=t.shape[0];i=Object(c.a)(i,[n,i.shape[0]/n,i.shape[1]]),e.dispose()}return i}})},atXS:function(t,e,n){"use strict";function r(t){let e=t.length,n=0,r=0;for(;e>0;)r=Math.random()*e|0,e--,n=t[e],t[e]=t[r],t[r]=n}function a(t,e,n){return Math.max(t,Math.min(e,n))}function o(t){return t%2==0?t:t+1}function s(t){let e=0;for(let n=0;n<t.length;n++)e+=t[n];return e}function i(t,e){const n=Math.random();return e*n+(1-n)*t}function u(t,e){let n=0;for(let r=0;r<t.length;r++){const a=Number(t[r])-Number(e[r]);n+=a*a}return n}function c(t,e){if(!t)throw new Error("string"==typeof e?e:e())}function l(t,e,n=""){c(m(t,e),()=>n+` Shapes ${t} and ${e} must match`)}function d(t){c(null!=t,()=>"The input to the tensor constructor must be a non-null value.")}function p(t,e=[],n=!1){if(null==e&&(e=[]),Array.isArray(t)||S(t)&&!n)for(let r=0;r<t.length;++r)p(t[r],e,n);else e.push(t);return e}function h(t){if(0===t.length)return 1;let e=t[0];for(let n=1;n<t.length;n++)e*=t[n];return e}function f(t){return 0===t.length}function m(t,e){if(t===e)return!0;if(null==t||null==e)return!1;if(t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(t[n]!==e[n])return!1;return!0}function b(t){return t%1==0}function g(t){if(null!=Math.tanh)return Math.tanh(t);if(t===1/0)return 1;if(t===-1/0)return-1;{const e=Math.exp(2*t);return(e-1)/(e+1)}}function y(t){const e=Math.ceil(Math.sqrt(t));return[e,Math.ceil(t/e)]}function x(t){const e=new Uint32Array(t);for(let n=0;n<t;++n)e[n]=n;return r(e),e}function O(t,e){return e<=t.length?t:t+" ".repeat(e-t.length)}function v(t,e=(t=>0),n){return new Promise((r,a)=>{let o=0;const s=()=>{if(t())return void r();o++;const i=e(o);null!=n&&o>=n?a():setTimeout(s,i)};s()})}function w(t,e){let n=1,r=-1;for(let o=0;o<t.length;++o)if(t[o]>=0)n*=t[o];else if(-1===t[o]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${o}`);r=o}else if(t[o]<0)throw Error(`Shapes can not be < 0. Found ${t[o]} at dim ${o}`);if(-1===r){if(e>0&&e!==n)throw Error(`Size(${e}) must match the product of shape ${t}`);return t}if(0===n)throw Error(`Cannot infer the missing size in [${t}] when there are 0 elements`);if(e%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${n}`);const a=t.slice();return a[r]=e/n,a}function j(t,e){const n=e.length;return c((t=null==t?e.map((t,e)=>e):[].concat(t)).every(t=>t>=-n&&t<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis `+t),c(t.every(t=>b(t)),()=>"All values in axis param must be integers but got axis "+t),t.map(t=>t<0?n+t:t)}function I(t,e){const n=[],r=[],a=null!=e&&Array.isArray(e)&&0===e.length,o=null==e||a?null:j(e,t).sort();let s=0;for(let i=0;i<t.length;++i){if(null!=o){if(o[s]===i&&1!==t[i])throw new Error(`Can't squeeze axis ${i} since its dim '${t[i]}' is not 1`);(null==o[s]||o[s]>i)&&1===t[i]&&(n.push(t[i]),r.push(i)),o[s]<=i&&s++}1!==t[i]&&(n.push(t[i]),r.push(i))}return{newShape:n,keptDims:r}}function C(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else{if("bool"!==t)throw new Error("Unknown data type "+t);n=new Uint8Array(e)}return n}function N(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else if("bool"===t)n=new Uint8Array(e);else{if("string"!==t)throw new Error("Unknown data type "+t);n=new Array(e)}return n}function $(t,e){for(let n=0;n<t.length;n++){const r=t[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${e} being uploaded contains ${r}.`)}}function E(t){return"bool"===t||"complex64"===t||"float32"===t||"int32"===t||"string"===t}function T(t,e){return!("complex64"===e||"float32"===e&&"complex64"!==t||"int32"===e&&"float32"!==t&&"complex64"!==t||"bool"===e&&"bool"===t)}function S(t){return t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array}function k(t){if("float32"===t||"int32"===t)return 4;if("complex64"===t)return 8;if("bool"===t)return 1;throw new Error("Unknown dtype "+t)}function R(t){if(null==t)return 0;let e=0;return t.forEach(t=>e+=t.length),e}function A(t){return"string"==typeof t||t instanceof String}function F(t){return"boolean"==typeof t}function D(t){return"number"==typeof t}function _(t){return Array.isArray(t)?_(t[0]):t instanceof Float32Array?"float32":t instanceof Int32Array||t instanceof Uint8Array?"int32":D(t)?"float32":A(t)?"string":F(t)?"bool":"float32"}function M(t){return!!(t&&t.constructor&&t.call&&t.apply)}function P(t,e){for(let n=e;n<t;++n)if(t%n==0)return n;return t}function B(t){const e=t.length;if(e<2)return[];const n=new Array(e-1);n[e-2]=t[e-1];for(let r=e-3;r>=0;--r)n[r]=n[r+1]*t[r+1];return n}function L(t,e){if(0===t.length)return e[0];const n=t.reduce((t,e)=>t*e);if(0===n)return[];if(n!==e.length)throw new Error(`[${t}] does not match the input size ${e.length}.`);return function t(e,n,r){const a=new Array;if(1===n.length){const t=n[0];for(let n=0;n<t;n++)a[n]=r[e+n]}else{const o=n[0],s=n.slice(1),i=s.reduce((t,e)=>t*e);for(let n=0;n<o;n++)a[n]=t(e+n*i,s,r)}return a}(0,t,e)}function V(t,e){const n=z(t,e);for(let r=0;r<n.length;r++)n[r]=1;return n}function z(t,e){if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e)return new Uint8Array(t);throw new Error("Unknown data type "+e)}function W(t,e){const n=t.reduce((t,e)=>t*e,1);if(null==e||"float32"===e)return L(t,new Float32Array(n));if("int32"===e)return L(t,new Int32Array(n));if("bool"===e)return L(t,new Uint8Array(n));throw new Error("Unknown data type "+e)}function U(t){t.forEach(e=>{c(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${t}].`)})}function K(t,e,n){if(0===e)return 0;if(1===e)return t[0];let r=t[t.length-1];for(let a=0;a<t.length-1;++a)r+=n[a]*t[a];return r}function G(t,e,n){if(0===e)return[];if(1===e)return[t];const r=new Array(e);for(let a=0;a<r.length-1;++a)r[a]=Math.floor(t/n[a]),t-=r[a]*n[a];return r[r.length-1]=t,r}function H(t){return t&&t.then&&"function"==typeof t.then}n.d(e,"M",(function(){return r})),n.d(e,"i",(function(){return a})),n.d(e,"H",(function(){return o})),n.d(e,"Q",(function(){return s})),n.d(e,"J",(function(){return i})),n.d(e,"l",(function(){return u})),n.d(e,"b",(function(){return c})),n.d(e,"e",(function(){return l})),n.d(e,"d",(function(){return d})),n.d(e,"m",(function(){return p})),n.d(e,"N",(function(){return h})),n.d(e,"y",(function(){return f})),n.d(e,"a",(function(){return m})),n.d(e,"v",(function(){return b})),n.d(e,"R",(function(){return g})),n.d(e,"O",(function(){return y})),n.d(e,"k",(function(){return x})),n.d(e,"L",(function(){return O})),n.d(e,"K",(function(){return v})),n.d(e,"s",(function(){return w})),n.d(e,"I",(function(){return j})),n.d(e,"P",(function(){return I})),n.d(e,"o",(function(){return C})),n.d(e,"n",(function(){return N})),n.d(e,"h",(function(){return $})),n.d(e,"B",(function(){return E})),n.d(e,"p",(function(){return T})),n.d(e,"A",(function(){return S})),n.d(e,"g",(function(){return k})),n.d(e,"f",(function(){return R})),n.d(e,"z",(function(){return A})),n.d(e,"t",(function(){return F})),n.d(e,"w",(function(){return D})),n.d(e,"r",(function(){return _})),n.d(e,"u",(function(){return M})),n.d(e,"G",(function(){return P})),n.d(e,"j",(function(){return B})),n.d(e,"S",(function(){return L})),n.d(e,"D",(function(){return V})),n.d(e,"F",(function(){return z})),n.d(e,"E",(function(){return W})),n.d(e,"c",(function(){return U})),n.d(e,"C",(function(){return K})),n.d(e,"q",(function(){return G})),n.d(e,"x",(function(){return H}))},auKK:function(t,e,n){"use strict";n.d(e,"b",(function(){return g})),n.d(e,"a",(function(){return y}));var r=n("i4e/"),a=n("szMd"),o=n("9JAK"),s=n("wFtI"),i=n("c7gn"),u=n("atXS");class c{constructor(t,e){this.backendTimer=t,this.logger=e,null==e&&(this.logger=new d)}profileKernel(t,e,n){let r;const a=this.backendTimer.time(()=>{r=n()});for(let o=0;o<r.length;o++){const e=r[o];e.data().then(n=>{l(n,e.dtype,t)})}return{kernelName:t,outputs:r,inputs:e,timeMs:a.then(t=>t.kernelMs),extraInfo:a.then(t=>null!=t.getExtraProfileInfo?t.getExtraProfileInfo():"")}}logKernelProfile(t){const{kernelName:e,outputs:n,timeMs:r,inputs:a,extraInfo:o}=t;n.forEach(t=>{Promise.all([t.data(),r,o]).then(n=>{this.logger.logKernelProfile(e,t,n[0],n[1],a,n[2])})})}}function l(t,e,n){if("float32"!==e)return!1;for(let r=0;r<t.length;r++){const e=t[r];if(isNaN(e)||!isFinite(e))return console.warn(`Found ${e} in the result of '${n}'`),!0}return!1}class d{logKernelProfile(t,e,n,r,a,o){const s="number"==typeof r?u.L(r+"ms",9):r.error,i=u.L(t,25),c=e.rank,l=e.size,d=u.L(e.shape.toString(),14);let p="";for(const u in a){const t=a[u];if(null!=t){const n=t.shape||e.shape,r=n.length;p+=`${u}: ${r}D ${r>0?n:""} `}}console.log(`%c${i}\t%c${s}\t%c${c}D ${d}\t%c${l}\t%c${p}\t%c${o}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}var p=n("NNfn"),h=n("dsKV"),f=n("6366");class m{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}class b{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new m}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then(()=>{});if(null!=this.backendInstance)return;const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e];if(await this.initializeBackend(n).success)return void(await this.setBackend(n))}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry)){if(!(t in this.registryFactory))return null;{const{asyncInit:e}=this.initializeBackend(t);if(e)return null}}return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e,n=1){return t in this.registryFactory?(console.warn(t+" backend was already registered. Reusing existing backend factory."),!1):(this.registryFactory[t]={factory:e,priority:n},!0)}async setBackend(t){if(null==this.registryFactory[t])throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,null==this.registry[t]){this.backendInstance=null;const{success:e,asyncInit:n}=this.initializeBackend(t);if(!(n?await e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new c(this.backendInstance),!0}setupRegisteredKernels(){Object(i.c)(this.backendName).forEach(t=>{null!=t.setupFunc&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(t){Object(i.c)(t).forEach(e=>{null!=e.disposeFunc&&e.disposeFunc(this.registry[t])})}initializeBackend(t){const e=this.registryFactory[t];if(null==e)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{const n=e.factory();if(!n||n instanceof r.b||"function"!=typeof n.then)return this.registry[t]=n,{success:!0,asyncInit:!1};{const e=++this.pendingBackendInitId,r=n.then(n=>!(e<this.pendingBackendInitId||(this.registry[t]=n,this.pendingBackendInit=null,0))).catch(n=>(e<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${t} failed`),console.warn(n.stack||n.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(n){return console.warn(`Initialization of backend ${t} failed`),console.warn(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(t+" backend not found in registry");this.backendName===t&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority)}initializeBackendsAndReturnBest(){const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){const n=this.state.tensorInfo.get(e),r=n.backend,a=this.readSync(e);r.disposeData(e),n.backend=t,t.move(e,a,n.shape,n.dtype),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let n,r=null;if(null==e){if("function"!=typeof t)throw new Error("Please provide a function to tidy()");e=t}else{if("string"!=typeof t&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof e)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=t}return this.scopedRun(()=>this.startScope(r),()=>this.endScope(n),()=>(n=e(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n))}scopedRun(t,e,n){t();try{const t=n();return e(),t}catch(r){throw e(),r}}nextTensorId(){return b.nextTensorId++}nextVariableId(){return b.nextVariableId++}clone(t){const e=this.makeTensorFromDataId(t.dataId,t.shape,t.dtype);return this.addTapeNode(this.state.activeScope.name,{x:t},[e],t=>({x:()=>y.runKernelFunc(e=>e.cast(t,"float32"),{x:t},null,s.v,{dtype:"float32"})}),[],{}),e}runKernel(t,e,n,r,a){return this.runKernelFunc(null,e,null,t,n,r,a)}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,n){const r=this.backend.numDataIds();let a=0;n.forEach(t=>{a+="complex64"===t.dtype?3:1});const o=r-e-a-this.state.numDataMovesStack[this.state.numDataMovesStack.length-1];if(o>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${o} data ids) after running '${t}'`)}runKernelFunc(t,e,n,r,a,o,s){let u,c=[];const l=this.isTapeOn();null==r&&(r=null!=this.state.activeScope?this.state.activeScope.name:"");const d=this.state.numBytes,p=this.state.numTensors;let h;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);const f=Object(i.b)(r,this.backendName);let m,b;if(null!=f)h=()=>{const t=this.backend.numDataIds();m=f.kernelFunc({inputs:e,attrs:a,backend:this.backend});const n=Array.isArray(m)?m:[m];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,t,n);const i=n.map(({dataId:t,shape:e,dtype:n})=>this.makeTensorFromDataId(t,e,n));if(l){let t=this.getTensorsForGradient(r,e,i);if(null==t){null==s&&(s=[]);const e=i.filter((t,e)=>s[e]);t=(o||[]).slice().concat(e)}c=this.saveTensorsForBackwardMode(t)}return i};else{const e=t=>{l&&(c=t.map(t=>this.keep(this.clone(t))))};h=()=>{const n=this.backend.numDataIds();m=this.tidy(()=>t(this.backend,e));const a=Array.isArray(m)?m:[m];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,n,a),a}}return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(b=this.profiler.profileKernel(r,e,()=>h()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(b),u=b.outputs):u=h()}),l&&this.addTapeNode(r,e,u,n,c,a),this.state.profiling&&this.state.activeProfile.kernels.push({name:r,bytesAdded:this.state.numBytes-d,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-p,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(e).map(t=>null!=e[t]?e[t].shape:null),outputShapes:u.map(t=>t.shape),kernelTimeMs:b.timeMs,extraInfo:b.extraInfo}),Array.isArray(m)?u:u[0]}saveTensorsForBackwardMode(t){return t.map(t=>this.keep(this.clone(t)))}getTensorsForGradient(t,e,n){const r=Object(i.a)(t);if(null!=r){const t=r.inputsToSave||[],a=r.outputsToSave||[];let o;r.saveAllInputs?(u.b(Array.isArray(e),()=>"saveAllInputs is true, expected inputs to be an array."),o=Object.keys(e).map(t=>e[t])):o=t.map(t=>e[t]);const s=n.filter((t,e)=>a[e]);return o.concat(s)}return null}makeTensor(t,e,n,r){if(null==t)throw new Error("Values passed to engine.makeTensor() are null");r=r||this.backend;let a=t;"string"===(n=n||"float32")&&u.z(t[0])&&(a=t.map(t=>f.encodeString(t)));const o=r.write(a,e,n),s=new p.a(e,n,o,this.nextTensorId());if(this.incRef(s,r),"string"===n){const t=this.state.tensorInfo.get(o),e=Object(u.f)(a);this.state.numBytes+=e-t.bytes,t.bytes=e}return s}makeTensorFromDataId(t,e,n,r){const a=new p.a(e,n=n||"float32",t,this.nextTensorId());return this.incRef(a,r),a}makeVariable(t,e=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==t.dtype&&(t=t.cast(r));const a=new p.c(t,e,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}incRef(t,e){const n=this.state.tensorInfo.has(t.dataId)?this.state.tensorInfo.get(t.dataId).refCount:0;if(this.state.numTensors++,"string"===t.dtype&&this.state.numStringTensors++,0===n){this.state.numDataBuffers++;let n=0;"complex64"!==t.dtype&&"string"!==t.dtype&&(n=t.size*u.g(t.dtype)),this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:n,refCount:0}),this.state.numBytes+=n}this.state.tensorInfo.get(t.dataId).refCount++,t instanceof p.c||this.track(t)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;this.state.numTensors--,"string"===t.dtype&&this.state.numStringTensors--;const e=this.state.tensorInfo.get(t.dataId);e.refCount<=1?("complex64"!==t.dtype&&(this.state.numBytes-=e.bytes),this.state.numDataBuffers--,e.backend.disposeData(t.dataId),this.state.tensorInfo.delete(t.dataId)):this.state.tensorInfo.get(t.dataId).refCount--}disposeVariables(){for(const t in this.state.registeredVariables)this.disposeVariable(this.state.registeredVariables[t])}disposeVariable(t){this.disposeTensor(t),null!=this.state.registeredVariables[t.name]&&delete this.state.registeredVariables[t.name]}memory(){const t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,null==t.reasons&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;const e=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(t=>t.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(t,e,n,r,a,o){const s={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:n,saved:a},c=Object(i.a)(t);null!=c&&(r=c.gradFunc),null!=r&&(s.gradient=t=>(t=t.map((t,e)=>{if(null==t){const t=n[e],r=u.F(t.size,t.dtype);return this.makeTensor(r,t.shape,t.dtype)}return t}),r(t.length>1?t:t[0],a,o))),this.state.activeTape.push(s)}keep(t){return t.kept=!0,t}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){const e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){const e=Object(h.a)(t),n=new Set(e.map(t=>t.id));for(let a=0;a<this.state.activeScope.track.length;a++){const t=this.state.activeScope.track[a];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach(t=>{t.kept||t.scopeId!==r.id||this.track(t)})}gradients(t,e,n,r=!1){if(u.b(e.length>0,()=>"gradients() received an empty list of xs."),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const a=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",t));u.b(a instanceof p.a,()=>"The result y returned by f() must be a tensor.");const o=function(t,e,n){const r={},a={};for(let u=0;u<e.length;u++)r[e[u].id]=!0;for(let u=0;u<t.length;u++){const n=t[u],o=n.inputs;for(const t in o){const s=o[t];let i=!1;for(let t=0;t<e.length;t++)if(r[s.id]){n.outputs.forEach(t=>r[t.id]=!0),i=!0,a[n.id]=!0;break}if(i)break}}const o={};o[n.id]=!0;const s={};for(let u=t.length-1;u>=0;u--){const e=t[u],n=e.inputs;for(let t=0;t<e.outputs.length;t++)if(o[e.outputs[t].id]){for(const t in n)o[n[t].id]=!0,s[e.id]=!0;break}}const i=[];for(let u=0;u<t.length;u++){const e=t[u];if(a[e.id]&&s[e.id]){const t={};for(const a in e.inputs){const n=e.inputs[a];r[n.id]&&(t[a]=n)}const n=Object.assign({},e);n.inputs=t,n.outputs=e.outputs,i.push(n)}}return i}(this.state.activeTape,e,a);if(!r&&0===o.length&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const t={};t[a.id]=null==n?function(t){const e=Object(u.D)(Object(u.N)(t),"float32");return y.makeTensor(e,t,"float32")}(a.shape):n,function(t,e,n,r){for(let a=e.length-1;a>=0;a--){const o=e[a],s=[];if(o.outputs.forEach(e=>{const n=t[e.id];s.push(null!=n?n:null)}),null==o.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${o.kernelName}.`);const i=o.gradient(s);for(const e in o.inputs){if(!(e in i))throw new Error(`Cannot backprop through input ${e}. Available gradients found: ${Object.keys(i)}.`);const a=n(()=>i[e]());if("float32"!==a.dtype)throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input ${e} must have 'float32' dtype, but has '${a.dtype}'`);const s=o.inputs[e];if(!u.a(a.shape,s.shape))throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input '${e}' has shape '${a.shape}', which does not match the shape of the input '${s.shape}'`);if(null==t[s.id])t[s.id]=a;else{const e=t[s.id];t[s.id]=r(e,a),e.dispose()}}}}(t,o,t=>this.tidy(t),x);const r=e.map(e=>t[e.id]);return 0===this.state.gradientDepth&&(this.state.activeTape.forEach(t=>{for(const e of t.saved)e.dispose()}),this.state.activeTape=null),{value:a,grads:r}})}customGrad(t){return u.b(u.u(t),()=>"The f passed in customGrad(f) must be a function."),(...e)=>{let n;u.b(e.every(t=>t instanceof p.a),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");const r={};return e.forEach((t,e)=>{r[e]=t}),this.runKernelFunc((r,a)=>(n=t(...e,a),u.b(n.value instanceof p.a,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),u.b(u.u(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),r,(t,r)=>{const a=n.gradFunc(t,r),o=Array.isArray(a)?a:[a];u.b(o.length===e.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),u.b(o.every(t=>t instanceof p.a),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const s={};return o.forEach((t,e)=>{s[e]=()=>t}),s})}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}async time(t){const e=Object(f.now)(),n=await this.backend.time(t);return n.wallMs=Object(f.now)()-e,n}track(t){return null!=this.state.activeScope&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new m;for(const t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function g(){const t=Object(o.b)();if(null==t._tfengine){const e=new a.a(t);t._tfengine=new b(e)}return Object(a.c)(t._tfengine.ENV),Object(p.f)(()=>t._tfengine),t._tfengine}b.nextTensorId=0,b.nextVariableId=0;const y=g();function x(t,e){return y.runKernelFunc((n,r)=>{const a=n.add(t,e);return r([t,e]),a},{a:t,b:e},null,s.d)}},"b++O":function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("VO80");const i=Object(s.a)({isNaN_:function(t){const e=Object(o.a)(t,"x","isNaN");return r.a.runKernelFunc(t=>t.isNaN(e),{x:e},null,a.qb)}})},bTzI:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("VO80"),i=n("Xr0w");const u=Object(s.a)({slice_:function(t,e,n){const s=Object(o.a)(t,"x","slice");if(0===s.rank)throw new Error("Slicing scalar is not possible");return r.a.runKernelFunc((t,r)=>{const[a,o]=i.parseSliceParams(s,e,n);return i.assertParamsValid(s,a,o),r([s]),t.slice(s,a,o)},{x:s},null,a.vc,{begin:e,size:n})}})},bzdD:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("o/e8"),a=n("CfTU"),o=n("parS"),s=n("VO80"),i=n("AV8V");const u=Object(s.a)({leakyRelu_:function(t,e=.2){const n=Object(r.a)(t,"x","leakyRelu");return Object(a.a)(Object(o.a)(Object(i.a)(e),n),n)}})},"c/ib":function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("atXS"),i=n("VO80"),u=n("NclT");const c=Object(i.a)({resizeBilinear_:function(t,e,n=!1){const i=Object(o.a)(t,"images","resizeBilinear");s.b(3===i.rank||4===i.rank,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${i.rank}.`),s.b(2===e.length,()=>"Error in resizeBilinear: new shape must 2D, but got shape "+e+".");let c=i,l=!1;3===i.rank&&(l=!0,c=Object(u.a)(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const[d,p]=e,h=r.a.runKernelFunc((t,e)=>(e([c]),t.resizeBilinear(c,d,p,n)),{images:c},null,a.gc,{alignCorners:n,size:e});return l?Object(u.a)(h,[h.shape[1],h.shape[2],h.shape[3]]):h}})},c7gn:function(t,e,n){"use strict";n.d(e,"b",(function(){return i})),n.d(e,"a",(function(){return u})),n.d(e,"c",(function(){return c})),n.d(e,"e",(function(){return l})),n.d(e,"d",(function(){return d}));var r=n("szMd"),a=n("9JAK");const o=Object(a.a)("kernelRegistry",()=>new Map),s=Object(a.a)("gradRegistry",()=>new Map);function i(t,e){const n=p(t,e);return o.get(n)}function u(t){return s.get(t)}function c(t){const e=o.entries(),n=[];for(;;){const{done:r,value:a}=e.next();if(r)break;const[o,s]=a,[i]=o.split("_");i===t&&n.push(s)}return n}function l(t){const{kernelName:e,backendName:n}=t,r=p(e,n);o.has(r)&&console.warn(`The kernel '${e}' for backend '${n}' is already registered`),o.set(r,t)}function d(t){const{kernelName:e}=t;s.has(e)&&Object(r.b)().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${e}'`),s.set(e,t)}function p(t,e){return`${e}_${t}`}},c9N1:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),o=n("atXS"),s=n("uBja"),i=n("VO80"),u=n("NclT");const c=Object(i.a)({conv2DBackpropInput_:function(t,e,n,i,c,l="NHWC",d){o.b(t.length===e.rank,()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`);let p=t,h=e,f=!1;3===e.rank&&(f=!0,h=Object(u.a)(e,[1,e.shape[0],e.shape[1],e.shape[2]]),p=[1,t[0],t[1],t[2]]),o.b(4===p.length,()=>"Error in conv2dDerInput: inShape must be length 4, but got length "+p.length+"."),o.b(4===h.rank,()=>"Error in conv2dDerInput: dy must be rank 4, but got rank "+h.rank),o.b(4===n.rank,()=>"Error in conv2dDerInput: filter must be rank 4, but got rank "+n.rank);const m="NHWC"===l?p[3]:p[1],b="NHWC"===l?h.shape[3]:h.shape[1];o.b(m===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${m}) must match input depth for filter ${n.shape[2]}.`),o.b(b===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${b}) must match output depth for filter ${n.shape[3]}.`),null!=d&&o.b(o.v(c),()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${d} but got pad ${c}.`);const g=r.a.runKernelFunc((t,e)=>{const r=s.g(l),a=s.a(p,n.shape,i,1,c,d,!1,r),o=t.conv2dDerInput(h,n,a);return e([h,n]),o},{dy:h,filter:n},null,a.C,{strides:i,pad:c,dataFormat:l,dimRoundingMode:d,inputShape:p});return f?Object(u.a)(g,[g.shape[1],g.shape[2],g.shape[3]]):g}})},cdtJ:function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("atXS"),i=n("NclT"),u=n("VO80");function c(t){return null==t?null:0===t.rank?Object(i.a)(t,[t.size]):1===t.rank?t:2===t.rank?Object(i.a)(t,[1,1,t.shape[0],t.shape[1]]):3===t.rank?Object(i.a)(t,[1,t.shape[0],t.shape[1],t.shape[2]]):t}const l=Object(u.a)({batchNorm_:function(t,e,n,u,l,d){null==d&&(d=.001);const p=Object(o.a)(t,"x","batchNorm"),h=Object(o.a)(e,"mean","batchNorm"),f=Object(o.a)(n,"variance","batchNorm");let m,b;null!=l&&(m=Object(o.a)(l,"scale","batchNorm")),null!=u&&(b=Object(o.a)(u,"offset","batchNorm")),s.b(h.rank===f.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),s.b(null==b||h.rank===b.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),s.b(null==m||h.rank===m.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const g=function(t){let e;return e=0===t.rank||1===t.rank?Object(i.a)(t,[1,1,1,t.size]):2===t.rank?Object(i.a)(t,[1,1,t.shape[0],t.shape[1]]):3===t.rank?Object(i.a)(t,[1,t.shape[0],t.shape[1],t.shape[2]]):t,e}(p),y=r.a.runKernelFunc((t,e)=>(e([g,h,f,m]),t.batchNorm(g,c(h),c(f),c(b),c(m),d)),{x:g,scale:m,offset:b,mean:h,variance:f},null,a.eb,{varianceEpsilon:d});return Object(i.a)(y,p.shape)}})},dWjR:function(t,e,n){"use strict";function r(t,e=!1){console.log(t.toString(e))}n.d(e,"a",(function(){return r}))},dYAU:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("atXS"),i=n("VO80");const u=Object(i.a)({spaceToBatchND_:function(t,e,n){const i=Object(o.a)(t,"x","spaceToBatchND");return s.b(i.rank>=1+e.length,()=>`input rank ${i.rank} should be > than [blockShape] ${e.length}`),s.b(n.length===e.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${e.length}`),s.b(i.shape.reduce((t,r,a)=>a>0&&a<=e.length?t&&(r+n[a-1][0]+n[a-1][1])%e[a-1]==0:t,!0),()=>`input spatial dimensions ${i.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${e.toString()}`),r.a.runKernelFunc(t=>t.spaceToBatchND(i,e,n),{x:i},null,a.yc,{blockShape:e,paddings:n})}})},dnXz:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("o/e8"),a=n("atXS"),o=n("3X4V"),s=n("uBja"),i=n("VO80"),u=n("NclT");const c=Object(i.a)({conv1d_:function(t,e,n,i,c="NWC",l=1,d){const p=Object(r.a)(t,"x","conv1d"),h=Object(r.a)(e,"filter","conv1d");let f=p,m=!1;2===p.rank&&(m=!0,f=Object(u.a)(p,[1,p.shape[0],p.shape[1]])),a.b(3===f.rank,()=>`Error in conv1d: input must be rank 3, but got rank ${f.rank}.`),a.b(3===h.rank,()=>"Error in conv1d: filter must be rank 3, but got rank "+h.rank+"."),null!=d&&a.b(a.v(i),()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${d} but got pad ${i}.`),a.b(f.shape[2]===h.shape[1],()=>`Error in conv1d: depth of input (${f.shape[2]}) must match input depth for filter ${h.shape[1]}.`),a.b(s.h(n,l),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${l}'`),a.b("NWC"===c,()=>`Error in conv1d: got dataFormat of ${c} but only NWC is currently supported.`);const b=Object(u.a)(h,[1,h.shape[0],h.shape[1],h.shape[2]]),g=Object(u.a)(f,[f.shape[0],1,f.shape[1],f.shape[2]]),y=[1,n],x=[1,l],O=Object(o.a)(g,b,y,i,"NHWC",x,d);return m?Object(u.a)(O,[O.shape[2],O.shape[3]]):Object(u.a)(O,[O.shape[0],O.shape[2],O.shape[3]])}})},dsKV:function(t,e,n){"use strict";n.d(e,"b",(function(){return o})),n.d(e,"a",(function(){return s}));var r=n("NNfn"),a=n("I79q");function o(t,e){if(t.dtype===e.dtype)return[t,e];const n=Object(a.b)(t.dtype,e.dtype);return[t.cast(n),e.cast(n)]}function s(t){const e=[];return function t(e,n,a){if(null==e)return;if(e instanceof r.a)return void n.push(e);if(o=e,!Array.isArray(o)&&"object"!=typeof o)return;var o;const s=e;for(const r in s){const e=s[r];a.has(e)||(a.add(e),t(e,n,a))}}(t,e,new Set),e}n("atXS")},euyF:function(t,e,n){(function(t){var r;!function(t,a,o){function s(t){var e=this;e.next=function(){var t,n,r=e.w,a=e.X,o=e.i;return e.w=r=r+1640531527|0,n=a[o+34&127],t=a[o=o+1&127],n^=n<<13,t^=t<<17,n=a[o]=(n^=n>>>15)^(t^=t>>>12),e.i=o,n+(r^r>>>16)|0},function(t,e){var n,r,a,o,s,i=[],u=128;for(e===(0|e)?(r=e,e=null):(e+="\0",r=0,u=Math.max(u,e.length)),a=0,o=-32;o<u;++o)e&&(r^=e.charCodeAt((o+32)%e.length)),0===o&&(s=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,o>=0&&(a=0==(n=i[127&o]^=r+(s=s+1640531527|0))?a+1:0);for(a>=128&&(i[127&(e&&e.length||0)]=-1),a=127,o=512;o>0;--o)r=i[a+34&127],n=i[a=a+1&127],r^=r<<13,n^=n<<17,i[a]=(r^=r>>>15)^(n^=n>>>12);t.w=s,t.X=i,t.i=a}(e,t)}function i(t,e){return e.i=t.i,e.w=t.w,e.X=t.X.slice(),e}function u(t,e){null==t&&(t=+new Date);var n=new s(t),r=e&&e.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},a.int32=n.next,a.quick=a,r&&(r.X&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n("kU2C")&&n("QvbP")?void 0===(r=(function(){return u}).call(e,n,e,a))||(a.exports=r):this.xor4096=u}(0,t,n("kU2C"))}).call(this,n("0SIU")(t))},fjZN:function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("VO80");const i=Object(s.a)({atan_:function(t){const e=Object(o.a)(t,"x","atan");return r.a.runKernelFunc((t,n)=>{const r=t.atan(e);return n([e]),r},{x:e},null,a.l)}})},fmoR:function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var r=n("BD40"),a=n("VO80"),o=n("1OSX");const s=Object(a.a)({truncatedNormal_:function(t,e=0,n=1,a,s){if(null!=a&&"bool"===a)throw new Error("Unsupported data type $ { dtype }");const i=new o.a(e,n,a,!0,s),u=Object(r.a)(t,a);for(let r=0;r<u.values.length;r++)u.values[r]=i.nextValue();return u.toTensor()}})},"g4+C":function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("atXS"),i=n("uBja"),u=n("VO80"),c=n("NclT");const l=Object(u.a)({depthwiseConv2d_:function(t,e,n,u,l="NHWC",d=[1,1],p){const h=Object(o.a)(t,"x","depthwiseConv2d"),f=Object(o.a)(e,"filter","depthwiseConv2d");let m=h,b=!1;3===h.rank&&(b=!0,m=Object(c.a)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),s.b(4===m.rank,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${m.rank}.`),s.b(4===f.rank,()=>"Error in depthwiseConv2d: filter must be rank 4, but got rank "+f.rank+"."),s.b(m.shape[3]===f.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${m.shape[3]}) must match the inChannels dimension in filter ${f.shape[2]}.`),null!=p&&s.b(s.v(u),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${p} but got pad ${u}.`);const g=r.a.runKernelFunc((t,e)=>{null==d&&(d=[1,1]),s.b(i.h(n,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${d}'`);const r=i.a(m.shape,f.shape,n,d,u,p,!0),a=t.depthwiseConv2D(m,f,r);return e([m,f]),a},{x:m,filter:f},null,a.L,{strides:n,pad:u,dataFormat:l,dilations:d,dimRoundingMode:p});return b?Object(c.a)(g,[g.shape[1],g.shape[2],g.shape[3]]):g}})},g4m1:function(t,e,n){"use strict";n.d(e,"a",(function(){return i})),n.d(e,"b",(function(){return u})),n.d(e,"c",(function(){return c}));var r=n("AV8V"),a=n("lg8H");function o(t,e,n){const r=function(t,e,n){return function(t,e,n){let r=0,a=t.length,o=0,s=!1;for(;r<a;){o=r+(a-r>>>1);const i=n(e,t[o]);i>0?r=o+1:(a=o,s=!i)}return s?r:-r-1}(t,e,n||s)}(t,e,n);t.splice(r<0?-(r+1):r,0,e)}function s(t,e){return t>e?1:t<e?-1:0}function i(t,e,n,r,a){return l(t,e,n,r,a,0).selectedIndices}function u(t,e,n,r,a,o){return l(t,e,n,r,a,0,!1,o,!0)}function c(t,e,n,r,a,o){return l(t,e,n,r,a,o,!0)}function l(t,e,n,s,i,u,c=!1,l=!1,f=!1){const m=[];for(let r=0;r<e.length;r++)e[r]>i&&m.push({score:e[r],boxIndex:r,suppressBeginIndex:0});m.sort(h);const b=u>0?-.5/u:0,g=[],y=[];for(;g.length<n&&m.length>0;){const e=m.pop(),{score:n,boxIndex:r,suppressBeginIndex:a}=e;if(n<i)break;let u=!1;for(let o=g.length-1;o>=a;--o){const n=d(t,r,g[o]);if(n>=s){u=!0;break}if(e.score=e.score*p(s,b,n),e.score<=i)break}e.suppressBeginIndex=g.length,u||(e.score===n?(g.push(r),y.push(e.score)):e.score>i&&o(m,e,h))}const x=g.length,O=n-x;l&&O>0&&(g.push(...new Array(O).fill(0)),y.push(...new Array(O).fill(0)));const v={selectedIndices:Object(a.a)(g,"int32")};return c&&(v.selectedScores=Object(a.a)(y,"float32")),f&&(v.validOutputs=Object(r.a)(x,"int32")),v}function d(t,e,n){const r=t.subarray(4*e,4*e+4),a=t.subarray(4*n,4*n+4),o=Math.min(r[0],r[2]),s=Math.min(r[1],r[3]),i=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),c=Math.min(a[0],a[2]),l=Math.min(a[1],a[3]),d=Math.max(a[0],a[2]),p=Math.max(a[1],a[3]),h=(i-o)*(u-s),f=(d-c)*(p-l);if(h<=0||f<=0)return 0;const m=Math.max(o,c),b=Math.max(s,l),g=Math.min(i,d),y=Math.min(u,p),x=Math.max(g-m,0)*Math.max(y-b,0);return x/(h+f-x)}function p(t,e,n){const r=Math.exp(e*n*n);return n<=t?r:0}function h(t,e){return t.score-e.score||t.score===e.score&&e.boxIndex-t.boxIndex}},gErV:function(t,e,n){"use strict";n.d(e,"a",(function(){return h}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("3rNm"),i=n("TyAZ"),u=n("E1lT"),c=n("wCH+"),l=n("VO80"),d=n("oAkI"),p=n("4FMF");const h=Object(l.a)({logSoftmax_:function(t,e=-1){const n=Object(o.a)(t,"logits","logSoftmax");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${e}`);return r.a.runKernelFunc((n,r)=>{const a=Object(c.a)(t,e,!0),o=Object(d.a)(t,a),l=Object(d.a)(Object(s.a)(o,"float32"),Object(u.a)(Object(p.a)(Object(i.a)(o),e,!0)));return r([l]),l},{logits:n},null,a.yb,{axis:e})}})},hNYx:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),o=n("atXS"),s=n("lg8H"),i=n("Wiw4");function u(t,e,n=1,u="float32"){if(0===n)throw new Error("Cannot have a step of zero");return r.a.runKernelFunc(()=>{if(t===e||t<e&&n<0||e<t&&n>1)return Object(i.a)([0],u);const r=Math.abs(Math.ceil((e-t)/n)),a=Object(o.F)(r,u);e<t&&1===n&&(n=-1),a[0]=t;for(let t=1;t<a.length;t++)a[t]=a[t-1]+n;return Object(s.a)(a,u)},{},null,a.ac,{start:t,stop:e,step:n,dtype:u})}},hT5K:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("atXS"),i=n("VO80");const u=Object(i.a)({unique_:function(t,e=0){const n=Object(o.a)(t,"x","unique",null);Object(s.b)(n.rank>0,()=>"The input tensor must be at least 1D");const i={x:n},u={axis:e},[c,l]=r.a.runKernel(a.Nc,i,u);return{values:c,indices:l}}})},hinG:function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var r=n("BD40"),a=n("VO80"),o=n("1OSX");const s=Object(a.a)({randomUniform_:function(t,e=0,n=1,a="float32",s){const i=Object(r.a)(t,a),u=new o.b(e,n,null,s);for(let r=0;r<i.values.length;r++)i.values[r]=u.nextValue();return i.toTensor()}})},"i/oj":function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("VO80"),i=n("o0+U");const u=Object(s.a)({scatterND_:function(t,e,n){const s=Object(o.a)(t,"indices","scatterND","int32"),u=Object(o.a)(e,"updates","scatterND");return i.b(u,s,n),r.a.runKernelFunc(t=>t.scatterND(s,u,n),{indices:s,updates:u},null,a.oc,{shape:n})}})},"i4e/":function(t,e,n){"use strict";n.d(e,"a",(function(){return r})),n.d(e,"b",(function(){return a}));class r{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}class a{time(t){return o("time")}read(t){return o("read")}readSync(t){return o("readSync")}numDataIds(){return o("numDataIds")}disposeData(t){return o("disposeData")}write(t,e,n){return o("write")}move(t,e,n,r){return o("move")}memory(){return o("memory")}floatPrecision(){return o("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}batchMatMul(t,e,n,r){return o("batchMatMul")}fusedBatchMatMul({}){return o("fusedBatchMatMul")}slice(t,e,n){return o("slice")}stridedSlice(t,e,n,r){return o("stridedSlice")}unstack(t,e){return o("unstack")}reverse(t,e){return o("reverse")}concat(t,e){return o("concat")}neg(t){return o("neg")}add(t,e){return o("add")}addN(t){return o("addN")}subtract(t,e){return o("subtract")}multiply(t,e){return o("multiply")}realDivide(t,e){return o("realDivide")}floorDiv(t,e){return o("floorDiv")}sum(t,e){return o("sum")}prod(t,e){return o("prod")}unsortedSegmentSum(t,e,n){return o("unsortedSegmentSum")}argMin(t,e){return o("argMin")}argMax(t,e){return o("argMax")}equal(t,e){return o("equal")}notEqual(t,e){return o("notEqual")}less(t,e){return o("less")}lessEqual(t,e){return o("lessEqual")}greater(t,e){return o("greater")}greaterEqual(t,e){return o("greaterEqual")}logicalNot(t){return o("logicalNot")}logicalAnd(t,e){return o("logicalAnd")}logicalOr(t,e){return o("logicalOr")}where(t){return o("where")}select(t,e,n){return o("select")}topk(t,e,n){return o("topk")}min(t,e){return o("min")}minimum(t,e){return o("minimum")}mod(t,e){return o("mod")}max(t,e){return o("max")}maximum(t,e){return o("maximum")}all(t,e){return o("all")}any(t,e){return o("any")}squaredDifference(t,e){return o("squaredDifference")}ceil(t){return o("ceil")}floor(t){return o("floor")}round(t){return o("round")}sign(t){return o("sign")}isNaN(t){return o("isNaN")}isInf(t){return o("isInf")}isFinite(t){return o("isFinite")}pow(t,e){return o("pow")}exp(t){return o("exp")}expm1(t){return o("expm1")}softmax(t,e){return o("softmax")}log(t){return o("log")}log1p(t){return o("log1p")}sqrt(t){return o("sqrt")}rsqrt(t){return o("rsqrt")}square(t){return o("square")}reciprocal(t){return o("reciprocal")}relu(t){return o("relu")}relu6(t){return o("relu6")}prelu(t,e){return o("prelu")}elu(t){return o("elu")}eluDer(t,e){return o("eluDer")}selu(t){return o("selu")}int(t){return o("int")}clip(t,e,n){return o("clip")}abs(t){return o("abs")}complexAbs(t){return o("complexAbs")}sigmoid(t){return o("sigmoid")}softplus(t){return o("softplus")}sin(t){return o("sin")}cos(t){return o("cos")}tan(t){return o("tan")}asin(t){return o("asin")}acos(t){return o("acos")}atan(t){return o("atan")}atan2(t,e){return o("atan2")}sinh(t){return o("sinh")}cosh(t){return o("cosh")}tanh(t){return o("tanh")}asinh(t){return o("asinh")}acosh(t){return o("acosh")}atanh(t){return o("atanh")}erf(t){return o("erf")}step(t,e){return o("step")}fusedConv2d({}){return o("fusedConv2d")}conv2d(t,e,n){return o("conv2d")}conv2dDerInput(t,e,n){return o("conv2dDerInput")}conv2dDerFilter(t,e,n){return o("conv2dDerFilter")}fusedDepthwiseConv2D({}){return o("fusedDepthwiseConv2D")}depthwiseConv2D(t,e,n){return o("depthwiseConv2D")}depthwiseConv2DDerInput(t,e,n){return o("depthwiseConv2DDerInput")}depthwiseConv2DDerFilter(t,e,n){return o("depthwiseConv2DDerFilter")}conv3d(t,e,n){return o("conv3d")}conv3dDerInput(t,e,n){return o("conv3dDerInput")}conv3dDerFilter(t,e,n){return o("conv3dDerFilter")}maxPool(t,e){return o("maxPool")}maxPoolBackprop(t,e,n,r){return o("maxPoolBackprop")}avgPool(t,e){return o("avgPool")}avgPoolBackprop(t,e,n){return o("avgPoolBackprop")}avgPool3d(t,e){return o("avgPool3d")}avgPool3dBackprop(t,e,n){return o("avgPool3dBackprop")}maxPool3d(t,e){return o("maxPool3d")}maxPool3dBackprop(t,e,n,r){return o("maxPool3dBackprop")}reshape(t,e){return o("reshape")}cast(t,e){return o("cast")}tile(t,e){return o("tile")}pad(t,e,n){return o("pad")}transpose(t,e){return o("transpose")}gather(t,e,n){return o("gather")}gatherND(t,e){return o("gatherND")}scatterND(t,e,n){return o("scatterND")}batchToSpaceND(t,e,n){return o("batchToSpaceND")}spaceToBatchND(t,e,n){return o("spaceToBatchND")}resizeBilinear(t,e,n,r){return o("resizeBilinear")}resizeBilinearBackprop(t,e,n){return o("resizeBilinearBackprop")}resizeNearestNeighbor(t,e,n,r){return o("resizeNearestNeighbor")}resizeNearestNeighborBackprop(t,e,n){return o("resizeNearestNeighborBackprop")}batchNorm(t,e,n,r,a,s){return o("batchNorm")}localResponseNormalization4D(t,e,n,r,a){return o("localResponseNormalization4D")}LRNGrad(t,e,n,r,a,s,i){return o("LRNGrad")}multinomial(t,e,n,r){return o("multinomial")}oneHot(t,e,n,r){return o("oneHot")}cumsum(t,e,n,r){return o("cumsum")}nonMaxSuppression(t,e,n,r,a){return o("nonMaxSuppression")}fft(t){return o("fft")}ifft(t){return o("ifft")}complex(t,e){return o("complex")}real(t){return o("real")}imag(t){return o("imag")}cropAndResize(t,e,n,r,a,s){return o("cropAndResize")}depthToSpace(t,e,n){return o("depthToSpace")}split(t,e,n){return o("split")}sparseToDense(t,e,n,r){return o("sparseToDense")}diag(t){return o("diag")}fill(t,e,n){return o("fill")}onesLike(t){return o("onesLike")}zerosLike(t){return o("zerosLike")}linspace(t,e,n){return o("linspace")}dispose(){return o("dispose")}}function o(t){throw new Error(`'${t}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}},i8k8:function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("VO80");const i=Object(s.a)({maxPoolWithArgmax_:function(t,e,n,s,i=!1){const u=Object(o.a)(t,"x","maxPoolWithArgmax"),c=r.a.runKernel(a.Hb,{x:u},{filterSize:e,strides:n,pad:s,includeBatchInIndex:i});return{result:c[0],indexes:c[1]}}})},iIjY:function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("VO80");const i=Object(s.a)({tanh_:function(t){const e=Object(o.a)(t,"x","tanh");return r.a.runKernelFunc((t,n)=>{const r=t.tanh(e);return n([r]),r},{x:e},null,a.Jc)}})},ie1u:function(t,e,n){(function(t){var r;!function(t,a,o){function s(t){var e=this,n="";e.next=function(){var t=e.b,n=e.c,r=e.d,a=e.a;return t=t<<25^t>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-t|0,e.b=t=t<<20^t>>>12^n,e.c=n=n-r|0,e.d=r<<16^n>>>16^a,e.a=a-t|0},e.a=0,e.b=0,e.c=-1640531527,e.d=1367130551,t===Math.floor(t)?(e.a=t/4294967296|0,e.b=0|t):n+=t;for(var r=0;r<n.length+20;r++)e.b^=0|n.charCodeAt(r),e.next()}function i(t,e){return e.a=t.a,e.b=t.b,e.c=t.c,e.d=t.d,e}function u(t,e){var n=new s(t),r=e&&e.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n("kU2C")&&n("QvbP")?void 0===(r=(function(){return u}).call(e,n,e,a))||(a.exports=r):this.tychei=u}(0,t,n("kU2C"))}).call(this,n("0SIU")(t))},iuCH:function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("VO80");const i=Object(s.a)({abs_:function(t){const e=Object(o.a)(t,"x","abs");return r.a.runKernelFunc((t,n)=>(n([e]),"complex64"===e.dtype?t.complexAbs(e):t.abs(e)),{x:e},null,a.a)}})},jLCh:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),o=n("uBja"),s=n("VO80"),i=n("NclT");const u=Object(s.a)({depthwiseConv2dNativeBackpropInput_:function(t,e,n,s,u,c=[1,1],l){let d=e,p=!1;3===e.rank&&(p=!0,d=Object(i.a)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const h=r.a.runKernelFunc(e=>{const r=o.a(t,n.shape,s,c,u,l,!0);return e.depthwiseConv2DDerInput(d,n,r)},{dy:d,filter:n},null,a.N,{strides:s,pad:u,dimRoundingMode:l,dilations:c,inputShape:t});return p?Object(i.a)(h,[h.shape[1],h.shape[2],h.shape[3]]):h}})},jXH2:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("atXS"),i=n("VO80");const u=Object(i.a)({tile_:function(t,e){const n=Object(o.a)(t,"x","tile",null);return s.b(n.rank===e.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${e}.`),r.a.runKernelFunc((t,r)=>{const a=t.tile(n,e);return r([n]),a},{x:n},null,a.Kc,{reps:e},[n])}})},jgXy:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("atXS"),i=n("3rNm"),u=n("VO80");const c=Object(u.a)({erf_:function(t){let e=Object(o.a)(t,"x","erf");return s.b("int32"===e.dtype||"float32"===e.dtype,()=>"Input dtype must be `int32` or `float32`."),"int32"===e.dtype&&(e=Object(i.a)(e,"float32")),r.a.runKernelFunc((t,n)=>{const r=t.erf(e);return n([e]),r},{x:e},null,a.V)}})},k7Jv:function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var r=n("auKK"),a=n("o/e8"),o=n("VO80");const s=Object(o.a)({square_:function(t){const e=Object(a.a)(t,"x","square");return r.a.runKernelFunc((t,n)=>(n([e]),t.square(e)),{x:e},null,"Square",{},[e],[])}})},k9tH:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("atXS"),i=n("VO80");const u=Object(i.a)({mirrorPad_:function(t,e,n){s.b("reflect"===n||"symmetric"===n,()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);const i=Object(o.a)(t,"x","mirrorPad");if(0===i.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");s.b(e.length===i.rank,()=>`Padding doesn't match input. Must be ${i.rank}. Got ${e.length}.`);const u="reflect"===n?1:0;for(let r=0;r<i.rank;r++)s.b(2===e[r].length,()=>"Invalid number of paddings. Must be length of 2 each."),s.b(e[r][0]>=0&&e[r][0]<=i.shape[r]-u&&e[r][1]>=0&&e[r][1]<=i.shape[r]-u,()=>`Padding in dimension ${r} cannot be greater than or equal to ${i.shape[r]-u} or less than 0 for input of shape `+i.shape);return r.a.runKernel(a.Mb,{x:i},{paddings:e,mode:n})}})},kRdc:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),o=n("dsKV"),s=n("o/e8"),i=n("VO80");const u=Object(i.a)({add_:function(t,e){let n=Object(s.a)(t,"a","add"),i=Object(s.a)(e,"b","add");return[n,i]=Object(o.b)(n,i),r.a.runKernelFunc((t,e)=>{const r=t.add(n,i);return e([n,i]),r},{a:n,b:i},null,a.d)}})},kXpR:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("VO80"),i=n("3rNm");const u=Object(s.a)({relu_:function(t){const e=Object(o.a)(t,"x","relu");return r.a.runKernelFunc((t,n)=>(n([e]),"bool"===e.dtype?Object(i.a)(e,"int32"):t.relu(e)),{x:e},null,a.dc)}})},kaMP:function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("atXS"),i=n("VO80"),u=n("NclT"),c=n("0+74");const l=Object(i.a)({gather_:function(t,e,n=0){const i=Object(o.a)(t,"x","gather"),l=Object(o.a)(e,"indices","gather","int32");return r.a.runKernelFunc((t,e)=>{const r=Object(s.I)(n,i.shape)[0],a=Object(c.collectGatherOpShapeInfo)(i,l,r),o=t.gather(i,Object(u.a)(l,[l.size]),r);return e([i,l]),Object(u.a)(o,a.outputShape)},{x:i,indices:l},null,a.ib,{axis:n})}})},l0gX:function(t,e,n){"use strict";n.d(e,"a",(function(){return d}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("atXS"),i=n("3rNm"),u=n("uBja"),c=n("VO80"),l=n("NclT");const d=Object(c.a)({avgPool_:function(t,e,n,c,d){const p=Object(o.a)(t,"x","avgPool","float32");s.b(u.h(n,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`);let h=p,f=!1;3===p.rank&&(f=!0,h=Object(l.a)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),s.b(4===h.rank,()=>`Error in avgPool: x must be rank 4 but got rank ${h.rank}.`),null!=d&&s.b(s.v(c),()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${d} but got pad ${c}.`);let m=r.a.runKernelFunc((t,r)=>{const a=u.e(h.shape,e,n,1,c,d);return r([h]),1===a.filterWidth&&1===a.filterHeight&&s.a(a.inShape,a.outShape)?h.clone():t.avgPool(h,a)},{x:h},null,a.o,{filterSize:e,strides:n,pad:c,dimRoundingMode:d});return m=Object(i.a)(m,p.dtype),f?Object(l.a)(m,[m.shape[1],m.shape[2],m.shape[3]]):m}})},lg8H:function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var r=n("o/e8"),a=n("atXS"),o=n("WVnj");function s(t,e){Object(a.d)(t);const n=Object(r.c)(t,e);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Object(o.a)(t,null,n,e)}},"n+ZZ":function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("atXS"),i=n("uBja"),u=n("VO80"),c=n("NclT");const l=Object(u.a)({maxPool_:function(t,e,n,u,l){const d=Object(o.a)(t,"x","maxPool");let p=d,h=!1;3===d.rank&&(h=!0,p=Object(c.a)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),s.b(4===p.rank,()=>`Error in maxPool: input must be rank 4 but got rank ${p.rank}.`),s.b(i.h(n,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`),null!=l&&s.b(s.v(u),()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${l} but got pad ${u}.`);const f=r.a.runKernelFunc((t,r)=>{const a=i.e(p.shape,e,n,1,u,l);let o;return o=1===a.filterWidth&&1===a.filterHeight&&s.a(a.inShape,a.outShape)?p.clone():t.maxPool(p,a),r([p,o]),o},{x:p},null,a.Db,{filterSize:e,strides:n,pad:u,dimRoundingMode:l});return h?Object(c.a)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},"n/2y":function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("VO80");const i=Object(s.a)({softplus_:function(t){const e=Object(o.a)(t,"x","softplus");return r.a.runKernelFunc((t,n)=>{const r=t.softplus(e);return n([e]),r},{x:e},null,a.xc)}})},njhW:function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("VO80");const i=Object(s.a)({elu_:function(t){const e=Object(o.a)(t,"x","elu");return r.a.runKernelFunc((t,n)=>{const r=t.elu(e);return n([r]),r},{x:e},null,a.S)}})},"o/e8":function(t,e,n){"use strict";n.d(e,"c",(function(){return u})),n.d(e,"a",(function(){return l})),n.d(e,"b",(function(){return d}));var r=n("auKK"),a=n("szMd"),o=n("NNfn"),s=n("atXS"),i=n("6366");function u(t,e){let n=t;if(Object(s.A)(t))return"string"===e?[]:[t.length];if(!Array.isArray(t))return[];const r=[];for(;Array.isArray(n)||Object(s.A)(n)&&"string"!==e;)r.push(n.length),n=n[0];return Array.isArray(t)&&Object(a.b)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&function t(e,n,r){if(r=r||[],!Array.isArray(e)&&!Object(s.A)(e))return void Object(s.b)(0===n.length,()=>`Element arr[${r.join("][")}] is a primitive, but should be an array/TypedArray of ${n[0]} elements`);Object(s.b)(n.length>0,()=>`Element arr[${r.join("][")}] should be a primitive, but is an array of ${e.length} elements`),Object(s.b)(e.length===n[0],()=>`Element arr[${r.join("][")}] should have ${n[0]} elements, but has ${e.length} elements`);const a=n.slice(1);for(let o=0;o<e.length;++o)t(e[o],a,r.concat(o))}(t,r,[]),r}function c(t,e,n,r){if(null!=t&&("numeric"!==t&&t!==e||"numeric"===t&&"string"===e))throw new Error(`Argument '${n}' passed to '${r}' must be ${t} tensor, but got ${e} tensor`)}function l(t,e,n,a="numeric"){if(t instanceof o.a)return c(a,t.dtype,e,n),t;let l=Object(s.r)(t);if("string"!==l&&["bool","int32","float32"].indexOf(a)>=0&&(l=a),c(a,l,e,n),null==t||!Object(s.A)(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t)throw new Error(`Argument '${e}' passed to '${n}' must be a Tensor or TensorLike, but got '${null==t?"null":t.constructor.name}'`);const d=u(t,l);Object(s.A)(t)||Array.isArray(t)||(t=[t]);const p="string"!==l?Object(i.toTypedArray)(t,l):Object(s.m)(t,[],!0);return r.a.makeTensor(p,d,l)}function d(t,e,n,r="numeric"){if(!Array.isArray(t))throw new Error(`Argument ${e} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return t.map((t,r)=>l(t,`${e}[${r}]`,n),r)}},"o0+U":function(t,e,n){"use strict";n.d(e,"c",(function(){return a})),n.d(e,"b",(function(){return o})),n.d(e,"a",(function(){return s}));var r=n("atXS");function a(t,e,n){const r=e.rank>1?e.shape[e.rank-1]:1,a=e.rank>1?e.rank-1:1,o="Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: "+n.shape+`, indices.shape: ${e.shape}, shape: ${t}`+`, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(o+` update.rank < ${a}. `);if(t.length<r+(n.rank-a))throw new Error(o+" Output shape length < "+(r+(n.rank-a)));if(n.rank!==a+t.length-r)throw new Error(o+" update.rank != "+(a+t.length-r));for(let s=0;s<a;++s)if(n.shape[s]!==e.shape[s])throw new Error(o+` updates.shape[${s}] (${n.shape[s]}) != indices.shape[${s}] (${e.shape[s]}).`);for(let s=0;s<n.rank-a;++s)if(n.shape[s+a]!==t[s+r])throw new Error(o+` updates.shape[${s+a}] (${n.shape[s+a]}) != shape[${s+a}] (${t[s+a]})`)}function o(t,e,n){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${t.rank}.`);if("int32"!==e.dtype)throw new Error("The dtype of 'indices' should be int32, but got dtype: "+e.dtype);if(n.length<1)throw new Error("Output rank must be greater or equal to 1, but got shape: "+n);if(0===n.length){if(0===e.size)throw new Error("Indices specified for empty output. indices shape: "+e.shape);if(0===t.size)throw new Error("Updates specified for empty output. updates shape: "+t.shape)}a(n,e,t)}function s(t,e,n){const a=e.shape.length,o=a>1?e.shape[a-1]:1,s=n.length;let i=1;for(let r=o;r<s;++r)i*=n[r];const u=o<1?1:o;return{sliceRank:o,numUpdates:Object(r.N)(e.shape)/u,sliceSize:i,strides:[...Object(r.j)(n.slice(0,o)),1],outputSize:Object(r.N)(n)}}},o3Rt:function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("VO80");const i=Object(s.a)({acos_:function(t){const e=Object(o.a)(t,"x","acos");return r.a.runKernelFunc((t,n)=>{const r=t.acos(e);return n([e]),r},{x:e},null,a.b)}})},oAkI:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),o=n("dsKV"),s=n("o/e8"),i=n("VO80");const u=Object(i.a)({sub_:function(t,e){let n=Object(s.a)(t,"a","sub"),i=Object(s.a)(e,"b","sub");return[n,i]=Object(o.b)(n,i),r.a.runKernelFunc((t,e)=>{const r=t.subtract(n,i);return e([n,i]),r},{a:n,b:i},null,a.Gc)}})},"oJu+":function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("VO80");const i=Object(s.a)({zerosLike_:function(t){const e=Object(o.a)(t,"x","zerosLike");return r.a.runKernelFunc(t=>t.zerosLike(e),{x:e},null,a.Qc)}})},p4Cv:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("AoCb"),a=n("o/e8");const o=async function(t){const e=Object(a.a)(t,"condition","whereAsync","bool"),n=await e.data(),o=Object(r.a)(e.shape,n);return t!==e&&e.dispose(),o}},"pJ3+":function(t,e,n){var r;!function(a,o){var s,i=this,u=o.pow(256,6),c=o.pow(2,52),l=2*c;function d(t,e,n){var r=[],d=f(function t(e,n){var r,a=[],o=typeof e;if(n&&"object"==o)for(r in e)try{a.push(t(e[r],n-1))}catch(s){}return a.length?a:"string"==o?e:e+"\0"}((e=1==e?{entropy:!0}:e||{}).entropy?[t,m(a)]:null==t?function(){try{var t;return s&&(t=s.randomBytes)?t=t(256):(t=new Uint8Array(256),(i.crypto||i.msCrypto).getRandomValues(t)),m(t)}catch(r){var e=i.navigator,n=e&&e.plugins;return[+new Date,i,n,i.screen,m(a)]}}():t,3),r),b=new p(r),g=function(){for(var t=b.g(6),e=u,n=0;t<c;)t=256*(t+n),e*=256,n=b.g(1);for(;t>=l;)t/=2,e/=2,n>>>=1;return(t+n)/e};return g.int32=function(){return 0|b.g(4)},g.quick=function(){return b.g(4)/4294967296},g.double=g,f(m(b.S),a),(e.pass||n||function(t,e,n,r){return r&&(r.S&&h(r,b),t.state=function(){return h(b,{})}),n?(o.random=t,e):t})(g,d,"global"in e?e.global:this==o,e.state)}function p(t){var e,n=t.length,r=this,a=0,o=r.i=r.j=0,s=r.S=[];for(n||(t=[n++]);a<256;)s[a]=a++;for(a=0;a<256;a++)s[a]=s[o=255&o+t[a%n]+(e=s[a])],s[o]=e;(r.g=function(t){for(var e,n=0,a=r.i,o=r.j,s=r.S;t--;)e=s[a=255&a+1],n=256*n+s[255&(s[a]=s[o=255&o+e])+(s[o]=e)];return r.i=a,r.j=o,n})(256)}function h(t,e){return e.i=t.i,e.j=t.j,e.S=t.S.slice(),e}function f(t,e){for(var n,r=t+"",a=0;a<r.length;)e[255&a]=255&(n^=19*e[255&a])+r.charCodeAt(a++);return m(e)}function m(t){return String.fromCharCode.apply(0,t)}if(o.seedrandom=d,f(o.random(),a),t.exports){t.exports=d;try{s=n(9)}catch(b){}}else void 0===(r=(function(){return d}).call(e,n,e,t))||(t.exports=r)}([],Math)},pJ6O:function(t,e,n){(function(t){var r;!function(t,a,o){function s(t){var e=this,n="";e.next=function(){var t=e.x^e.x>>>2;return e.x=e.y,e.y=e.z,e.z=e.w,e.w=e.v,(e.d=e.d+362437|0)+(e.v=e.v^e.v<<4^t^t<<1)|0},e.x=0,e.y=0,e.z=0,e.w=0,e.v=0,t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),r==n.length&&(e.d=e.x<<10^e.x>>>4),e.next()}function i(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e.v=t.v,e.d=t.d,e}function u(t,e){var n=new s(t),r=e&&e.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n("kU2C")&&n("QvbP")?void 0===(r=(function(){return u}).call(e,n,e,a))||(a.exports=r):this.xorwow=u}(0,t,n("kU2C"))}).call(this,n("0SIU")(t))},pJIP:function(t,e,n){"use strict";n.r(e),n.d(e,"SupportedPackages",(function(){return Dr})),n.d(e,"load",(function(){return Mr}));var r={};n.r(r),n.d(r,"json",(function(){return R}));var a={};n.r(a),n.d(a,"json",(function(){return A}));var o={};n.r(o),n.d(o,"json",(function(){return F}));var s={};n.r(s),n.d(s,"json",(function(){return D}));var i={};n.r(i),n.d(i,"json",(function(){return _}));var u={};n.r(u),n.d(u,"json",(function(){return M}));var c={};n.r(c),n.d(c,"json",(function(){return P}));var l={};n.r(l),n.d(l,"json",(function(){return B}));var d={};n.r(d),n.d(d,"json",(function(){return L}));var p={};n.r(p),n.d(p,"json",(function(){return V}));var h={};n.r(h),n.d(h,"json",(function(){return z}));var f={};n.r(f),n.d(f,"json",(function(){return W}));var m={};n.r(m),n.d(m,"json",(function(){return U}));var b={};n.r(b),n.d(b,"json",(function(){return K}));var g={};n.r(g),n.d(g,"json",(function(){return G}));var y={};n.r(y),n.d(y,"json",(function(){return H}));var x={};n.r(x),n.d(x,"json",(function(){return X}));var O,v,w=n("+hG3");!function(t){t[t.DT_INVALID=0]="DT_INVALID",t[t.DT_FLOAT=1]="DT_FLOAT",t[t.DT_DOUBLE=2]="DT_DOUBLE",t[t.DT_INT32=3]="DT_INT32",t[t.DT_UINT8=4]="DT_UINT8",t[t.DT_INT16=5]="DT_INT16",t[t.DT_INT8=6]="DT_INT8",t[t.DT_STRING=7]="DT_STRING",t[t.DT_COMPLEX64=8]="DT_COMPLEX64",t[t.DT_INT64=9]="DT_INT64",t[t.DT_BOOL=10]="DT_BOOL",t[t.DT_QINT8=11]="DT_QINT8",t[t.DT_QUINT8=12]="DT_QUINT8",t[t.DT_QINT32=13]="DT_QINT32",t[t.DT_BFLOAT16=14]="DT_BFLOAT16",t[t.DT_FLOAT_REF=101]="DT_FLOAT_REF",t[t.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",t[t.DT_INT32_REF=103]="DT_INT32_REF",t[t.DT_UINT8_REF=104]="DT_UINT8_REF",t[t.DT_INT16_REF=105]="DT_INT16_REF",t[t.DT_INT8_REF=106]="DT_INT8_REF",t[t.DT_STRING_REF=107]="DT_STRING_REF",t[t.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",t[t.DT_INT64_REF=109]="DT_INT64_REF",t[t.DT_BOOL_REF=110]="DT_BOOL_REF",t[t.DT_QINT8_REF=111]="DT_QINT8_REF",t[t.DT_QUINT8_REF=112]="DT_QUINT8_REF",t[t.DT_QINT32_REF=113]="DT_QINT32_REF",t[t.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"}(O||(O={})),function(t){let e;!function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"}(e=t.CheckpointFormatVersion||(t.CheckpointFormatVersion={}))}(v||(v={}));const j={};function I(t){return j[t]}function C(t,e,n,r,a){const o=e.inputParams[t];if(o&&void 0!==o.inputIndexStart){const t=o.inputIndexStart,s=0===o.inputIndexEnd?void 0:void 0===o.inputIndexEnd?t+1:o.inputIndexEnd;if("tensor"===o.type)return N(e.inputNames[o.inputIndexStart],n,r,a);if("tensors"===o.type)return e.inputNames.slice(t,s).map(t=>N(t,n,r,a));const i=N(e.inputNames.slice(t)[0],n,r,a),u=i.dataSync();return"number"===o.type?u[0]:w.Ib.toNestedArray(i.shape,u)}const s=e.attrParams[t];return s&&s.value}function N(t,e,n,r){const[a,o]=T(t);if(null!=r){const t=r.getHashTableHandleByName(a);if(null!=t)return t}const s=n.currentContextIds.find(t=>!!e[E(a,t)]);return void 0!==s?e[E(a,s)][o]:void 0}function $(t,e){const[n,r]=T(t);return[E(n,e&&e.currentContextId),r]}function E(t,e){return e?`${t}-${e}`:t}function T(t){const e=t.split(":");return 1===e.length?[t,0]:[e[0],Number(e[e.length-1])]}function S(t,e,n){let r=C("pad",t,e,n);if("explicit"===r){r=C("explicitPaddings",t,e,n);const a=[[0,0],[0,0],[0,0],[0,0]];for(let t=0;t<4;t++)a[t][0]=r[2*t],a[t][1]=r[2*t+1];return a}return r}function k(t){return t.kept?t:Object(w.bb)(t)}const R=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],A=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"clip_value_min",name:"clipValueMin",type:"number"},{tfName:"clip_value_max",name:"clipValueMax",type:"number"}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"clipValueMin",name:"clipValueMin",type:"number",defaultValue:0},{tfName:"clipValueMax",name:"clipValueMax",type:"number",defaultValue:6}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],F=[{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}],D=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],_=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],M=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],P=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],B=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],L=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]}],V=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}],z=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],W=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],U=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],K=[{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],G=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool",notSupported:!0}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],H=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],X=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]}];class q{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const t=[].concat(...[r,a,o,s,i,u,c,h,p,l,f,m,b,g,y,x,d].map(t=>t.json));this.opMappers=t.reduce((t,e)=>(t[e.tfOpName]=e,t),{})}transformGraph(t,e={}){const n=[],r=[],a=[],o=t.node.reduce((t,e)=>(t[e.name]=this.mapNode(e),e.op.startsWith("Placeholder")?n.push(t[e.name]):"Const"===e.op?r.push(t[e.name]):null!=e.input&&0!==e.input.length||a.push(t[e.name]),t),{});let s=[];const i=[];let u={},c={};null!=e&&(u=this.mapSignatureEntries(e.inputs),c=this.mapSignatureEntries(e.outputs));const l=Object.keys(o);l.forEach(t=>{const e=o[t];e.inputNames.forEach(t=>{const[n]=$(t);e.inputs.push(o[n]),o[n].children.push(e)})}),0===Object.keys(c).length?l.forEach(t=>{const e=o[t];0===e.children.length&&i.push(e)}):Object.keys(c).forEach(t=>{const[e]=$(t),n=o[e];null!=n&&(n.signatureKey=c[t],i.push(n))}),Object.keys(u).length>0?Object.keys(u).forEach(t=>{const[e]=$(t),n=o[e];n&&(n.signatureKey=u[t],s.push(n))}):s=n;let d={};null!=t.library&&null!=t.library.function&&(d=t.library.function.reduce((t,e)=>(t[e.signature.name]=this.mapFunction(e),t),{}));const p={nodes:o,inputs:s,outputs:i,weights:r,placeholders:n,signature:e,functions:d};return a.length>0&&(p.initNodes=a),p}mapSignatureEntries(t){return Object.keys(t||{}).reduce((e,n)=>(e[t[n].name]=n,e),{})}mapNode(t){const e=I(t.op)||this.opMappers[t.op]||{};null==t.attr&&(t.attr={});const n={name:t.name,op:t.op,category:e.category,inputNames:(t.input||[]).map(t=>t.startsWith("^")?t.substr(1):t),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:t.attr};return null!=e.inputs&&(n.inputParams=e.inputs.reduce((t,e)=>(t[e.name]={type:e.type,inputIndexStart:e.start,inputIndexEnd:e.end},t),{})),null!=e.attrs&&(n.attrParams=e.attrs.reduce((e,n)=>{const r=n.type;let a=void 0;switch(n.type){case"string":a=Q(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Q(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":a=it(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=it(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":a=Z(t.attr,n.tfName,n.defaultValue||0),void 0===a&&n.tfDeprecatedName&&(a=Z(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":a=st(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=st(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":a=J(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=J(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":a=ct(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=ct(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":a=ot(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=ot(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":a=ut(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=ut(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":a=nt(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=nt(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":a=rt(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=rt(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":a=et(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=et(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${t.op}`)}return e[n.name]={value:a,type:r},e},{})),n}mapFunction(t){const e=t.nodeDef,n=[];let r={};null!=e&&(r=e.reduce((t,e)=>(t[e.name]=this.mapNode(e),"Const"===e.op&&n.push(t[e.name]),t),{}));const a=[],o=[];t.signature.inputArg.forEach(t=>{const[e]=$(t.name),n={name:e,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:tt(t.type),type:"dtype"}},children:[]};n.signatureKey=t.name,a.push(n),r[e]=n}),Object.keys(r).forEach(t=>{const e=r[t];e.inputNames.forEach(t=>{const[n]=$(t);e.inputs.push(r[n]),r[n].children.push(e)})});const s=t.ret;t.signature.outputArg.forEach(t=>{const[e,n]=$(s[t.name]),a=r[e];null!=a&&(a.defaultOutput=n,o.push(a))});const i=this.mapArgsToSignature(t);return{nodes:r,inputs:a,outputs:o,weights:n,placeholders:[],signature:i}}mapArgsToSignature(t){return{methodName:t.signature.name,inputs:t.signature.inputArg.reduce((t,e)=>(t[e.name]=this.mapArgToTensorInfo(e),t),{}),outputs:t.signature.outputArg.reduce((e,n)=>(e[n.name]=this.mapArgToTensorInfo(n,t.ret),e),{})}}mapArgToTensorInfo(t,e){let n=t.name;return null!=e&&(n=e[n]),{name:n,dtype:t.type}}}function Y(t,e){const n=Array.isArray(t)?String.fromCharCode.apply(null,t):function(t){const e=Object(w.hb)().global;if(void 0!==e.atob)return e.atob(t);if("undefined"!=typeof Buffer)return new Buffer(t,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(t);return e?n:n.toLowerCase()}function Q(t,e,n,r=!1){const a=t[e];return null!=a?Y(a.s,r):n}function J(t,e,n){const r=t[e];return r?r.b:n}function Z(t,e,n){const r=t[e]||{},a=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof a?a:parseInt(a,10)}function tt(t){switch("string"==typeof t&&(t=O[t]),t){case O.DT_FLOAT:return"float32";case O.DT_INT32:case O.DT_INT64:case O.DT_INT8:case O.DT_UINT8:return"int32";case O.DT_BOOL:return"bool";case O.DT_DOUBLE:return"float32";case O.DT_STRING:return"string";default:return null}}function et(t,e,n){const r=t[e];return r&&r.func?r.func.name:n}function nt(t,e,n){const r=t[e];return r&&r.type?tt(r.type):n}function rt(t,e,n){const r=t[e];return r&&r.list&&r.list.type?r.list.type.map(t=>tt(t)):n}function at(t){if(!t.unknownRank)return null!=t.dim?t.dim.map(t=>"number"==typeof t.size?t.size:parseInt(t.size,10)):[]}function ot(t,e,n){const r=t[e];return r&&r.shape?at(r.shape):n}function st(t,e,n){const r=t[e];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map(t=>"number"==typeof t?t:parseInt(t,10)):n}function it(t,e,n,r=!1){const a=t[e];return a&&a.list&&a.list.s?a.list.s.map(t=>Y(t,r)):n}function ut(t,e,n){const r=t[e];return r&&r.list&&r.list.shape?r.list.shape.map(t=>at(t)):n}function ct(t,e,n){const r=t[e];return r&&r.list&&r.list.b?r.list.b:n}class lt{constructor(t,e,n){this.node=t,this.tensorMap=e,this.context=n,this.inputs=[],this.attrs={},this.inputs=t.inputNames.map(t=>this.getInput(t)),null!=t.rawAttrs&&(this.attrs=Object.keys(t.rawAttrs).reduce((t,e)=>(t[e]=this.getAttr(e),t),{}))}getInput(t){return N(t,this.tensorMap,this.context)}getAttr(t,e){const n=this.node.rawAttrs[t];if(null!=n.tensor)return N(t,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return Z(this.node.rawAttrs,t,e);if(null!=n.s)return Q(this.node.rawAttrs,t,e);if(null!=n.b)return J(this.node.rawAttrs,t,e);if(null!=n.shape)return ot(this.node.rawAttrs,t,e);if(null!=n.type)return nt(this.node.rawAttrs,t,e);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return st(this.node.rawAttrs,t,e);if(null!=n.list.s)return it(this.node.rawAttrs,t,e);if(null!=n.list.shape)return ut(this.node.rawAttrs,t,e);if(null!=n.list.b)return ct(this.node.rawAttrs,t,e);if(null!=n.list.type)return rt(this.node.rawAttrs,t,e)}return e}}var dt=n("kRdc"),pt=n("SFB9"),ht=n("RhH0"),ft=n("parS"),mt=n("x3y4"),bt=n("ARu+"),gt=n("UI8N"),yt=n("oAkI"),xt=n("8OX7"),Ot=n("CfTU"),vt=n("yfHJ"),wt=n("QYQ3"),jt=n("iuCH"),It=n("o3Rt"),Ct=n("RhVc"),Nt=n("Ig+c"),$t=n("3FnS"),Et=n("fjZN"),Tt=n("YAKK"),St=n("0ahe"),kt=n("WWBm"),Rt=n("B3db"),At=n("7/dO"),Ft=n("waK1"),Dt=n("njhW"),_t=n("jgXy"),Mt=n("TyAZ"),Pt=n("G6IW"),Bt=n("02mo"),Lt=n("E1lT"),Vt=n("RrGL"),zt=n("JLAb"),Wt=n("O7f5"),Ut=n("tQDl"),Kt=n("17CO"),Gt=n("kXpR"),Ht=n("CKnt"),Xt=n("s57M"),qt=n("/7N0"),Yt=n("aTLu"),Qt=n("Hfat"),Jt=n("XcSs"),Zt=n("n/2y"),te=n("Fjpt"),ee=n("k7Jv"),ne=n("iIjY"),re=n("0wrZ"),ae=n("wI/y"),oe=n("Xyqe"),se=n("867m"),ie=n("bzdD"),ue=n("Ug8H");function ce(t,e,n=""){w.Ib.assert(function(t,e){if(t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(-1!==t[n]&&-1!==e[n]&&t[n]!==e[n])return!1;return!0}(t,e),()=>n+` Shapes ${t} and ${e} must match`)}class le{constructor(t,e,n,r,a,o,s){this.name=t,this.dtype=e,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=a,this.dynamicSize=o,this.clearAfterRead=s,this.tensors=[],this.closed_=!1,this.idTensor=Object(w.tb)(0),Object(w.lb)(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(t){this.tensors.forEach(e=>{null!=t&&t.has(e.tensor.id)||e.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||t>=this.size())throw new Error(`Tried to read from index ${t}, but array size is: ${this.size()}`);const e=this.tensors[t];if(e.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${t} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(e.cleared=!0),e.read=!0,e.tensor}readMany(t){return t.map(t=>this.read(t))}write(t,e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||!this.dynamicSize&&t>=this.maxSize)throw new Error(`Tried to write to index ${t}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[t]||{};if(e.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t},\n          because the value dtype is ${e.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=e.shape),ce(this.elementShape,e.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${t}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been written.`);n.tensor=e,Object(w.lb)(e),n.written=!0,this.tensors[t]=n}writeMany(t,e){if(t.length!==e.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${t.length} is not the same as tensors size: ${e.length}.`);t.forEach((t,n)=>this.write(t,e[n]))}gather(t,e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${e}`);if(t)t=t.slice(0,this.size());else{t=[];for(let e=0;e<this.size();e++)t.push(e)}if(0===t.length)return Object(w.Bb)([],[0].concat(this.elementShape));const n=this.readMany(t);return ce(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Object(w.yb)(n,0)}concat(t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${t}`);if(0===this.size())return Object(w.Bb)([],[0].concat(this.elementShape));const e=[];for(let r=0;r<this.size();r++)e.push(r);const n=this.readMany(e);return ce(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),Object(w.cb)(n,0)}scatter(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const n=Math.max(...t);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(t,Object(w.Gb)(e,0))}split(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);let n=0;const r=t.map(t=>(n+=t,n));if(n!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${e.shape}`);if(!this.dynamicSize&&t.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${t.length}), and the TensorArray is not marked as dynamically resizeable`);const a=0===n?0:e.size/n,o=[];Object(w.Eb)(()=>{e=Object(w.sb)(e,[1,n,a]);for(let n=0;n<t.length;++n){const s=[0,0===n?0:r[n-1],0],i=[1,t[n],a];o[n]=Object(w.sb)(Object(w.vb)(e,s,i),this.elementShape)}return o});const s=[];for(let i=0;i<t.length;i++)s[i]=i;this.writeMany(s,o)}}class de{constructor(t,e,n,r=-1){this.tensors=t,this.elementShape=e,this.elementDtype=n,null!=t&&t.forEach(t=>{if(n!==t.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${t.dtype}`);ce(e,t.shape,"TensorList shape mismatch: "),Object(w.lb)(t)}),this.idTensor=Object(w.tb)(0),this.maxNumElements=r,Object(w.lb)(this.idTensor)}get id(){return this.idTensor.id}copy(){return new de([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(t){this.tensors.forEach(e=>{null!=t&&t.has(e.id)||e.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(t,e,n=-1){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);return ce(t,this.elementShape,"TensorList shape mismatch: "),Object(w.Eb)(()=>{const e=this.tensors.map(e=>Object(w.sb)(e,t));return Object(w.yb)(e,0)})}popBack(t,e){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=this.tensors.pop();return ce(n.shape,t,"TensorList shape mismatch: "),Object(w.sb)(n,t)}pushBack(t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(ce(t.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Object(w.lb)(t),this.tensors.push(t)}resize(t){if(t<0)throw new Error("TensorListResize expects size to be non-negative. Got: "+t);if(-1!==this.maxNumElements&&t>this.maxNumElements)throw new Error(`TensorListResize input size ${t} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=t}getItem(t,e,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(t<0||t>this.tensors.length)throw new Error(`Trying to access element ${t} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[t])throw new Error(`element at index ${t} is null.`);return ce(this.tensors[t].shape,e,"TensorList shape mismatch: "),this.tensors[t]}setItem(t,e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(t<0||-1!==this.maxNumElements&&t>=this.maxNumElements)throw new Error(`Trying to set element ${t} in a list with max ${this.maxNumElements} elements.`);ce(this.elementShape,e.shape,"TensorList shape mismatch: "),Object(w.lb)(e),this.tensors[t]=e}gather(t,e,n){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);return ce(this.elementShape,n,"TensorList shape mismatch: "),0===(t=t.slice(0,this.size())).length?Object(w.Bb)([],[0].concat(this.elementShape)):Object(w.Eb)(()=>{const e=t.map(t=>Object(w.sb)(this.tensors[t],n));return Object(w.yb)(e,0)})}concat(t,e){if(t&&t!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${t}`);return ce(this.elementShape,e,"TensorList shape mismatch: "),0===this.size()?Object(w.Bb)([],[0].concat(this.elementShape)):Object(w.Eb)(()=>{const t=this.tensors.map(t=>Object(w.sb)(t,e));return Object(w.cb)(t,0)})}}var pe=n("dnXz"),he=n("3X4V"),fe=n("EysY"),me=n("zR+/"),be=n("g4+C"),ge=n("FZCF"),ye=n("l0gX"),xe=n("n+ZZ"),Oe=n("i8k8"),ve=n("ulO0"),we=n("U/2n"),je=n("wXC5");function Ie(t,e,n){const[r,a]=C("fusedOps",t,e,n),o="biasadd"===r,s="prelu"===a,i="fusedbatchnorm"===r,u=C("numArgs",t,e,n);if(o){if(s&&2!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!s&&1!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(i)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported.");const c=C("strides",t,e,n),l=S(t,e,n),d=C("dataFormat",t,e,n).toUpperCase(),p=C("dilations",t,e,n),[h,f]=C("args",t,e,n);return{stride:c,pad:l,dataFormat:d,dilations:p,biasArg:h,preluArg:f,activationFunc:a}}var Ce=n("RrjA"),Ne=n("WJRb"),$e=n("Pvz5"),Ee=n("4iwy"),Te=n("wion"),Se=n("DbV5"),ke=n("hinG"),Re=n("hNYx"),Ae=n("fmoR"),Fe=n("Wiw4"),De=n("oJu+"),_e=n("3rNm"),Me=n("p4Cv"),Pe=n("90yW");function Be(t,e,n){return{boxes:C("boxes",t,e,n),scores:C("scores",t,e,n),maxOutputSize:C("maxOutputSize",t,e,n),iouThreshold:C("iouThreshold",t,e,n),scoreThreshold:C("scoreThreshold",t,e,n),softNmsSigma:C("softNmsSigma",t,e,n)}}var Le=n("VhY8"),Ve=n("hT5K"),ze=n("lg8H"),We=n("AV8V");class Ue{constructor(t,e){this.keyDType=t,this.valueDType=e,this.handle=Object(w.tb)(0),this.tensorMap=new Map,Object(w.lb)(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(t=>t.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}async import(t,e){this.checkKeyAndValueTensor(t,e);const n=await t.data();return this.tensorMap.forEach(t=>t.dispose()),this.tensorMap.clear(),Object(w.Eb)(()=>{const t=Object(w.Gb)(e),r=n.length,a=t.length;w.Ib.assert(r===a,()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${a} elements.`);for(let e=0;e<r;e++){const r=n[e],a=t[e];Object(w.lb)(a),this.tensorMap.set(r,a)}return this.handle})}async find(t,e){this.checkKeyAndValueTensor(t,e);const n=await t.data();return Object(w.Eb)(()=>{const t=[];for(let r=0;r<n.length;r++){const a=this.findWithDefault(n[r],e);t.push(a)}return Object(w.yb)(t)})}findWithDefault(t,e){const n=this.tensorMap.get(t);return null!=n?n:e}checkKeyAndValueTensor(t,e){if(t.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got `+t.dtype);if(e.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got `+e.dtype)}}var Ke=n("ubnP"),Ge=n("1N4k"),He=n("zvA9"),Xe=n("uy0A"),qe=n("4f3O"),Ye=n("shz4"),Qe=n("4zPZ"),Je=n("7wDt"),Ze=n("8YN0"),tn=n("Z5Ez"),en=n("SHv8"),nn=n("yRKQ"),rn=n("cdtJ"),an=n("4QEz"),on=n("X4fa"),sn=n("gErV"),un=n("vGLV"),cn=n("wCH+"),ln=n("Ei6o"),dn=n("rm0a"),pn=n("4FMF"),hn=n("34HJ"),fn=n("RRa9"),mn=n("6J+n"),bn=n("20lx"),gn=n("HmhO"),yn=n("ZJ6U"),xn=n("kaMP"),On=n("0I63"),vn=n("bTzI"),wn=n("3hph"),jn=n("0fRV"),In=n("NclT"),Cn=n("1U0N"),Nn=n("OkRW"),$n=n("jXH2"),En=n("RbuM"),Tn=n("i/oj"),Sn=n("ukBL"),kn=n("Grcp"),Rn=n("THqV"),An=n("th0q"),Fn=n("adw1"),Dn=n("2ugP"),_n=n("k9tH"),Mn=n("DrVt"),Pn=n("dYAU"),Bn=n("OygE"),Ln=n("Nk7E"),Vn=n("SNsm");function zn(t,e,n,r){const a=((t,e,n)=>{switch(t.category){case"arithmetic":return w.Eb(()=>((t,e,n)=>{switch(t.op){case"BiasAdd":case"AddV2":case"Add":return[dt.a(C("a",t,e,n),C("b",t,e,n))];case"AddN":return[pt.a(C("tensors",t,e,n))];case"FloorMod":case"Mod":return[ht.a(C("a",t,e,n),C("b",t,e,n))];case"Mul":return[ft.a(C("a",t,e,n),C("b",t,e,n))];case"RealDiv":case"Div":return[mt.a(C("a",t,e,n),C("b",t,e,n))];case"DivNoNan":return[bt.a(C("a",t,e,n),C("b",t,e,n))];case"FloorDiv":return[gt.a(C("a",t,e,n),C("b",t,e,n))];case"Sub":return[yt.a(C("a",t,e,n),C("b",t,e,n))];case"Minimum":return[xt.a(C("a",t,e,n),C("b",t,e,n))];case"Maximum":return[Ot.a(C("a",t,e,n),C("b",t,e,n))];case"Pow":return[vt.a(C("a",t,e,n),C("b",t,e,n))];case"SquaredDifference":return[wt.a(C("a",t,e,n),C("b",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"basic_math":return w.Eb(()=>((t,e,n)=>{switch(t.op){case"Abs":case"ComplexAbs":return[jt.a(C("x",t,e,n))];case"Acos":return[It.a(C("x",t,e,n))];case"Acosh":return[Ct.a(C("x",t,e,n))];case"Asin":return[Nt.a(C("x",t,e,n))];case"Asinh":return[$t.a(C("x",t,e,n))];case"Atan":return[Et.a(C("x",t,e,n))];case"Atan2":return[Tt.a(C("x",t,e,n),C("y",t,e,n))];case"Atanh":return[St.a(C("x",t,e,n))];case"Ceil":return[kt.a(C("x",t,e,n))];case"Complex":return[Rt.a(C("real",t,e,n),C("imag",t,e,n))];case"Cos":return[At.a(C("x",t,e,n))];case"Cosh":return[Ft.a(C("x",t,e,n))];case"Elu":return[Dt.a(C("x",t,e,n))];case"Erf":return[_t.a(C("x",t,e,n))];case"Exp":return[Mt.a(C("x",t,e,n))];case"Expm1":return[Pt.a(C("x",t,e,n))];case"Floor":return[Bt.a(C("x",t,e,n))];case"Log":return[Lt.a(C("x",t,e,n))];case"Log1p":return[Vt.a(C("x",t,e,n))];case"Imag":return[zt.a(C("x",t,e,n))];case"Neg":return[Wt.a(C("x",t,e,n))];case"Reciprocal":return[Ut.a(C("x",t,e,n))];case"Real":return[Kt.a(C("x",t,e,n))];case"Relu":return[Gt.a(C("x",t,e,n))];case"Round":return[Ht.a(C("x",t,e,n))];case"Selu":return[Xt.a(C("x",t,e,n))];case"Sigmoid":return[qt.a(C("x",t,e,n))];case"Sin":return[Yt.a(C("x",t,e,n))];case"Sign":return[Qt.a(C("x",t,e,n))];case"Sinh":return[Jt.a(C("x",t,e,n))];case"Softplus":return[Zt.a(C("x",t,e,n))];case"Sqrt":return[te.a(C("x",t,e,n))];case"Square":return[ee.a(C("x",t,e,n))];case"Tanh":return[ne.a(C("x",t,e,n))];case"Tan":return[re.a(C("x",t,e,n))];case"Relu6":case"ClipByValue":return[ae.a(C("x",t,e,n),C("clipValueMin",t,e,n),C("clipValueMax",t,e,n))];case"Rsqrt":return[oe.a(N(t.inputNames[0],e,n))];case"Prod":return[se.a(C("x",t,e,n),C("axes",t,e,n))];case"LeakyRelu":return[ie.a(C("x",t,e,n),C("alpha",t,e,n))];case"Prelu":return[ue.a(C("x",t,e,n),C("alpha",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"control":return(async(t,e,n)=>{switch(t.op){case"If":case"StatelessIf":{const r=C("thenBranch",t,e,n),a=C("elseBranch",t,e,n),o=C("cond",t,e,n),s=C("args",t,e,n);return(await o.data())[0]?n.functionMap[r].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap):n.functionMap[a].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=C("body",t,e,n),a=C("cond",t,e,n),o=C("args",t,e,n),s=await n.functionMap[a].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap),i=o.map(t=>t.id);let u=await s[0].data();s.forEach(t=>{t.kept||-1!==i.indexOf(t.id)||t.dispose()});let c=o;for(;u[0];){const t=c;c=await n.functionMap[r].executeFunctionAsync(c,n.tensorArrayMap,n.tensorListMap);const e=c.map(t=>t.id);t.forEach(t=>{t.kept||-1!==i.indexOf(t.id)||-1!==e.indexOf(t.id)||t.dispose()});const o=await n.functionMap[a].executeFunctionAsync(c,n.tensorArrayMap,n.tensorListMap);u=await o[0].data(),o.forEach(t=>{t.kept||-1!==i.indexOf(t.id)||-1!==e.indexOf(t.id)||t.dispose()})}return c}case"LoopCond":return[k(C("pred",t,e,n))];case"Switch":{const r=C("pred",t,e,n);let a=C("data",t,e,n);return a.kept||(a=k(a)),(await r.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{const r=t.inputNames.find(t=>void 0!==N(t,e,n));return r?[k(N(r,e,n))]:void 0}case"Enter":{const r=C("frameName",t,e,n),a=C("tensor",t,e,n);return n.enterFrame(r),[k(a)]}case"Exit":{const r=C("tensor",t,e,n);return n.exitFrame(),[k(r)]}case"NextIteration":{const r=C("tensor",t,e,n);return n.nextIteration(),[k(r)]}case"TensorArrayV3":{const r=C("size",t,e,n),a=C("dtype",t,e,n),o=C("elementShape",t,e,n),s=C("dynamicSize",t,e,n),i=C("clearAfterRead",t,e,n),u=C("identicalElementShapes",t,e,n),c=C("name",t,e,n),l=new le(c,a,r,o,u,s,i);return n.addTensorArray(l),[l.idTensor,Object(w.tb)(1)]}case"TensorArrayWriteV3":{const r=C("tensorArrayId",t,e,n),a=C("index",t,e,n),o=C("tensor",t,e,n),s=n.getTensorArray(r.id);return s.write(a,o),[s.idTensor]}case"TensorArrayReadV3":{const r=C("tensorArrayId",t,e,n),a=C("index",t,e,n);return[n.getTensorArray(r.id).read(a)]}case"TensorArrayGatherV3":{const r=C("tensorArrayId",t,e,n),a=C("indices",t,e,n),o=C("dtype",t,e,n);return[n.getTensorArray(r.id).gather(a,o)]}case"TensorArrayScatterV3":{const r=C("tensorArrayId",t,e,n),a=C("indices",t,e,n),o=C("tensor",t,e,n),s=n.getTensorArray(r.id);return s.scatter(a,o),[s.idTensor]}case"TensorArrayConcatV3":{const r=C("tensorArrayId",t,e,n),a=n.getTensorArray(r.id),o=C("dtype",t,e,n);return[a.concat(o)]}case"TensorArraySplitV3":{const r=C("tensorArrayId",t,e,n),a=C("tensor",t,e,n),o=C("lengths",t,e,n),s=n.getTensorArray(r.id);return s.split(o,a),[s.idTensor]}case"TensorArraySizeV3":{const r=C("tensorArrayId",t,e,n),a=n.getTensorArray(r.id);return[Object(w.tb)(a.size(),"int32")]}case"TensorArrayCloseV3":{const r=C("tensorArrayId",t,e,n),a=n.getTensorArray(r.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{const r=C("tensorListId",t,e,n),a=C("index",t,e,n),o=C("tensor",t,e,n),s=n.getTensorList(r.id);return s.setItem(a,o),[s.idTensor]}case"TensorListGetItem":{const r=C("tensorListId",t,e,n),a=C("index",t,e,n),o=C("elementShape",t,e,n),s=C("elementDType",t,e,n);return[n.getTensorList(r.id).getItem(a,o,s)]}case"TensorListScatterV2":case"TensorListScatter":{const r=C("indices",t,e,n),a=function(t,e,n,r){if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const a=Math.max(...e);if(null!=r&&-1!==r&&a>=r)throw new Error(`Max index must be < array size (${a}  vs. ${r})`);const o=new de([],n,t.dtype,r),s=Object(w.Gb)(t,0);return e.forEach((t,e)=>{o.setItem(t,s[e])}),o}(C("tensor",t,e,n),r,C("elementShape",t,e,n),C("numElements",t,e,n));return n.addTensorList(a),[a.idTensor]}case"TensorListReserve":{const s=(r=C("elementShape",t,e,n),a=C("elementDType",t,e,n),o=C("numElements",t,e,n),new de([],r,a,o));return n.addTensorList(s),[s.idTensor]}case"TensorListGather":{const r=C("tensorListId",t,e,n),a=C("indices",t,e,n),o=C("elementShape",t,e,n),s=C("elementDType",t,e,n);return[n.getTensorList(r.id).gather(a,s,o)]}case"TensorListStack":{const r=C("tensorListId",t,e,n),a=C("elementShape",t,e,n),o=C("elementDType",t,e,n),s=C("numElements",t,e,n);return[n.getTensorList(r.id).stack(a,o,s)]}case"TensorListFromTensor":{const r=function(t,e,n){const r=t.dtype;if(t.shape.length<1)throw new Error("Tensor must be at least a vector, but saw shape: "+t.shape);if(t.dtype!==n)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${n}`);ce(t.shape.slice(1),e,"TensorList shape mismatch: ");const a=Object(w.Gb)(t);return new de(a,e,r)}(C("tensor",t,e,n),C("elementShape",t,e,n),C("elementDType",t,e,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":{const r=C("tensorListId",t,e,n),a=n.getTensorList(r.id),o=C("dtype",t,e,n),s=C("elementShape",t,e,n);return[a.concat(o,s)]}case"TensorListPushBack":{const r=C("tensorListId",t,e,n),a=C("tensor",t,e,n),o=n.getTensorList(r.id);return o.pushBack(a),[o.idTensor]}case"TensorListPopBack":{const r=C("tensorListId",t,e,n),a=C("elementShape",t,e,n),o=C("elementDType",t,e,n);return[n.getTensorList(r.id).popBack(a,o)]}case"TensorListSplit":{const r=C("tensor",t,e,n),a=C("elementShape",t,e,n),o=function(t,e,n){let r=0;const a=e.map(t=>(r+=t,r));if(r!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${t.shape}`);const o=0===r?0:t.size/r,s=Object(w.Eb)(()=>{const s=[];t=Object(w.sb)(t,[1,r,o]);for(let r=0;r<e.length;++r){const i=[0,0===r?0:a[r-1],0],u=[1,e[r],o];s[r]=Object(w.sb)(Object(w.vb)(t,i,u),n)}return t.dispose(),s}),i=new de([],n,t.dtype,e.length);for(let u=0;u<s.length;u++)i.setItem(u,s[u]);return i}(r,C("lengths",t,e,n),a);return n.addTensorList(o),[o.idTensor]}default:throw TypeError(`Node type ${t.op} is not implemented`)}var r,a,o})(t,e,n);case"convolution":return w.Eb(()=>((t,e,n)=>{switch(t.op){case"Conv1D":{const r=C("stride",t,e,n),a=C("pad",t,e,n),o=C("dataFormat",t,e,n).toUpperCase(),s=C("dilation",t,e,n);return[pe.a(C("x",t,e,n),C("filter",t,e,n),r,a,o,s)]}case"Conv2D":{const r=C("strides",t,e,n),a=S(t,e,n),o=C("dataFormat",t,e,n).toUpperCase(),s=C("dilations",t,e,n);return[he.a(C("x",t,e,n),C("filter",t,e,n),[r[1],r[2]],a,o,[s[1],s[2]])]}case"_FusedConv2D":{const{stride:r,pad:a,dataFormat:o,dilations:s,biasArg:i,preluArg:u,activationFunc:c}=Ie(t,e,n);return[fe.g.conv2d({x:C("x",t,e,n),filter:C("filter",t,e,n),strides:[r[1],r[2]],pad:a,dataFormat:o,dilations:[s[1],s[2]],bias:i,activation:c,preluActivationWeights:u})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:a,dataFormat:o,dilations:s,biasArg:i,preluArg:u,activationFunc:c}=Ie(t,e,n);return[fe.g.depthwiseConv2d({x:C("x",t,e,n),filter:C("filter",t,e,n),strides:[r[1],r[2]],pad:a,dataFormat:o,dilations:[s[1],s[2]],bias:i,activation:c,preluActivationWeights:u})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=C("outputShape",t,e,n),a=C("strides",t,e,n),o=S(t,e,n);return[me.a(C("x",t,e,n),C("filter",t,e,n),r,[a[1],a[2]],o)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=C("strides",t,e,n),a=S(t,e,n),o=C("dilations",t,e,n),s=C("dataFormat",t,e,n).toUpperCase();return[be.a(C("input",t,e,n),C("filter",t,e,n),[r[1],r[2]],a,s,[o[1],o[2]])]}case"Conv3D":{const r=C("strides",t,e,n),a=C("pad",t,e,n),o=C("dataFormat",t,e,n).toUpperCase(),s=C("dilations",t,e,n);return[ge.a(C("x",t,e,n),C("filter",t,e,n),[r[1],r[2],r[3]],a,o,[s[1],s[2],s[3]])]}case"AvgPool":{const r=C("strides",t,e,n),a=C("pad",t,e,n),o=C("kernelSize",t,e,n);return[ye.a(C("x",t,e,n),[o[1],o[2]],[r[1],r[2]],a)]}case"MaxPool":{const r=C("strides",t,e,n),a=C("pad",t,e,n),o=C("kernelSize",t,e,n);return[xe.a(C("x",t,e,n),[o[1],o[2]],[r[1],r[2]],a)]}case"MaxPoolWithArgmax":{const r=C("strides",t,e,n),a=C("pad",t,e,n),o=C("kernelSize",t,e,n),s=C("includeBatchInIndex",t,e,n),{result:i,indexes:u}=Oe.a(C("x",t,e,n),[o[1],o[2]],[r[1],r[2]],a,s);return[i,u]}case"AvgPool3D":{const r=C("strides",t,e,n),a=C("pad",t,e,n),o=C("kernelSize",t,e,n);return[ve.a(C("x",t,e,n),[o[1],o[2],o[3]],[r[1],r[2],r[3]],a)]}case"MaxPool3D":{const r=C("strides",t,e,n),a=C("pad",t,e,n),o=C("kernelSize",t,e,n);return[we.a(C("x",t,e,n),[o[1],o[2],o[3]],[r[1],r[2],r[3]],a)]}case"Dilation2D":{const r=C("strides",t,e,n),a=C("pad",t,e,n),o=C("dilations",t,e,n),s=r[1],i=r[2],u=o[1],c=o[2];return[je.a(C("x",t,e,n),C("filter",t,e,n),[s,i],a,[u,c],"NHWC")]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"creation":return w.Eb(()=>((t,e,n)=>{switch(t.op){case"Fill":{const r=C("shape",t,e,n),a=C("dtype",t,e,n),o=C("value",t,e,n);return[Ce.a(r,o,a)]}case"LinSpace":{const r=C("start",t,e,n),a=C("stop",t,e,n),o=C("num",t,e,n);return[Ne.a(r,a,o)]}case"Multinomial":{const r=C("logits",t,e,n),a=C("numSamples",t,e,n),o=C("seed",t,e,n);return[$e.a(r,a,o)]}case"OneHot":{const r=C("indices",t,e,n),a=C("depth",t,e,n),o=C("onValue",t,e,n),s=C("offValue",t,e,n);return[Ee.a(r,a,o,s)]}case"Ones":return[Te.a(C("shape",t,e,n),C("dtype",t,e,n))];case"OnesLike":return[Se.a(C("x",t,e,n))];case"RandomUniform":return[ke.a(C("shape",t,e,n),C("minval",t,e,n),C("maxval",t,e,n),C("dtype",t,e,n))];case"Range":{const r=C("start",t,e,n),a=C("stop",t,e,n),o=C("step",t,e,n);return[Re.a(r,a,o,C("dtype",t,e,n))]}case"TruncatedNormal":{const r=C("shape",t,e,n),a=C("mean",t,e,n),o=C("stdDev",t,e,n),s=C("seed",t,e,n);return[Ae.a(r,a,o,C("dtype",t,e,n),s)]}case"Zeros":return[Fe.a(C("shape",t,e,n),C("dtype",t,e,n))];case"ZerosLike":return[De.a(C("x",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"dynamic":return(async(t,e,n)=>{switch(t.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:a,maxOutputSize:o,iouThreshold:s,scoreThreshold:i,softNmsSigma:u}=Be(t,e,n),c=await fe.h.nonMaxSuppressionWithScoreAsync(r,a,o,s,i,u);return[c.selectedIndices,c.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:a,maxOutputSize:o,iouThreshold:s,scoreThreshold:i}=Be(t,e,n),u=C("padToMaxOutputSize",t,e,n),c=await fe.h.nonMaxSuppressionPaddedAsync(r,a,o,s,i,u);return[c.selectedIndices,c.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:a,maxOutputSize:o,iouThreshold:s,scoreThreshold:i}=Be(t,e,n);return[await fe.h.nonMaxSuppressionAsync(r,a,o,s,i)]}case"Where":{const r=_e.a(C("condition",t,e,n),"bool"),a=[await Me.a(r)];return r.dispose(),a}case"ListDiff":return Pe.a(C("x",t,e,n),C("y",t,e,n));default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n);case"evaluation":return w.Eb(()=>((t,e,n)=>{switch(t.op){case"TopKV2":{const r=C("x",t,e,n),a=C("k",t,e,n),o=C("sorted",t,e,n),s=Le.a(r,a,o);return[s.values,s.indices]}case"Unique":{const r=C("x",t,e,n),a=Ve.a(r);return[a.values,a.indices]}case"UniqueV2":{const r=C("x",t,e,n),a=C("axis",t,e,n),o=Ve.a(r,a);return[o.values,o.indices]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"image":return w.Eb(()=>((t,e,n)=>{switch(t.op){case"ResizeBilinear":{const r=C("images",t,e,n),a=C("size",t,e,n),o=C("alignCorners",t,e,n);return[fe.h.resizeBilinear(r,[a[0],a[1]],o)]}case"ResizeNearestNeighbor":{const r=C("images",t,e,n),a=C("size",t,e,n),o=C("alignCorners",t,e,n);return[fe.h.resizeNearestNeighbor(r,[a[0],a[1]],o)]}case"CropAndResize":{const r=C("image",t,e,n),a=C("boxes",t,e,n),o=C("boxInd",t,e,n),s=C("cropSize",t,e,n),i=C("method",t,e,n),u=C("extrapolationValue",t,e,n);return[fe.h.cropAndResize(r,a,o,s,i,u)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"graph":return w.Eb(()=>((t,e,n)=>{switch(t.op){case"Const":return e[t.name];case"PlaceholderWithDefault":const r=C("default",t,e,n);return[N(t.name,e,n)||r];case"Placeholder":return[N(t.name,e,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":return[k(C("x",t,e,n))];case"IdentityN":return C("x",t,e,n).map(t=>k(t));case"Snapshot":return[k(C("x",t,e,n))];case"Shape":return[ze.a(C("x",t,e,n).shape,"int32")];case"ShapeN":return C("x",t,e,n).map(t=>ze.a(t.shape));case"Size":return[We.a(C("x",t,e,n).size,"int32")];case"Rank":return[We.a(C("x",t,e,n).rank,"int32")];case"NoOp":return[We.a(1)];case"Print":const a=C("x",t,e,n),o=C("data",t,e,n),s=C("message",t,e,n),i=C("summarize",t,e,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(s);for(let t=0;t<o.length;t++)console.log(Array.prototype.slice.call(o[t].dataSync()).slice(0,i));return[a];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"logical":return w.Eb(()=>((t,e,n)=>{switch(t.op){case"Equal":return[Ke.a(C("a",t,e,n),C("b",t,e,n))];case"NotEqual":return[Ge.a(C("a",t,e,n),C("b",t,e,n))];case"Greater":return[He.a(C("a",t,e,n),C("b",t,e,n))];case"GreaterEqual":return[Xe.a(C("a",t,e,n),C("b",t,e,n))];case"Less":return[qe.a(C("a",t,e,n),C("b",t,e,n))];case"LessEqual":return[Ye.a(C("a",t,e,n),C("b",t,e,n))];case"LogicalAnd":return[Qe.a(C("a",t,e,n),C("b",t,e,n))];case"LogicalNot":return[Je.a(C("a",t,e,n))];case"LogicalOr":return[Ze.a(C("a",t,e,n),C("b",t,e,n))];case"Select":case"SelectV2":return[tn.a(C("condition",t,e,n),C("a",t,e,n),C("b",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"matrices":return w.Eb(()=>((t,e,n)=>{switch(t.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[en.a(C("a",t,e,n),C("b",t,e,n),C("transposeA",t,e,n),C("transposeB",t,e,n))];case"Transpose":return[nn.a(C("x",t,e,n),C("perm",t,e,n))];case"_FusedMatMul":const[r,a]=C("fusedOps",t,e,n),o="biasadd"===r,s="prelu"===a,i=C("numArgs",t,e,n);if(o){if(s&&2!==i)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!s&&1!==i)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[u,c]=C("args",t,e,n);return[fe.g.matMul({a:C("a",t,e,n),b:C("b",t,e,n),transposeA:C("transposeA",t,e,n),transposeB:C("transposeB",t,e,n),bias:u,activation:a,preluActivationWeights:c})];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"normalization":return w.Eb(()=>((t,e,n)=>{switch(t.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[rn.a(C("x",t,e,n),C("mean",t,e,n),C("variance",t,e,n),C("offset",t,e,n),C("scale",t,e,n),C("epsilon",t,e,n))];case"LRN":return[an.a(C("x",t,e,n),C("radius",t,e,n),C("bias",t,e,n),C("alpha",t,e,n),C("beta",t,e,n))];case"Softmax":return[on.a(C("x",t,e,n))];case"LogSoftmax":return[sn.a(C("x",t,e,n))];case"SparseToDense":return[un.a(C("sparseIndices",t,e,n),C("outputShape",t,e,n),C("sparseValues",t,e,n),C("defaultValue",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"reduction":return w.Eb(()=>((t,e,n)=>{switch(t.op){case"Max":{const r=C("axis",t,e,n),a=C("keepDims",t,e,n);return[cn.a(C("x",t,e,n),r,a)]}case"Mean":{const r=C("axis",t,e,n),a=C("keepDims",t,e,n);return[ln.a(C("x",t,e,n),r,a)]}case"Min":{const r=C("axis",t,e,n),a=C("keepDims",t,e,n);return[dn.a(C("x",t,e,n),r,a)]}case"Sum":{const r=C("axis",t,e,n),a=C("keepDims",t,e,n);return[pn.a(C("x",t,e,n),r,a)]}case"All":{const r=C("axis",t,e,n),a=C("keepDims",t,e,n);return[hn.a(C("x",t,e,n),r,a)]}case"Any":{const r=C("axis",t,e,n),a=C("keepDims",t,e,n);return[fn.a(C("x",t,e,n),r,a)]}case"ArgMax":{const r=C("axis",t,e,n);return[mn.a(C("x",t,e,n),r)]}case"ArgMin":{const r=C("axis",t,e,n);return[bn.a(C("x",t,e,n),r)]}case"Prod":{const r=C("axis",t,e,n),a=C("keepDims",t,e,n);return[se.a(C("x",t,e,n),r,a)]}case"Cumsum":{const r=C("axis",t,e,n),a=C("exclusive",t,e,n),o=C("reverse",t,e,n);return[gn.a(C("x",t,e,n),r,a,o)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"slice_join":return w.Eb(()=>((t,e,n)=>{switch(t.op){case"ConcatV2":case"Concat":{const r=C("n",t,e,n),a=C("axis",t,e,n);let o=C("tensors",t,e,n);return o=o.slice(0,r),[yn.a(o,a)]}case"GatherV2":case"Gather":{const r=C("axis",t,e,n),a=C("x",t,e,n),o=C("indices",t,e,n);return[xn.a(a,_e.a(o,"int32"),r)]}case"ReverseV2":case"Reverse":{const r=C("axis",t,e,n),a=C("x",t,e,n);return[On.a(a,r)]}case"Slice":{const r=C("begin",t,e,n),a=C("size",t,e,n);return[vn.a(C("x",t,e,n),r,a)]}case"StridedSlice":{const r=C("begin",t,e,n),a=C("end",t,e,n),o=C("strides",t,e,n),s=C("beginMask",t,e,n),i=C("endMask",t,e,n),u=C("ellipsisMask",t,e,n),c=C("newAxisMask",t,e,n),l=C("shrinkAxisMask",t,e,n),d=C("x",t,e,n);return[wn.a(d,r,a,o,s,i,u,c,l)]}case"Pack":return Object(w.Eb)(()=>{const r=C("axis",t,e,n),a=C("tensors",t,e,n),o=a[0].shape,s=jn.a(a[0]).shape,i=a.map(t=>{const e=w.Ib.arraysEqual(t.shape,o);if(!e&&!w.Ib.arraysEqual(jn.a(t).shape,s))throw new Error("the input tensors shape does not match");return e?t:In.a(t,o)});return[Cn.a(i,r)]});case"Unpack":{const r=C("axis",t,e,n),a=C("tensor",t,e,n);return Nn.a(a,r)}case"Tile":{const r=C("reps",t,e,n);return[$n.a(C("x",t,e,n),r)]}case"Split":case"SplitV":{const r=C("axis",t,e,n),a=C("numOrSizeSplits",t,e,n),o=C("x",t,e,n);return En.a(o,a,r)}case"ScatterNd":{const r=C("indices",t,e,n),a=C("values",t,e,n),o=C("shape",t,e,n);return[Tn.a(r,a,o)]}case"GatherNd":{const r=C("x",t,e,n),a=C("indices",t,e,n);return[Sn.a(r,a)]}case"SparseToDense":{const r=C("sparseIndices",t,e,n),a=C("outputShape",t,e,n),o=C("sparseValues",t,e,n),s=C("defaultValue",t,e,n);return[un.a(r,o,a,o.dtype===s.dtype?s:_e.a(s,o.dtype))]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"spectral":return w.Eb(()=>((t,e,n)=>{switch(t.op){case"FFT":return[kn.a(C("x",t,e,n))];case"IFFT":return[Rn.a(C("x",t,e,n))];case"RFFT":return[An.a(C("x",t,e,n))];case"IRFFT":return[Fn.a(C("x",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"transformation":return w.Eb(()=>((t,e,n)=>{switch(t.op){case"Cast":return[_e.a(C("x",t,e,n),C("dtype",t,e,n))];case"ExpandDims":{const r=C("axis",t,e,n);return[Dn.a(C("x",t,e,n),r)]}case"Squeeze":{const r=C("axis",t,e,n);return[jn.a(C("x",t,e,n),r)]}case"Reshape":return[In.a(C("x",t,e,n),C("shape",t,e,n))];case"MirrorPad":return[_n.a(C("x",t,e,n),C("padding",t,e,n),C("mode",t,e,n))];case"PadV2":case"Pad":return[Mn.a(C("x",t,e,n),C("padding",t,e,n),C("constantValue",t,e,n))];case"SpaceToBatchND":{const r=C("blockShape",t,e,n),a=C("paddings",t,e,n);return[Pn.a(C("x",t,e,n),r,a)]}case"BatchToSpaceND":{const r=C("blockShape",t,e,n),a=C("crops",t,e,n);return[Bn.a(C("x",t,e,n),r,a)]}case"DepthToSpace":{const r=C("blockSize",t,e,n),a=C("dataFormat",t,e,n).toUpperCase();return[Ln.a(C("x",t,e,n),r,a)]}case"BroadcastTo":return[Vn.a(C("x",t,e,n),C("shape",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"hash_table":return(async(t,e,n,r)=>{switch(t.op){case"HashTable":case"HashTableV2":{const a=C("keyDType",t,e,n),o=C("valueDType",t,e,n),s=new Ue(a,o);return r.addHashTable(t.name,s),[s.handle]}case"LookupTableImport":case"LookupTableImportV2":{const a=C("tableHandle",t,e,n,r),o=C("keys",t,e,n),s=C("values",t,e,n),i=r.getHashTableById(a.id);return[await i.import(o,s)]}case"LookupTableFind":case"LookupTableFindV2":{const a=C("tableHandle",t,e,n,r),o=C("keys",t,e,n),s=C("defaultValue",t,e,n),i=r.getHashTableById(a.id);return[await i.find(o,s)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n,r);case"custom":const a=I(t.op);if(a&&a.customExecutor)return a.customExecutor(new lt(t,e,n));throw TypeError(`Custom op ${t.op} is not registered.`);default:throw TypeError(`Unknown op '${t.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(t,e,n);return w.Ib.isPromise(a)?a.then(t=>[].concat(t)):[].concat(a)}class Wn{constructor(t={},e={},n={},r={}){this.weightMap=t,this.tensorArrayMap=e,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(t,e){return{id:t,frameName:e,iterationId:0}}set currentContext(t){this.contexts!==t&&(this.contexts=t,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const t=[];for(let e=0;e<this.contexts.length-1;e++){const n=this.contexts.slice(0,this.contexts.length-e);t.push(this.contextIdforContexts(n))}t.push(""),this._currentContextIds=t}contextIdforContexts(t){return t?t.map(t=>0===t.id&&0===t.iterationId?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(t){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,t)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const t=Object.assign({},this.contexts[this.contexts.length-1]);t.iterationId+=1,t.id=this.lastId,this.contexts.splice(-1,1,t),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(t){return this.weightMap[t]}addTensorArray(t){this.tensorArrayMap[t.id]=t}getTensorArray(t){return this.tensorArrayMap[t]}addTensorList(t){this.tensorListMap[t.id]=t}getTensorList(t){return this.tensorListMap[t]}dispose(t){for(const e in this.tensorArrayMap)this.tensorArrayMap[e].clearAndClose(t);for(const e in this.tensorListMap)this.tensorListMap[e].clearAndClose(t)}}function Un(t,e,n,r){const a=new Set,o=[];let s=null,i=null;const u=new Set,c=Object.keys(t).map(t=>T(t)[0]);let l=[];null!=r&&(l=r.map(t=>T(t.name)[0]));const d=[...e];for(;d.length>0;){const t=d.pop();(Xn(t)||qn(t)||Yn(t))&&null==s&&(s=t,i=s.children.map(t=>t.name).filter(t=>a.has(t))),a.add(t.name),null==n[t.name]&&-1===c.indexOf(t.name)&&-1===l.indexOf(t.name)&&(0!==t.inputs.length?t.inputs.forEach(t=>{u.has(t.name)||(u.add(t.name),d.push(t))}):o.push(t.name))}return{inputs:t,outputs:e,usedNodes:a,missingInputs:o,dynamicNode:s,syncInputs:i}}const Kn=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],Gn=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],Hn=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2"];function Xn(t){return Kn.indexOf(t.op)>=0}function qn(t){return Gn.indexOf(t.op)>=0}function Yn(t){return Hn.indexOf(t.op)>=0}class Qn{constructor(t,e){this.graph=t,this.parent=e,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=t.outputs,this._inputs=t.inputs,this._initNodes=t.initNodes,this._signature=t.signature,this._functions=t.functions,null!=t.functions&&Object.keys(t.functions).forEach(e=>{this._functionExecutorMap[e]=new Qn(t.functions[e],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(t){const e=Object.keys(t).map(e=>t[e].map(t=>t.id));this._weightIds=[].concat(...e),this._weightMap=t}set resourceManager(t){this._resourceManager=t}get inputs(){return this._inputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(t=>t.signatureKey||t.name)}get outputNodes(){return this._outputs.map(t=>{const e=t.signatureKey||t.name;return t.defaultOutput?`${e}:${t.defaultOutput}`:e})}get functions(){return Object.keys(this._functions).reduce((t,e)=>(t[e]=this._functions[e].signature,t),{})}getCompilationKey(t,e){const n=t.map(t=>t.name).sort(),r=e.map(t=>t.name).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(t,e){const n=Un(t,e,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:a,syncInputs:o}=n;if(null!=a)throw new Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${o}]`);if(r.length>0){const n=e.map(t=>t.name),a=Object.keys(t);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${a}]. Missing the following inputs: [${r}]`)}return function(t,e,n){const{usedNodes:r,inputs:a}=n,o=[],s=Object.keys(a).map(t=>T(t)[0]).map(e=>t.nodes[e]),i=t.initNodes;s.forEach(t=>{r.has(t.name)&&o.push(t)}),t.weights.forEach(t=>{r.has(t.name)&&o.push(t)}),null!=i&&i.forEach(t=>{r.has(t.name)&&o.push(t)});const u=new Set,c=[];for(;o.length>0;){const t=o.pop();u.add(t.name),e[t.name]||c.push(t),t.children.forEach(t=>{!u.has(t.name)&&r.has(t.name)&&t.inputs.every(t=>u.has(t.name))&&o.push(t)})}return c}(this.graph,this.weightMap,n)}execute(t,e){t=this.mapInputs(t);const n=Object.keys(t).sort();this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e);const r=n.map(t=>this.graph.nodes[T(t)[0]]),a=e.map(t=>T(t)[0]);let o=a.map(t=>this.graph.nodes[t]);0===o.length&&(o=this._outputs);const s=this.getCompilationKey(r,o);let i=this.compiledMap.get(s);null==i&&(i=this.compile(t,o),this.compiledMap.set(s,i));const u={},c={};return Object(w.Eb)(()=>{const n=new Wn(this.weightMap,u,c,this.functionExecutorMap),r=Object.assign({},this.weightMap);Object.keys(t).forEach(e=>{const[n,a]=T(e),o=[];o[a]=t[e],r[n]=o});const o=this.getFrozenTensorIds(r),s={};for(let t=0;t<i.length;t++){const e=i[t];if(!r[e.name]){const t=zn(e,r,n,this._resourceManager);if(w.Ib.isPromise(t))throw new Error(`The execution of the op '${e.op}' returned a promise. Please use model.executeAsync() instead.`);r[e.name]=t,this.checkTensorForDisposal(e.name,e,r,n,o,a,s)}}return null==this.parent&&n.dispose(o),e.map(t=>N(t,r,n))})}getFrozenTensorIds(t){const e=[].concat.apply([],Object.keys(t).map(e=>t[e]).map(t=>t.map(t=>t.id)));return new Set(e)}checkTensorForDisposal(t,e,n,r,a,o,s){"control"!==e.category&&-1===o.indexOf(t)&&(n[t].forEach(t=>{null!=t&&(s[t.id]=(s[t.id]||0)+e.children.length)}),e.inputs.forEach(t=>{if("control"!==t.category){const e=function(t,e,n){return e[E(t,n.currentContextId)]}(t.name,n,r);null!=e&&e.forEach(t=>{if(t&&!a.has(t.id)){const e=s[t.id];1===e?(t.dispose(),delete s[t.id]):null!=e&&s[t.id]--}})}}))}async executeAsync(t,e){return this._executeAsync(t,e)}async _executeAsync(t,e,n=!1,r={},a={}){n||(t=this.mapInputs(t),this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e));const o=new Wn(this.weightMap,r,a,this.functionExecutorMap),s=await this.executeWithControlFlow(t,o,e,n),i=e.map(t=>N(t,s,o)),u=i.map(t=>t.id),c=Object.keys(t).map(e=>t[e].id),l=new Set([...u,...c,...this.weightIds]);return Object.keys(s).forEach(t=>{s[t].forEach(t=>{!t||t.isDisposed||l.has(t.id)||t.dispose()})}),null==this.parent&&o.dispose(l),i}async executeFunctionAsync(t,e,n){const r=t.reduce((t,e,n)=>(t[this.inputs[n].name]=e,t),{});return this._executeAsync(r,this.outputNodes,!0,e,n)}async executeWithControlFlow(t,e,n,r){const a=Object.keys(t),o=a.map(t=>this.graph.nodes[T(t)[0]]),s=n.map(t=>T(t)[0]);let i=s.map(t=>this.graph.nodes[t]);0===i.length&&(i=this._outputs);const{usedNodes:u,missingInputs:c,dynamicNode:l,syncInputs:d}=Un(t,i,this.weightMap,this._initNodes),p=[...o,...this.graph.weights,...this._initNodes||[]].map(t=>({node:t,contexts:e.currentContext})),h=Object.assign({},this.weightMap);Object.keys(t).forEach(e=>{const[n,r]=T(e),a=[];a[r]=t[e],h[n]=a});const f={},m=this.getFrozenTensorIds(h),b={};for(;p.length>0;){const t=this.processStack(o,p,e,h,b,m,s,f,u);await Promise.all(t)}null!=l||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const g=i.filter(t=>!Xn(t)&&!N(t.name,h,e)).map(t=>t.name);if(g.length>0){let t="";throw null!=l&&(t=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${d}]`),new Error(`Cannot compute the outputs [${g}] from the provided inputs [${a}]. Consider providing the following inputs: [${c}]. ${t}`)}return h}processStack(t,e,n,r,a,o,s,i,u){const c=[];for(;e.length>0;){const t=e.pop();n.currentContext=t.contexts;let l="";if("Enter"===t.node.op&&C("isConstant",t.node,r,n)&&([l]=$(t.node.name,n)),null==r[t.node.name]){const d=zn(t.node,r,n,this._resourceManager);l||([l]=$(t.node.name,n));const p=n.currentContext;w.Ib.isPromise(d)?c.push(d.then(c=>(r[l]=c,n.currentContext=p,this.checkTensorForDisposal(l,t.node,r,n,o,s,i),this.processChildNodes(t.node,e,n,r,a,u),c))):(r[l]=d,this.checkTensorForDisposal(l,t.node,r,n,o,s,i),this.processChildNodes(t.node,e,n,r,a,u))}else this.processChildNodes(t.node,e,n,r,a,u)}return c}processChildNodes(t,e,n,r,a,o){t.children.forEach(t=>{const[s]=$(t.name,n);!a[s]&&o.has(t.name)&&("Merge"===t.op?t.inputNames.some(t=>!!N(t,r,n))&&(a[s]=!0,e.push({contexts:n.currentContext,node:t})):t.inputNames.every(t=>!!N(t,r,n))&&(a[s]=!0,e.push({contexts:n.currentContext,node:t})))})}dispose(){Object.keys(this.weightMap).forEach(t=>this.weightMap[t].forEach(t=>t.dispose()))}checkInputShapeAndType(t){Object.keys(t).forEach(e=>{const n=t[e],[r]=T(e),a=this.graph.nodes[r];if(a.attrParams.shape&&a.attrParams.shape.value){const t=a.attrParams.shape.value,e=t.length===n.shape.length&&n.shape.every((e,n)=>-1===t[n]||t[n]===e);w.Ib.assert(e,()=>`The shape of dict['${a.name}'] provided in model.execute(dict) must be [${t}], but was [${n.shape}]`)}a.attrParams.dtype&&a.attrParams.dtype.value&&w.Ib.assert(n.dtype===a.attrParams.dtype.value,()=>`The dtype of dict['${a.name}'] provided in model.execute(dict) must be ${a.attrParams.dtype.value}, but was ${n.dtype}`)})}mapInputs(t){const e={};for(const n in t)null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]?e[this._signature.inputs[n].name]=t[n]:e[n]=t[n];return e}checkInputs(t){const e=Object.keys(t).filter(t=>{const[e]=T(t);return null==this.graph.nodes[e]});if(e.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${e}] that are not part of graph`)}mapOutputs(t){return t.map(t=>null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[t]?this._signature.outputs[t].name:t,{})}checkOutputs(t){t.forEach(t=>{const[e]=T(t);if(!this.graph.nodes[e])throw new Error(`The output '${t}' is not found in the graph`)})}}class Jn{constructor(t={},e={}){this.hashTableNameToHandle=t,this.hashTableMap=e}addHashTable(t,e){this.hashTableNameToHandle[t]=e.handle,this.hashTableMap[e.id]=e}getHashTableHandleByName(t){return this.hashTableNameToHandle[t]}getHashTableById(t){return this.hashTableMap[t]}dispose(){for(const t in this.hashTableMap)this.hashTableMap[t].clearAndClose(),delete this.hashTableMap[t];for(const t in this.hashTableNameToHandle)this.hashTableNameToHandle[t].dispose(),delete this.hashTableNameToHandle[t]}}class Zn{constructor(t,e={}){this.modelUrl=t,this.loadOptions=e,this.version="n/a",null==e&&(this.loadOptions={}),this.resourceManager=new Jn}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}findIOHandler(){const t=this.modelUrl;if(null!=t.load)this.handler=t;else if(null!=this.loadOptions.requestInit)this.handler=w.kb.browserHTTPRequest(t,this.loadOptions);else{const e=w.kb.getLoadHandlers(t,this.loadOptions);if(0===e.length)e.push(w.kb.browserHTTPRequest(t,this.loadOptions));else if(e.length>1)throw new Error(`Found more than one (${e.length}) load handlers for URL '${[t]}'`);this.handler=e[0]}}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const t=await this.handler.load();return this.loadSync(t)}loadSync(t){this.artifacts=t;const e=this.artifacts.modelTopology;let n={};null!=this.artifacts.userDefinedMetadata&&(n=this.artifacts.userDefinedMetadata.signature),this.version=`${e.versions.producer}.${e.versions.minConsumer}`;const r=w.kb.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new Qn(q.Instance.transformGraph(e,n)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=t.modelInitializer){const e=q.Instance.transformGraph(t.modelInitializer);this.initializer=new Qn(e),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(t,e){if("string"==typeof t){const e=w.kb.getSaveHandlers(t);if(0===e.length)throw new Error(`Cannot find any save handlers for URL '${t}'`);if(e.length>1)throw new Error(`Found more than one (${e.length}) save handlers for URL '${t}'`);t=e[0]}if(null==t.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return t.save(this.artifacts)}predict(t,e){return this.execute(t,this.outputNodes)}normalizeInputs(t){if(!(t instanceof w.T||Array.isArray(t)))return t;if((t=Array.isArray(t)?t:[t]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${t.length} input tensors.`);return this.inputNodes.reduce((e,n,r)=>(e[n]=t[r],e),{})}normalizeOutputs(t){return t=t||this.outputNodes,Array.isArray(t)?t:[t]}execute(t,e){t=this.normalizeInputs(t),e=this.normalizeOutputs(e);const n=this.executor.execute(t,e);return n.length>1?n:n[0]}async executeAsync(t,e){t=this.normalizeInputs(t),e=this.normalizeOutputs(e);const n=await this.executor.executeAsync(t,e);return n.length>1?n:n[0]}convertTensorMapToTensorsMap(t){return Object.keys(t).reduce((e,n)=>(e[n]=[t[n]],e),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}async function tr(t,e={}){if(null==t)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==e&&(e={}),e.fromTFHub&&null==t.load&&(t.endsWith("/")||(t+="/"),t+="model.json?tfjs-format=file");const n=new Zn(t,e);return await n.load(),n}var er=function(){return(er=Object.assign||function(t){for(var e,n=1,r=arguments.length;n<r;n++)for(var a in e=arguments[n])Object.prototype.hasOwnProperty.call(e,a)&&(t[a]=e[a]);return t}).apply(this,arguments)};function nr(t,e,n,r){return new(n||(n=Promise))((function(a,o){function s(t){try{u(r.next(t))}catch(t){o(t)}}function i(t){try{u(r.throw(t))}catch(t){o(t)}}function u(t){var e;t.done?a(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(s,i)}u((r=r.apply(t,e||[])).next())}))}function rr(t,e){var n,r,a,o,s={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return o={next:i(0),throw:i(1),return:i(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function i(o){return function(i){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,r&&(a=2&o[0]?r.return:o[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,o[1])).done)return a;switch(r=0,a&&(o=[2&o[0],a.value]),o[0]){case 0:case 1:a=o;break;case 4:return s.label++,{value:o[1],done:!1};case 5:s.label++,r=o[1],o=[0];continue;case 7:o=s.ops.pop(),s.trys.pop();continue;default:if(!((a=(a=s.trys).length>0&&a[a.length-1])||6!==o[0]&&2!==o[0])){s=0;continue}if(3===o[0]&&(!a||o[1]>a[0]&&o[1]<a[3])){s.label=o[1];break}if(6===o[0]&&s.label<a[1]){s.label=a[1],a=o;break}if(a&&s.label<a[2]){s.label=a[2],s.ops.push(o);break}a[2]&&s.ops.pop(),s.trys.pop();continue}o=e.call(t,s)}catch(t){o=[6,t],r=0}finally{n=a=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,i])}}}const ar=t=>({startEndTensor:t,startPoint:Object(w.vb)(t,[0,0],[-1,2]),endPoint:Object(w.vb)(t,[0,2],[-1,2])}),or={strides:[8,16],anchors:[2,6]};function sr(t,e){let n,r,a;if(t.topLeft instanceof w.T&&t.bottomRight instanceof w.T){const[o,s]=Object(w.Eb)(()=>[Object(w.cb)([Object(w.zb)(e-1,t.topLeft.slice(0,1)),t.topLeft.slice(1,1)]),Object(w.cb)([Object(w.zb)(e-1,t.bottomRight.slice(0,1)),t.bottomRight.slice(1,1)])]);n=o,r=s,null!=t.landmarks&&(a=Object(w.Eb)(()=>{const n=Object(w.zb)(Object(w.Cb)([e-1,0]),t.landmarks),r=Object(w.Cb)([1,-1]);return Object(w.ob)(n,r)}))}else{const[o,s]=t.topLeft,[i,u]=t.bottomRight;n=[e-1-o,s],r=[e-1-i,u],null!=t.landmarks&&(a=t.landmarks.map(t=>[e-1-t[0],t[1]]))}const o={topLeft:n,bottomRight:r};return null!=a&&(o.landmarks=a),null!=t.probability&&(o.probability=t.probability instanceof w.T?t.probability.clone():t.probability),o}function ir(t,e){return Object(w.Eb)(()=>{let n;return n=t.hasOwnProperty("box")?t.box:t,((t,e)=>{const n=Object(w.ob)(t.startPoint,e),r=Object(w.ob)(t.endPoint,e),a=Object(w.db)([n,r],1);return ar(a)})(n,e).startEndTensor.squeeze()})}class ur{constructor(t,e,n,r,a,o){this.blazeFaceModel=t,this.width=e,this.height=n,this.maxFaces=r,this.anchorsData=function(t,e,n){const r=[];for(let a=0;a<n.strides.length;a++){const o=n.strides[a],s=Math.floor((e+o-1)/o),i=Math.floor((t+o-1)/o),u=n.anchors[a];for(let t=0;t<s;t++){const e=o*(t+.5);for(let t=0;t<i;t++){const n=o*(t+.5);for(let t=0;t<u;t++)r.push([n,e])}}}return r}(e,n,or),this.anchors=Object(w.Db)(this.anchorsData),this.inputSizeData=[e,n],this.inputSize=Object(w.Cb)([e,n]),this.iouThreshold=a,this.scoreThreshold=o}async getBoundingBoxes(t,e,n=!0){const[r,a,o]=Object(w.Eb)(()=>{const e=t.resizeBilinear([this.width,this.height]),n=Object(w.ob)(Object(w.zb)(e.div(255),.5),2),r=this.blazeFaceModel.predict(n).squeeze(),a=function(t,e,n){const r=Object(w.vb)(t,[0,1],[-1,2]),a=Object(w.X)(r,e),o=Object(w.vb)(t,[0,3],[-1,2]),s=Object(w.fb)(o,n),i=Object(w.fb)(a,n),u=Object(w.fb)(s,2),c=Object(w.zb)(i,u),l=Object(w.X)(i,u),d=Object(w.ob)(c,n),p=Object(w.ob)(l,n);return Object(w.db)([d,p],1)}(r,this.anchors,this.inputSize),o=Object(w.vb)(r,[0,0],[-1,1]);return[r,a,Object(w.ub)(o).squeeze()]}),s=console.warn;console.warn=()=>{};const i=w.jb.nonMaxSuppression(a,o,this.maxFaces,this.iouThreshold,this.scoreThreshold);console.warn=s;const u=await i.array();i.dispose();let c=u.map(t=>Object(w.vb)(a,[t,0],[1,-1]));e||(c=await Promise.all(c.map(async t=>{const e=await t.array();return t.dispose(),e})));const l=t.shape[1],d=t.shape[2];let p;p=e?Object(w.fb)([d,l],this.inputSize):[d/this.inputSizeData[0],l/this.inputSizeData[1]];const h=[];for(let f=0;f<c.length;f++){const t=c[f],a=Object(w.Eb)(()=>{const a=ar(t instanceof w.T?t:Object(w.Db)(t));if(!n)return a;const s=u[f];let i;return i=e?this.anchors.slice([s,0],[1,2]):this.anchorsData[s],{box:a,landmarks:Object(w.vb)(r,[s,5],[1,-1]).squeeze().reshape([6,-1]),probability:Object(w.vb)(o,[s],[1]),anchor:i}});h.push(a)}return a.dispose(),o.dispose(),r.dispose(),{boxes:h,scaleFactor:p}}async estimateFaces(t,e=!1,n=!1,r=!0){const[,a]=function(t){return t instanceof w.T?[t.shape[0],t.shape[1]]:[t.height,t.width]}(t),o=Object(w.Eb)(()=>(t instanceof w.T||(t=w.Z.fromPixels(t)),t.toFloat().expandDims(0))),{boxes:s,scaleFactor:i}=await this.getBoundingBoxes(o,e,r);return o.dispose(),e?s.map(t=>{const e=ir(t,i);let o={topLeft:e.slice([0],[2]),bottomRight:e.slice([2],[2])};if(r){const{landmarks:e,probability:n,anchor:r}=t,a=e.add(r).mul(i);o.landmarks=a,o.probability=n}return n&&(o=sr(o,a)),o}):Promise.all(s.map(async t=>{const e=ir(t,i);let o;if(r){const[n,r,a]=await Promise.all([t.landmarks,e,t.probability].map(async t=>t.array())),s=t.anchor,[u,c]=i,l=n.map(t=>[(t[0]+s[0])*u,(t[1]+s[1])*c]);o={topLeft:r.slice(0,2),bottomRight:r.slice(2),landmarks:l,probability:a},(t=>{t.startEndTensor.dispose(),t.startPoint.dispose(),t.endPoint.dispose()})(t.box),t.landmarks.dispose(),t.probability.dispose()}else{const t=await e.array();o={topLeft:t.slice(0,2),bottomRight:t.slice(2)}}return e.dispose(),n&&(o=sr(o,a)),o}))}}async function cr({maxFaces:t=10,inputWidth:e=128,inputHeight:n=128,iouThreshold:r=.3,scoreThreshold:a=.75}={}){const o=await tr("https://tfhub.dev/tensorflow/tfjs-model/blazeface/1/default/1",{fromTFHub:!0});return new ur(o,e,n,t,r,a)}var lr={silhouette:[10,338,297,332,284,251,389,356,454,323,361,288,397,365,379,378,400,377,152,148,176,149,150,136,172,58,132,93,234,127,162,21,54,103,67,109],lipsUpperOuter:[61,185,40,39,37,0,267,269,270,409,291],lipsLowerOuter:[146,91,181,84,17,314,405,321,375,291],lipsUpperInner:[78,191,80,81,82,13,312,311,310,415,308],lipsLowerInner:[78,95,88,178,87,14,317,402,318,324,308],rightEyeUpper0:[246,161,160,159,158,157,173],rightEyeLower0:[33,7,163,144,145,153,154,155,133],rightEyeUpper1:[247,30,29,27,28,56,190],rightEyeLower1:[130,25,110,24,23,22,26,112,243],rightEyeUpper2:[113,225,224,223,222,221,189],rightEyeLower2:[226,31,228,229,230,231,232,233,244],rightEyeLower3:[143,111,117,118,119,120,121,128,245],rightEyebrowUpper:[156,70,63,105,66,107,55,193],rightEyebrowLower:[35,124,46,53,52,65],rightEyeIris:[473,474,475,476,477],leftEyeUpper0:[466,388,387,386,385,384,398],leftEyeLower0:[263,249,390,373,374,380,381,382,362],leftEyeUpper1:[467,260,259,257,258,286,414],leftEyeLower1:[359,255,339,254,253,252,256,341,463],leftEyeUpper2:[342,445,444,443,442,441,413],leftEyeLower2:[446,261,448,449,450,451,452,453,464],leftEyeLower3:[372,340,346,347,348,349,350,357,465],leftEyebrowUpper:[383,300,293,334,296,336,285,417],leftEyebrowLower:[265,353,276,283,282,295],leftEyeIris:[468,469,470,471,472],midwayBetweenEyes:[168],noseTip:[1],noseBottom:[2],noseRightCorner:[98],noseLeftCorner:[327],rightCheek:[205],leftCheek:[425]};function dr(t){return[Math.abs(t.endPoint[0]-t.startPoint[0]),Math.abs(t.endPoint[1]-t.startPoint[1])]}function pr(t){return[t.startPoint[0]+(t.endPoint[0]-t.startPoint[0])/2,t.startPoint[1]+(t.endPoint[1]-t.startPoint[1])/2]}function hr(t,e){void 0===e&&(e=1.5);var n=pr(t),r=dr(t),a=[e*r[0]/2,e*r[1]/2];return{startPoint:[n[0]-a[0],n[1]-a[1]],endPoint:[n[0]+a[0],n[1]+a[1]],landmarks:t.landmarks}}var fr=[[1,0,0],[0,1,0],[0,0,1]];function mr(t,e){return[[1,0,t],[0,1,e],[0,0,1]]}function br(t,e){for(var n=0,r=0;r<t.length;r++)n+=t[r]*e[r];return n}function gr(t,e){for(var n=[],r=0;r<t.length;r++)n.push(t[r][e]);return n}function yr(t,e){for(var n=[],r=t.length,a=0;a<r;a++){n.push([]);for(var o=0;o<r;o++)n[a].push(br(t[a],gr(e,o)))}return n}function xr(t,e){var n=Math.cos(t),r=Math.sin(t),a=[[n,-r,0],[r,n,0],[0,0,1]],o=yr(mr(e[0],e[1]),a);return yr(o,mr(-e[0],-e[1]))}var Or=[13,lr.midwayBetweenEyes[0]],vr=[3,2],wr=lr.leftEyeLower0,jr=[wr[0],wr[wr.length-1]],Ir=lr.rightEyeLower0,Cr=[Ir[0],Ir[Ir.length-1]],Nr=[{key:"EyeUpper0",indices:[9,10,11,12,13,14,15]},{key:"EyeUpper1",indices:[25,26,27,28,29,30,31]},{key:"EyeUpper2",indices:[41,42,43,44,45,46,47]},{key:"EyeLower0",indices:[0,1,2,3,4,5,6,7,8]},{key:"EyeLower1",indices:[16,17,18,19,20,21,22,23,24]},{key:"EyeLower2",indices:[32,33,34,35,36,37,38,39,40]},{key:"EyeLower3",indices:[54,55,56,57,58,59,60,61,62]},{key:"EyebrowUpper",indices:[63,64,65,66,67,68,69,70]},{key:"EyebrowLower",indices:[48,49,50,51,52,53]}];function $r(t,e,n,r){for(var a=0;a<Nr.length;a++){var o=Nr[a],s=o.key,i=o.indices,u=lr[""+n+s];if(null==r||r.includes(s))for(var c=0;c<i.length;c++){var l=i[c];t[u[c]]=[e[l][0],e[l][1],(e[l][2]+t[u[c]][2])/2]}}}var Er=function(){function t(t,e,n,r,a,o,s){this.regionsOfInterest=[],this.runsWithoutFaceDetector=0,this.boundingBoxDetector=t,this.meshDetector=e,this.irisModel=s,this.meshWidth=n,this.meshHeight=r,this.maxContinuousChecks=a,this.maxFaces=o}return t.prototype.transformRawCoords=function(t,e,n,r){var a,o,s,i,u=this,c=dr({startPoint:e.startPoint,endPoint:e.endPoint}),l=[c[0]/this.meshWidth,c[1]/this.meshHeight],d=t.map((function(t){return[l[0]*(t[0]-u.meshWidth/2),l[1]*(t[1]-u.meshHeight/2),t[2]]})),p=xr(n,[0,0]),h=d.map((function(t){return function(t,e){return[br(t,e[0]),br(t,e[1])]}(t,p).concat([t[2]])})),f=(i=[-br((o=[[(a=r)[0][0],a[1][0]],[a[0][1],a[1][1]]])[0],s=[a[0][2],a[1][2]]),-br(o[1],s)],[o[0].concat(i[0]),o[1].concat(i[1]),[0,0,1]]),m=pr({startPoint:e.startPoint,endPoint:e.endPoint}).concat([1]),b=[br(m,f[0]),br(m,f[1])];return h.map((function(t){return[t[0]+b[0],t[1]+b[1],t[2]]}))},t.prototype.getLeftToRightEyeDepthDifference=function(t){return t[jr[0]][2]-t[Cr[0]][2]},t.prototype.getEyeBox=function(t,e,n,r,a){void 0===a&&(a=!1);var o=function(t){var e=pr(t),n=dr(t),r=Math.max.apply(Math,n)/2;return{startPoint:[e[0]-r,e[1]-r],endPoint:[e[0]+r,e[1]+r],landmarks:t.landmarks}}(hr(this.calculateLandmarksBoundingBox([t[n],t[r]]),2.3)),s=dr(o),i=w.jb.cropAndResize(e,[[o.startPoint[1]/this.meshHeight,o.startPoint[0]/this.meshWidth,o.endPoint[1]/this.meshHeight,o.endPoint[0]/this.meshWidth]],[0],[64,64]);return a&&(i=w.jb.flipLeftRight(i)),{box:o,boxSize:s,crop:i}},t.prototype.getEyeCoords=function(t,e,n,r){void 0===r&&(r=!1);for(var a=[],o=0;o<76;o++){var s=t[3*o];a.push([(r?1-s/64:s/64)*n[0]+e.startPoint[0],t[3*o+1]/64*n[1]+e.startPoint[1],t[3*o+2]])}return{rawCoords:a,iris:a.slice(71)}},t.prototype.getAdjustedIrisCoords=function(t,e,n){var r=t[lr[n+"EyeUpper0"][3]][2],a=t[lr[n+"EyeLower0"][4]][2],o=(r+a)/2;return e.map((function(t,e){var n=o;return 2===e?n=r:4===e&&(n=a),[t[0],t[1],n]}))},t.prototype.predict=function(t,e){return nr(this,void 0,void 0,(function(){var n,r,a,o,s=this;return rr(this,(function(i){switch(i.label){case 0:return this.shouldUpdateRegionsOfInterest()?[4,this.boundingBoxDetector.getBoundingBoxes(t,!1,!0)]:[3,2];case 1:return n=i.sent(),a=n.scaleFactor,0===(r=n.boxes).length?(this.regionsOfInterest=[],[2,null]):(o=r.map((function(t){var e,n,r=hr({startPoint:[(e={startPoint:t.box.startPoint.squeeze().arraySync(),endPoint:t.box.endPoint.squeeze().arraySync()}).startPoint[0]*(n=a)[0],e.startPoint[1]*n[1]],endPoint:[e.endPoint[0]*n[0],e.endPoint[1]*n[1]]});return er({},r,{landmarks:t.landmarks.arraySync()})})),r.forEach((function(t){null!=t&&null!=t.startPoint&&(t.startEndTensor.dispose(),t.startPoint.dispose(),t.endPoint.dispose())})),this.updateRegionsOfInterest(o),this.runsWithoutFaceDetector=0,[3,3]);case 2:this.runsWithoutFaceDetector++,i.label=3;case 3:return[2,Object(w.Eb)((function(){return s.regionsOfInterest.map((function(n,r){var a,o=Or[0],i=Or[1];0==n.landmarks.length>=468&&(o=vr[0],i=vr[1]),a=function(t,e){var n;return(n=Math.PI/2-Math.atan2(-(e[1]-t[1]),e[0]-t[0]))-2*Math.PI*Math.floor((n+Math.PI)/(2*Math.PI))}(n.landmarks[o],n.landmarks[i]);var u=pr({startPoint:n.startPoint,endPoint:n.endPoint}),c=t,l=fr;0!==a&&(c=w.jb.rotateWithOffset(t,a,0,[u[0]/t.shape[2],u[1]/t.shape[1]]),l=xr(-a,u));var d=function(t,e,n){var r=e.shape[1],a=e.shape[2];return w.jb.cropAndResize(e,[[t.startPoint[1]/r,t.startPoint[0]/a,t.endPoint[1]/r,t.endPoint[0]/a]],[0],n)}({startPoint:n.startPoint,endPoint:n.endPoint},c,[s.meshHeight,s.meshWidth]).div(255),p=s.meshDetector.predict(d),h=p[1],f=p[2],m=Object(w.sb)(f,[-1,3]).arraySync();if(e){var b=s.getEyeBox(m,d,jr[0],jr[1],!0),g=b.box,y=b.boxSize,x=b.crop,O=s.getEyeBox(m,d,Cr[0],Cr[1]),v=O.box,j=O.boxSize,I=O.crop,C=s.irisModel.predict(Object(w.cb)([x,I])).dataSync(),N=C.slice(0,228),$=s.getEyeCoords(N,g,y,!0),E=$.rawCoords,T=$.iris,S=C.slice(228),k=s.getEyeCoords(S,v,j),R=k.rawCoords,A=k.iris,F=s.getLeftToRightEyeDepthDifference(m);Math.abs(F)<30?($r(m,E,"left"),$r(m,R,"right")):F<1?$r(m,E,"left",["EyeUpper0","EyeLower0"]):$r(m,R,"right",["EyeUpper0","EyeLower0"]);var D=s.getAdjustedIrisCoords(m,T,"left"),_=s.getAdjustedIrisCoords(m,A,"right");m=m.concat(D).concat(_)}var M=s.transformRawCoords(m,n,a,l),P=Object(w.Db)(M),B=hr(s.calculateLandmarksBoundingBox(M));return s.regionsOfInterest[r]=er({},B,{landmarks:P.arraySync()}),{coords:Object(w.Db)(m,[m.length,3]),scaledCoords:P,box:B,flag:h.squeeze()}}))}))]}}))}))},t.prototype.updateRegionsOfInterest=function(t){for(var e=0;e<t.length;e++){var n=t[e],r=this.regionsOfInterest[e],a=0;if(r&&r.startPoint){var o=n.startPoint,s=o[0],i=o[1],u=n.endPoint,c=u[0],l=u[1],d=r.startPoint,p=d[0],h=d[1],f=r.endPoint,m=f[0],b=f[1],g=Math.max(s,p),y=Math.max(i,h),x=(Math.min(c,m)-g)*(Math.min(l,b)-y);a=x/((c-s)*(l-i)+(m-p)*(b-i)-x)}a<.25&&(this.regionsOfInterest[e]=n)}this.regionsOfInterest=this.regionsOfInterest.slice(0,t.length)},t.prototype.clearRegionOfInterest=function(t){null!=this.regionsOfInterest[t]&&(this.regionsOfInterest=this.regionsOfInterest.slice(0,t).concat(this.regionsOfInterest.slice(t+1)))},t.prototype.shouldUpdateRegionsOfInterest=function(){var t=this.regionsOfInterest.length,e=0===t;return 1===this.maxFaces||e?e:t!==this.maxFaces&&this.runsWithoutFaceDetector>=this.maxContinuousChecks},t.prototype.calculateLandmarksBoundingBox=function(t){var e=t.map((function(t){return t[0]})),n=t.map((function(t){return t[1]}));return{startPoint:[Math.min.apply(Math,e),Math.min.apply(Math,n)],endPoint:[Math.max.apply(Math,e),Math.max.apply(Math,n)]}},t}(),Tr=[[.499976992607117,.652534008026123],[.500025987625122,.547487020492554],[.499974012374878,.602371990680695],[.482113003730774,.471979022026062],[.500150978565216,.527155995368958],[.499909996986389,.498252987861633],[.499523013830185,.40106201171875],[.289712011814117,.380764007568359],[.499954998493195,.312398016452789],[.499987006187439,.269918978214264],[.500023007392883,.107050001621246],[.500023007392883,.666234016418457],[.5000159740448,.679224014282227],[.500023007392883,.692348003387451],[.499976992607117,.695277988910675],[.499976992607117,.70593398809433],[.499976992607117,.719385027885437],[.499976992607117,.737019002437592],[.499967992305756,.781370997428894],[.499816000461578,.562981009483337],[.473773002624512,.573909997940063],[.104906998574734,.254140973091125],[.365929991006851,.409575998783112],[.338757991790771,.41302502155304],[.311120003461838,.409460008144379],[.274657994508743,.389131009578705],[.393361985683441,.403706014156342],[.345234006643295,.344011008739471],[.370094001293182,.346076011657715],[.319321990013123,.347265005111694],[.297903001308441,.353591024875641],[.24779200553894,.410809993743896],[.396889001131058,.842755019664764],[.280097991228104,.375599980354309],[.106310002505779,.399955987930298],[.2099249958992,.391353011131287],[.355807989835739,.534406006336212],[.471751004457474,.65040397644043],[.474155008792877,.680191993713379],[.439785003662109,.657229006290436],[.414617002010345,.66654098033905],[.450374007225037,.680860996246338],[.428770989179611,.682690978050232],[.374971002340317,.727805018424988],[.486716985702515,.547628998756409],[.485300987958908,.527395009994507],[.257764995098114,.314490020275116],[.401223003864288,.455172002315521],[.429818987846375,.548614978790283],[.421351999044418,.533740997314453],[.276895999908447,.532056987285614],[.483370006084442,.499586999416351],[.33721199631691,.282882988452911],[.296391993761063,.293242990970612],[.169294998049736,.193813979625702],[.447580009698868,.302609980106354],[.392390012741089,.353887975215912],[.354490011930466,.696784019470215],[.067304998636246,.730105042457581],[.442739009857178,.572826027870178],[.457098007202148,.584792017936707],[.381974011659622,.694710969924927],[.392388999462128,.694203019142151],[.277076005935669,.271932005882263],[.422551989555359,.563233017921448],[.385919004678726,.281364023685455],[.383103013038635,.255840003490448],[.331431001424789,.119714021682739],[.229923993349075,.232002973556519],[.364500999450684,.189113974571228],[.229622006416321,.299540996551514],[.173287004232407,.278747975826263],[.472878992557526,.666198015213013],[.446828007698059,.668527007102966],[.422762006521225,.673889994621277],[.445307999849319,.580065965652466],[.388103008270264,.693961024284363],[.403039008378983,.706539988517761],[.403629004955292,.693953037261963],[.460041999816895,.557139039039612],[.431158006191254,.692366003990173],[.452181994915009,.692366003990173],[.475387006998062,.692366003990173],[.465828001499176,.779190003871918],[.472328990697861,.736225962638855],[.473087012767792,.717857003211975],[.473122000694275,.704625964164734],[.473033010959625,.695277988910675],[.427942007780075,.695277988910675],[.426479011774063,.703539967536926],[.423162013292313,.711845993995667],[.4183090031147,.720062971115112],[.390094995498657,.639572978019714],[.013953999616206,.560034036636353],[.499913990497589,.58014702796936],[.413199990987778,.69539999961853],[.409626007080078,.701822996139526],[.468080013990402,.601534962654114],[.422728985548019,.585985004901886],[.463079988956451,.593783974647522],[.37211999297142,.47341400384903],[.334562003612518,.496073007583618],[.411671012639999,.546965003013611],[.242175996303558,.14767599105835],[.290776997804642,.201445996761322],[.327338010072708,.256527006626129],[.399509996175766,.748921036720276],[.441727995872498,.261676013469696],[.429764986038208,.187834024429321],[.412198007106781,.108901023864746],[.288955003023148,.398952007293701],[.218936994671822,.435410976409912],[.41278201341629,.398970007896423],[.257135003805161,.355440020561218],[.427684992551804,.437960982322693],[.448339998722076,.536936044692993],[.178560003638268,.45755398273468],[.247308000922203,.457193970680237],[.286267012357712,.467674970626831],[.332827985286713,.460712015628815],[.368755996227264,.447206974029541],[.398963987827301,.432654976844788],[.476410001516342,.405806005001068],[.189241006970406,.523923993110657],[.228962004184723,.348950982093811],[.490725994110107,.562400996685028],[.404670000076294,.485132992267609],[.019469000399113,.401564002037048],[.426243007183075,.420431017875671],[.396993011236191,.548797011375427],[.266469985246658,.376977026462555],[.439121007919312,.51895797252655],[.032313998788595,.644356966018677],[.419054001569748,.387154996395111],[.462783008813858,.505746960639954],[.238978996872902,.779744982719421],[.198220998048782,.831938028335571],[.107550002634525,.540755033493042],[.183610007166862,.740257024765015],[.134409993886948,.333683013916016],[.385764002799988,.883153975009918],[.490967005491257,.579378008842468],[.382384985685349,.508572995662689],[.174399003386497,.397670984268188],[.318785011768341,.39623498916626],[.343364000320435,.400596976280212],[.396100014448166,.710216999053955],[.187885001301765,.588537991046906],[.430987000465393,.944064974784851],[.318993002176285,.898285031318665],[.266247987747192,.869701027870178],[.500023007392883,.190576016902924],[.499976992607117,.954452991485596],[.366169989109039,.398822009563446],[.393207013607025,.39553701877594],[.410373002290726,.391080021858215],[.194993004202843,.342101991176605],[.388664990663528,.362284004688263],[.365961998701096,.355970978736877],[.343364000320435,.355356991291046],[.318785011768341,.35834002494812],[.301414996385574,.363156020641327],[.058132998645306,.319076001644135],[.301414996385574,.387449026107788],[.499987989664078,.618434011936188],[.415838003158569,.624195992946625],[.445681989192963,.566076993942261],[.465844005346298,.620640993118286],[.49992299079895,.351523995399475],[.288718998432159,.819945991039276],[.335278987884521,.852819979190826],[.440512001514435,.902418971061707],[.128294005990028,.791940987110138],[.408771991729736,.373893976211548],[.455606997013092,.451801002025604],[.499877005815506,.908990025520325],[.375436991453171,.924192011356354],[.11421000212431,.615022003650665],[.448662012815475,.695277988910675],[.4480200111866,.704632043838501],[.447111994028091,.715808033943176],[.444831997156143,.730794012546539],[.430011987686157,.766808986663818],[.406787008047104,.685672998428345],[.400738000869751,.681069016456604],[.392399996519089,.677703022956848],[.367855995893478,.663918972015381],[.247923001646996,.601333022117615],[.452769994735718,.420849978923798],[.43639200925827,.359887003898621],[.416164010763168,.368713974952698],[.413385987281799,.692366003990173],[.228018000721931,.683571994304657],[.468268007040024,.352671027183533],[.411361992359161,.804327011108398],[.499989002943039,.469825029373169],[.479153990745544,.442654013633728],[.499974012374878,.439637005329132],[.432112008333206,.493588984012604],[.499886006116867,.866917014122009],[.49991300702095,.821729004383087],[.456548988819122,.819200992584229],[.344549000263214,.745438992977142],[.37890899181366,.574010014533997],[.374292999505997,.780184984207153],[.319687992334366,.570737957954407],[.357154995203018,.604269981384277],[.295284003019333,.621580958366394],[.447750002145767,.862477004528046],[.410986006259918,.508723020553589],[.31395098567009,.775308012962341],[.354128003120422,.812552988529205],[.324548006057739,.703992962837219],[.189096003770828,.646299958229065],[.279776990413666,.71465802192688],[.1338230073452,.682700991630554],[.336768001317978,.644733011722565],[.429883986711502,.466521978378296],[.455527991056442,.548622965812683],[.437114000320435,.558896005153656],[.467287987470627,.529924988746643],[.414712011814117,.335219979286194],[.37704598903656,.322777986526489],[.344107985496521,.320150971412659],[.312875986099243,.32233202457428],[.283526003360748,.333190023899078],[.241245999932289,.382785975933075],[.102986000478268,.468762993812561],[.267612010240555,.424560010433197],[.297879010438919,.433175981044769],[.333433985710144,.433878004550934],[.366427004337311,.426115989685059],[.396012008190155,.416696012020111],[.420121014118195,.41022801399231],[.007561000064015,.480777025222778],[.432949006557465,.569517970085144],[.458638995885849,.479089021682739],[.473466008901596,.545744001865387],[.476087987422943,.563830018043518],[.468472003936768,.555056989192963],[.433990985155106,.582361996173859],[.483518004417419,.562983989715576],[.482482999563217,.57784903049469],[.42645001411438,.389798998832703],[.438998997211456,.39649498462677],[.450067013502121,.400434017181396],[.289712011814117,.368252992630005],[.276670008897781,.363372981548309],[.517862021923065,.471948027610779],[.710287988185883,.380764007568359],[.526226997375488,.573909997940063],[.895093023777008,.254140973091125],[.634069979190826,.409575998783112],[.661242008209229,.41302502155304],[.688880026340485,.409460008144379],[.725341975688934,.389131009578705],[.606630027294159,.40370500087738],[.654766023159027,.344011008739471],[.629905998706818,.346076011657715],[.680678009986877,.347265005111694],[.702096998691559,.353591024875641],[.75221198797226,.410804986953735],[.602918028831482,.842862963676453],[.719901978969574,.375599980354309],[.893692970275879,.399959981441498],[.790081977844238,.391354024410248],[.643998026847839,.534487962722778],[.528249025344849,.65040397644043],[.525849997997284,.680191040039062],[.560214996337891,.657229006290436],[.585384011268616,.66654098033905],[.549625992774963,.680860996246338],[.57122802734375,.682691991329193],[.624852001667023,.72809898853302],[.513050019741058,.547281980514526],[.51509702205658,.527251958847046],[.742246985435486,.314507007598877],[.598631024360657,.454979002475739],[.570338010787964,.548575043678284],[.578631997108459,.533622980117798],[.723087012767792,.532054007053375],[.516445994377136,.499638974666595],[.662801027297974,.282917976379395],[.70362401008606,.293271005153656],[.830704987049103,.193813979625702],[.552385985851288,.302568018436432],[.607609987258911,.353887975215912],[.645429015159607,.696707010269165],[.932694971561432,.730105042457581],[.557260990142822,.572826027870178],[.542901992797852,.584792017936707],[.6180260181427,.694710969924927],[.607590973377228,.694203019142151],[.722943007946014,.271963000297546],[.577413976192474,.563166975975037],[.614082992076874,.281386971473694],[.616907000541687,.255886018276215],[.668509006500244,.119913995265961],[.770092010498047,.232020974159241],[.635536015033722,.189248979091644],[.77039098739624,.299556016921997],[.826722025871277,.278755009174347],[.527121007442474,.666198015213013],[.553171992301941,.668527007102966],[.577238023281097,.673889994621277],[.554691970348358,.580065965652466],[.611896991729736,.693961024284363],[.59696102142334,.706539988517761],[.596370995044708,.693953037261963],[.539958000183105,.557139039039612],[.568841993808746,.692366003990173],[.547818005084991,.692366003990173],[.52461302280426,.692366003990173],[.534089982509613,.779141008853912],[.527670979499817,.736225962638855],[.526912987232208,.717857003211975],[.526877999305725,.704625964164734],[.526966989040375,.695277988910675],[.572058022022247,.695277988910675],[.573521018028259,.703539967536926],[.57683801651001,.711845993995667],[.581691026687622,.720062971115112],[.609944999217987,.639909982681274],[.986046016216278,.560034036636353],[.5867999792099,.69539999961853],[.590372025966644,.701822996139526],[.531915009021759,.601536989212036],[.577268004417419,.585934996604919],[.536915004253387,.593786001205444],[.627542972564697,.473352015018463],[.665585994720459,.495950996875763],[.588353991508484,.546862006187439],[.757824003696442,.14767599105835],[.709249973297119,.201507985591888],[.672684013843536,.256581008434296],[.600408971309662,.74900496006012],[.55826598405838,.261672019958496],[.570303976535797,.187870979309082],[.588165998458862,.109044015407562],[.711045026779175,.398952007293701],[.781069993972778,.435405015945435],[.587247014045715,.398931980133057],[.742869973182678,.355445981025696],[.572156012058258,.437651991844177],[.55186802148819,.536570012569427],[.821442008018494,.457556009292603],[.752701997756958,.457181990146637],[.71375697851181,.467626988887787],[.66711300611496,.460672974586487],[.631101012229919,.447153985500336],[.6008620262146,.432473003864288],[.523481011390686,.405627012252808],[.810747981071472,.523926019668579],[.771045982837677,.348959028720856],[.509127020835876,.562718033790588],[.595292985439301,.485023975372314],[.980530977249146,.401564002037048],[.573499977588654,.420000016689301],[.602994978427887,.548687994480133],[.733529984951019,.376977026462555],[.560611009597778,.519016981124878],[.967685997486115,.644356966018677],[.580985009670258,.387160003185272],[.537728011608124,.505385041236877],[.760966002941132,.779752969741821],[.801778972148895,.831938028335571],[.892440974712372,.54076099395752],[.816350996494293,.740260004997253],[.865594983100891,.333687007427216],[.614073991775513,.883246004581451],[.508952975273132,.579437971115112],[.617941975593567,.508316040039062],[.825608015060425,.397674977779388],[.681214988231659,.39623498916626],[.656635999679565,.400596976280212],[.603900015354156,.710216999053955],[.81208598613739,.588539004325867],[.56801301240921,.944564998149872],[.681007981300354,.898285031318665],[.733752012252808,.869701027870178],[.633830010890961,.398822009563446],[.606792986392975,.39553701877594],[.589659988880157,.391062021255493],[.805015981197357,.342108011245728],[.611334979534149,.362284004688263],[.634037971496582,.355970978736877],[.656635999679565,.355356991291046],[.681214988231659,.35834002494812],[.698584973812103,.363156020641327],[.941866993904114,.319076001644135],[.698584973812103,.387449026107788],[.584177017211914,.624107003211975],[.554318010807037,.566076993942261],[.534153997898102,.62064003944397],[.711217999458313,.819975018501282],[.664629995822906,.852871000766754],[.559099972248077,.902631998062134],[.871706008911133,.791940987110138],[.591234028339386,.373893976211548],[.544341027736664,.451583981513977],[.624562978744507,.924192011356354],[.88577002286911,.615028977394104],[.551338016986847,.695277988910675],[.551980018615723,.704632043838501],[.552887976169586,.715808033943176],[.555167973041534,.730794012546539],[.569944024085999,.767035007476807],[.593203008174896,.685675978660583],[.599261999130249,.681069016456604],[.607599973678589,.677703022956848],[.631937980651855,.663500010967255],[.752032995223999,.601315021514893],[.547226011753082,.420395016670227],[.563543975353241,.359827995300293],[.583841025829315,.368713974952698],[.586614012718201,.692366003990173],[.771915018558502,.683578014373779],[.531597018241882,.352482974529266],[.588370978832245,.804440975189209],[.52079701423645,.442565023899078],[.567984998226166,.493479013442993],[.543282985687256,.819254994392395],[.655317008495331,.745514988899231],[.621008992195129,.574018001556396],[.625559985637665,.78031200170517],[.680198013782501,.570719003677368],[.64276397228241,.604337990283966],[.704662978649139,.621529996395111],[.552012026309967,.862591981887817],[.589071989059448,.508637011051178],[.685944974422455,.775357007980347],[.645735025405884,.812640011310577],[.675342977046967,.703978002071381],[.810858011245728,.646304965019226],[.72012197971344,.714666962623596],[.866151988506317,.682704985141754],[.663187026977539,.644596993923187],[.570082008838654,.466325998306274],[.544561982154846,.548375964164734],[.562758982181549,.558784961700439],[.531987011432648,.530140042304993],[.585271000862122,.335177004337311],[.622952997684479,.32277899980545],[.655896008014679,.320163011550903],[.687132000923157,.322345972061157],[.716481983661652,.333200991153717],[.758756995201111,.382786989212036],[.897013008594513,.468769013881683],[.732392013072968,.424547016620636],[.70211398601532,.433162987232208],[.66652500629425,.433866024017334],[.633504986763,.426087975502014],[.603875994682312,.416586995124817],[.579657971858978,.409945011138916],[.992439985275269,.480777025222778],[.567192018032074,.569419980049133],[.54136598110199,.478899002075195],[.526564002037048,.546118021011353],[.523913025856018,.563830018043518],[.531529009342194,.555056989192963],[.566035985946655,.582329034805298],[.51631098985672,.563053965568542],[.5174720287323,.577877044677734],[.573594987392426,.389806985855103],[.560697972774506,.395331978797913],[.549755990505219,.399751007556915],[.710287988185883,.368252992630005],[.723330020904541,.363372981548309]];function Sr(t){return nr(this,void 0,void 0,(function(){var e,n,r,a,o,s,i,u,c,l,d,p,h,f,m;return rr(this,(function(b){switch(b.label){case 0:return n=void 0===(e=t.maxContinuousChecks)?5:e,a=void 0===(r=t.detectionConfidence)?.9:r,s=void 0===(o=t.maxFaces)?10:o,u=void 0===(i=t.iouThreshold)?.3:i,l=void 0===(c=t.scoreThreshold)?.75:c,h=t.modelUrl,f=t.irisModelUrl,(p=void 0===(d=t.shouldLoadIrisModel)||d)?[4,Promise.all([kr(s,u,l),Rr(h),Ar(f)])]:[3,2];case 1:return m=b.sent(),[3,4];case 2:return[4,Promise.all([kr(s,u,l),Rr(h)])];case 3:m=b.sent(),b.label=4;case 4:return[2,new _r(m[0],m[1],n,a,s,p?m[2]:null)]}}))}))}function kr(t,e,n){return nr(this,void 0,void 0,(function(){return rr(this,(function(r){return[2,cr({maxFaces:t,iouThreshold:e,scoreThreshold:n})]}))}))}function Rr(t){return nr(this,void 0,void 0,(function(){return rr(this,(function(e){return null!=t?[2,tr(t)]:[2,tr("https://tfhub.dev/mediapipe/tfjs-model/facemesh/1/default/1",{fromTFHub:!0})]}))}))}function Ar(t){return nr(this,void 0,void 0,(function(){return rr(this,(function(e){return null!=t?[2,tr(t)]:[2,tr("https://tfhub.dev/mediapipe/tfjs-model/iris/1/default/2",{fromTFHub:!0})]}))}))}function Fr(t,e){if(t.mesh instanceof w.T){var n=Object(w.Eb)((function(){var n=Object(w.Cb)([e-1,0,0]),r=Object(w.Cb)([1,-1,1]);return Object(w.Eb)((function(){return[Object(w.cb)([Object(w.zb)(e-1,t.boundingBox.topLeft.slice(0,1)),t.boundingBox.topLeft.slice(1,1)]),Object(w.cb)([Object(w.zb)(e-1,t.boundingBox.bottomRight.slice(0,1)),t.boundingBox.bottomRight.slice(1,1)]),Object(w.zb)(n,t.mesh).mul(r),Object(w.zb)(n,t.scaledMesh).mul(r)]}))}));return Object.assign({},t,{boundingBox:{topLeft:n[0],bottomRight:n[1]},mesh:n[2],scaledMesh:n[3]})}return Object.assign({},t,{boundingBox:{topLeft:[e-1-t.boundingBox.topLeft[0],t.boundingBox.topLeft[1]],bottomRight:[e-1-t.boundingBox.bottomRight[0],t.boundingBox.bottomRight[1]]},mesh:t.mesh.map((function(t){var n=t.slice(0);return n[0]=e-1-t[0],n})),scaledMesh:t.scaledMesh.map((function(t){var n=t.slice(0);return n[0]=e-1-t[0],n}))})}var Dr,_r=function(){function t(t,e,n,r,a,o){this.kind="MediaPipeFaceMesh",this.pipeline=new Er(t,e,192,192,n,a,o),this.detectionConfidence=r}return t.getAnnotations=function(){return lr},t.getUVCoords=function(){return Tr},t.prototype.estimateFaces=function(t){return nr(this,void 0,void 0,(function(){var e,n,r,a,o,s,i,u,c,l,d,p,h=this;return rr(this,(function(f){switch(f.label){case 0:if(n=void 0!==(e=t.returnTensors)&&e,a=void 0!==(r=t.flipHorizontal)&&r,i=t.input,(s=void 0===(o=t.predictIrises)||o)&&null==this.pipeline.irisModel)throw new Error("The iris model was not loaded as part of facemesh. Please initialize the model with facemesh.load({shouldLoadIrisModel: true}).");return u=function(t){return t instanceof w.T?[t.shape[0],t.shape[1]]:[t.height,t.width]}(i),c=u[1],l=Object(w.Eb)((function(){return i instanceof w.T||(i=w.Z.fromPixels(i)),i.toFloat().expandDims(0)})),"webgl"!==Object(w.ib)()?[3,2]:(p=Object(w.hb)().get("WEBGL_PACK_DEPTHWISECONV"),Object(w.hb)().set("WEBGL_PACK_DEPTHWISECONV",!0),[4,this.pipeline.predict(l,s)]);case 1:return d=f.sent(),Object(w.hb)().set("WEBGL_PACK_DEPTHWISECONV",p),[3,4];case 2:return[4,this.pipeline.predict(l,s)];case 3:d=f.sent(),f.label=4;case 4:return l.dispose(),null!=d&&d.length>0?[2,Promise.all(d.map((function(t,e){return nr(h,void 0,void 0,(function(){var r,o,i,u,l,d,p,h,f,m,b,g,y,x,O=this;return rr(this,(function(v){switch(v.label){case 0:return r=t.coords,o=t.scaledCoords,i=t.box,l=[u=t.flag],n||(l=l.concat([r,o])),[4,Promise.all(l.map((function(t){return nr(O,void 0,void 0,(function(){return rr(this,(function(e){return[2,t.array()]}))}))})))];case 1:if(d=v.sent(),p=d[0],u.dispose(),p<this.detectionConfidence&&this.pipeline.clearRegionOfInterest(e),n)return h={kind:"MediaPipePredictionTensors",faceInViewConfidence:p,mesh:r,scaledMesh:o,boundingBox:{topLeft:Object(w.Cb)(i.startPoint),bottomRight:Object(w.Cb)(i.endPoint)}},a?[2,Fr(h,c)]:[2,h];for(x in f=d.slice(1),m=f[0],b=f[1],o.dispose(),r.dispose(),g={kind:"MediaPipePredictionValues",faceInViewConfidence:p,boundingBox:{topLeft:i.startPoint,bottomRight:i.endPoint},mesh:m,scaledMesh:b},a&&(g=Fr(g,c)),y={},lr)(s||!1===x.includes("Iris"))&&(y[x]=lr[x].map((function(t){return g.scaledMesh[t]})));return g.annotations=y,[2,g]}}))}))})))]:[2,[]]}}))}))},t}();function Mr(t,e){return void 0===t&&(t=Dr.mediapipeFacemesh),void 0===e&&(e={}),nr(this,void 0,void 0,(function(){return rr(this,(function(n){if(t===Dr.mediapipeFacemesh)return[2,Sr(e)];throw new Error(t+" is not a valid package name.")}))}))}(Dr||(Dr={})).mediapipeFacemesh="mediapipe-facemesh"},parS:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),o=n("dsKV"),s=n("o/e8"),i=n("VO80");const u=Object(i.a)({mul_:function(t,e){let n=Object(s.a)(t,"a","mul"),i=Object(s.a)(e,"b","mul");return[n,i]=Object(o.b)(n,i),r.a.runKernelFunc((t,e)=>{const r=t.multiply(n,i);return e([n,i]),r},{a:n,b:i},null,a.Ob)}})},r9q9:function(t,e,n){"use strict";n.d(e,"a",(function(){return f}));var r=n("o/e8"),a=n("atXS"),o=n("kRdc"),s=n("NuWS"),i=n("TyAZ"),u=n("E1lT"),c=n("wCH+"),l=n("VO80"),d=n("NclT"),p=n("oAkI"),h=n("4FMF");const f=Object(l.a)({logSumExp_:function(t,e=null,n=!1){const l=Object(r.a)(t,"x","logSumExp"),f=Object(a.I)(e,l.shape),m=Object(c.a)(l,f,!0),b=Object(p.a)(l,m),g=Object(i.a)(b),y=Object(h.a)(g,f),x=Object(u.a)(y),O=Object(o.a)(Object(d.a)(m,x.shape),x);if(n){const t=Object(s.e)(O.shape,f);return Object(d.a)(O,t)}return O}})},rm0a:function(t,e,n){"use strict";n.d(e,"a",(function(){return d}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("atXS"),i=n("NuWS"),u=n("VO80"),c=n("NclT"),l=n("yRKQ");const d=Object(u.a)({min_:function(t,e=null,n=!1){const u=Object(o.a)(t,"x","min");return r.a.runKernelFunc((t,r)=>{const a=Object(s.I)(e,u.shape);let o=a;const d=i.f(o,u.rank);let p=u;null!=d&&(p=Object(l.a)(u,d),o=i.g(o.length,u.rank));const h=t.min(p,o);null!=d&&p.dispose();let f=h;if(n){const t=i.e(f.shape,a);f=Object(c.a)(h,t),h.dispose()}return r([u,f]),f},{x:u},null,a.Kb,{axis:e,keepDims:n})}})},s57M:function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("VO80");const i=Object(s.a)({selu_:function(t){const e=Object(o.a)(t,"x","selu");return r.a.runKernelFunc((t,n)=>{const r=t.selu(e);return n([e]),r},{x:e},null,a.qc)}})},shz4:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),o=n("dsKV"),s=n("o/e8"),i=n("Um8L"),u=n("VO80");const c=Object(u.a)({lessEqual_:function(t,e){let n=Object(s.a)(t,"a","lessEqual"),u=Object(s.a)(e,"b","lessEqual");return[n,u]=Object(o.b)(n,u),Object(i.a)(n.shape,u.shape),r.a.runKernelFunc((t,e)=>{const r=t.lessEqual(n,u);return e([n,u]),r},{a:n,b:u},null,a.ub)}})},szMd:function(t,e,n){"use strict";n.d(e,"a",(function(){return a})),n.d(e,"b",(function(){return o})),n.d(e,"c",(function(){return i}));var r=n("atXS");class a{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(t,e){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`),this.platformName=t,this.platform=e}registerFlag(t,e,n){if(this.flagRegistry[t]={evaluationFn:e,setHook:n},null!=this.urlFlags[t]){const e=this.urlFlags[t];console.warn(`Setting feature override from URL ${t}: ${e}.`),this.set(t,e)}}async getAsync(t){return t in this.flags||(this.flags[t]=await this.evaluateFlag(t)),this.flags[t]}get(t){if(t in this.flags)return this.flags[t];const e=this.evaluateFlag(t);if(Object(r.x)(e))throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(null==this.flagRegistry[t])throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,null!=this.flagRegistry[t].setHook&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(null==this.flagRegistry[t])throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const t=function(t){const e={};return t.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(t,...n)=>(function(t,e,n){t[decodeURIComponent(e)]=decodeURIComponent(n||"")}(e,n[0],n[1]),n.join("="))),e}(this.global.location.search);"tfjsflags"in t&&t.tfjsflags.split(",").forEach(t=>{const[e,n]=t.split(":");this.urlFlags[e]=function(t,e){if("true"===(e=e.toLowerCase())||"false"===e)return"true"===e;if(""+ +e===e)return+e;throw new Error(`Could not parse value flag value ${e} for flag ${t}.`)}(e,n)})}}function o(){return s}let s=null;function i(t){s=t}},tQDl:function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("VO80");const i=Object(s.a)({reciprocal_:function(t){const e=Object(o.a)(t,"x","reciprocal");return r.a.runKernelFunc((t,n)=>{const r=t.reciprocal(e);return n([e]),r},{x:e},null,a.cc)}})},th0q:function(t,e,n){"use strict";n.d(e,"a",(function(){return m}));var r=n("atXS"),a=n("B3db"),o=n("ZJ6U"),s=n("JLAb"),i=n("VO80"),u=n("17CO"),c=n("NclT"),l=n("bTzI"),d=n("RbuM"),p=n("Wiw4"),h=n("oJu+"),f=n("Grcp");const m=Object(i.a)({rfft_:function(t,e){Object(r.b)("float32"===t.dtype,()=>"The dtype for rfft() must be real value but got "+t.dtype);let n=t.shape[t.shape.length-1];const i=t.size/n;let m;if(null!=e&&e<n){const r=t.shape.map(t=>0),a=t.shape.map(t=>t);a[t.shape.length-1]=e,m=Object(l.a)(t,r,a),n=e}else if(null!=e&&e>n){const r=t.shape.map(t=>t);r[t.shape.length-1]=e-n,m=Object(o.a)([t,Object(p.a)(r)],t.shape.length-1),n=e}else m=t;const b=Object(h.a)(m),g=Object(c.a)(Object(a.a)(m,b),[i,n]),y=Object(f.a)(g),x=Math.floor(n/2)+1,O=Object(u.a)(y),v=Object(s.a)(y),w=Object(d.a)(O,[x,n-x],O.shape.length-1),j=Object(d.a)(v,[x,n-x],v.shape.length-1),I=m.shape.slice();return I[m.shape.length-1]=x,Object(c.a)(Object(a.a)(w[0],j[0]),I)}})},uBja:function(t,e,n){"use strict";n.d(e,"d",(function(){return a})),n.d(e,"e",(function(){return o})),n.d(e,"f",(function(){return s})),n.d(e,"a",(function(){return i})),n.d(e,"b",(function(){return u})),n.d(e,"c",(function(){return c})),n.d(e,"i",(function(){return f})),n.d(e,"h",(function(){return m})),n.d(e,"g",(function(){return b}));var r=n("atXS");function a(t,e,n,r,a="NHWC",o){return i(t,[...e,t[3]],n,o,r,null,null,b(a))}function o(t,e,n,r,a,o,s="channelsLast"){const[u,c]=l(e);let d;if("channelsLast"===s)d=[u,c,t[3],t[3]];else{if("channelsFirst"!==s)throw new Error("Unknown dataFormat "+s);d=[u,c,t[1],t[1]]}return i(t,d,n,r,a,o,!1,s)}function s(t,e,n,r,a,o,s="NDHWC"){const[i,c,l]=d(e);let p,h;if("NDHWC"===s)h="channelsLast",p=[i,c,l,t[4],t[4]];else{if("NCDHW"!==s)throw new Error("Unknown dataFormat "+s);h="channelsFirst",p=[i,c,l,t[1],t[1]]}return u(t,p,n,r,a,!1,h,o)}function i(t,e,n,a,o,s,i=!1,u="channelsLast"){let[d,f,m,b]=[-1,-1,-1,-1];if("channelsLast"===u)[d,f,m,b]=t;else{if("channelsFirst"!==u)throw new Error("Unknown dataFormat "+u);[d,b,f,m]=t}const[g,y,,x]=e,[O,v]=l(n),[w,j]=l(a),I=p(g,w),C=p(y,j),{padInfo:N,outHeight:$,outWidth:E}=function(t,e,n,a,o,s,i,u,l){let d,p,f;if("number"==typeof t){d={top:t,bottom:t,left:t,right:t,type:0===t?"VALID":"NUMBER"};const o=function(t,e,n,a,o){null==a&&(a=c(t,e,n));const s=t[1],i=h((t[0]-e+2*a)/n+1,o);r.b(r.v(i),()=>`The output # of rows (${i}) must be an integer. Change the stride and/or zero pad parameters`);const u=h((s-e+2*a)/n+1,o);return r.b(r.v(u),()=>`The output # of columns (${u}) must be an integer. Change the stride and/or zero pad parameters`),[i,u]}([e,n],s,a,t,u);p=o[0],f=o[1]}else if("same"===t){p=Math.ceil(e/a),f=Math.ceil(n/o);const t=Math.max(0,(p-1)*a+s-e),r=Math.max(0,(f-1)*o+i-n),u=Math.floor(t/2),c=t-u,l=Math.floor(r/2);d={top:u,bottom:c,left:l,right:r-l,type:"SAME"}}else if("valid"===t)d={top:0,bottom:0,left:0,right:0,type:"VALID"},p=Math.ceil((e-s+1)/a),f=Math.ceil((n-i+1)/o);else{if("object"!=typeof t)throw Error("Unknown padding parameter: "+t);{const r="channelsLast"===l?t[1][0]:t[2][0],c="channelsLast"===l?t[1][1]:t[2][1],m="channelsLast"===l?t[2][0]:t[3][0],b="channelsLast"===l?t[2][1]:t[3][1];d={top:r,bottom:c,left:m,right:b,type:0===r&&0===c&&0===m&&0===b?"VALID":"EXPLICIT"},p=h((e-s+r+c)/a+1,u),f=h((n-i+m+b)/o+1,u)}}return{padInfo:d,outHeight:p,outWidth:f}}(o,f,m,O,v,I,C,s,u),T=i?x*b:x;let S;return"channelsFirst"===u?S=[d,T,$,E]:"channelsLast"===u&&(S=[d,$,E,T]),{batchSize:d,dataFormat:u,inHeight:f,inWidth:m,inChannels:b,outHeight:$,outWidth:E,outChannels:T,padInfo:N,strideHeight:O,strideWidth:v,filterHeight:g,filterWidth:y,effectiveFilterHeight:I,effectiveFilterWidth:C,dilationHeight:w,dilationWidth:j,inShape:t,outShape:S,filterShape:e}}function u(t,e,n,a,o,s=!1,i="channelsLast",u){let[l,f,m,b,g]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[l,f,m,b,g]=t;else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat "+i);[l,g,f,m,b]=t}const[y,x,O,,v]=e,[w,j,I]=d(n),[C,N,$]=d(a),E=p(y,C),T=p(x,N),S=p(O,$),{padInfo:k,outDepth:R,outHeight:A,outWidth:F}=function(t,e,n,a,o,s,i,u,l,d,p){let f,m,b,g;if("number"==typeof t){f={top:t,bottom:t,left:t,right:t,front:t,back:t,type:0===t?"VALID":"NUMBER"};const s=function(t,e,n,a,o,s){null==o&&(o=c(t,e,a));const i=t[1],u=t[2],l=h((t[0]-e+2*o)/a+1,s);r.b(r.v(l),()=>`The output # of depths (${l}) must be an integer. Change the stride and/or zero pad parameters`);const d=h((i-e+2*o)/a+1,s);r.b(r.v(d),()=>`The output # of rows (${d}) must be an integer. Change the stride and/or zero pad parameters`);const p=h((u-e+2*o)/a+1,s);return r.b(r.v(p),()=>`The output # of columns (${p}) must be an integer. Change the stride and/or zero pad parameters`),[l,d,p,1]}([e,n,a,1],u,0,o,t,p);m=s[0],b=s[1],g=s[2]}else if("same"===t){m=Math.ceil(e/o),b=Math.ceil(n/s),g=Math.ceil(a/i);const t=(m-1)*o+u-e,r=(b-1)*s+l-n,c=(g-1)*i+d-a,p=Math.floor(t/2),h=t-p,y=Math.floor(r/2),x=r-y,O=Math.floor(c/2);f={top:y,bottom:x,left:O,right:c-O,front:p,back:h,type:"SAME"}}else{if("valid"!==t)throw Error("Unknown padding parameter: "+t);f={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},m=Math.ceil((e-u+1)/o),b=Math.ceil((n-l+1)/s),g=Math.ceil((a-d+1)/i)}return{padInfo:f,outDepth:m,outHeight:b,outWidth:g}}(o,f,m,b,w,j,I,E,T,S,u),D=s?v*g:v;let _;return"channelsFirst"===i?_=[l,D,R,A,F]:"channelsLast"===i&&(_=[l,R,A,F,D]),{batchSize:l,dataFormat:i,inDepth:f,inHeight:m,inWidth:b,inChannels:g,outDepth:R,outHeight:A,outWidth:F,outChannels:D,padInfo:k,strideDepth:w,strideHeight:j,strideWidth:I,filterDepth:y,filterHeight:x,filterWidth:O,effectiveFilterDepth:E,effectiveFilterHeight:T,effectiveFilterWidth:S,dilationDepth:C,dilationHeight:N,dilationWidth:$,inShape:t,outShape:_,filterShape:e}}function c(t,e,n,r=1){const a=p(e,r);return Math.floor((t[0]*(n-1)-n+a)/2)}function l(t){return"number"==typeof t?[t,t,t]:2===t.length?[t[0],t[1],1]:t}function d(t){return"number"==typeof t?[t,t,t]:t}function p(t,e){return e<=1?t:t+(t-1)*(e-1)}function h(t,e){if(!e)return t;switch(e){case"round":return Math.round(t);case"ceil":return Math.ceil(t);case"floor":return Math.floor(t);default:throw new Error("Unknown roundingMode "+e)}}function f(t){const[e,n,r]=l(t);return 1===e&&1===n&&1===r}function m(t,e){return f(t)||f(e)}function b(t){if("NHWC"===t)return"channelsLast";if("NCHW"===t)return"channelsFirst";throw new Error("Unknown dataFormat "+t)}},uDiL:function(t,e,n){(function(t){var r;!function(t,a,o){function s(t){var e=this,n="";e.x=0,e.y=0,e.z=0,e.w=0,e.next=function(){var t=e.x^e.x<<11;return e.x=e.y,e.y=e.z,e.z=e.w,e.w^=e.w>>>19^t^t>>>8},t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),e.next()}function i(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e}function u(t,e){var n=new s(t),r=e&&e.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n("kU2C")&&n("QvbP")?void 0===(r=(function(){return u}).call(e,n,e,a))||(a.exports=r):this.xor128=u}(0,t,n("kU2C"))}).call(this,n("0SIU")(t))},ubnP:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),o=n("dsKV"),s=n("o/e8"),i=n("Um8L"),u=n("VO80");const c=Object(u.a)({equal_:function(t,e){let n=Object(s.a)(t,"a","equal"),u=Object(s.a)(e,"b","equal");return[n,u]=Object(o.b)(n,u),Object(i.a)(n.shape,u.shape),r.a.runKernelFunc(t=>t.equal(n,u),{a:n,b:u},null,a.U)}})},ukBL:function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("VO80");const i=Object(s.a)({gatherND_:function(t,e){const n=Object(o.a)(e,"indices","gatherND","int32"),s=Object(o.a)(t,"x","gatherND");return r.a.runKernelFunc(t=>t.gatherND(s,n),{params:s,indices:n},null,a.hb)}})},ulO0:function(t,e,n){"use strict";n.d(e,"a",(function(){return p}));var r=n("auKK"),a=n("wE5H"),o=n("wFtI"),s=n("o/e8"),i=n("atXS"),u=n("3rNm"),c=n("uBja"),l=n("VO80"),d=n("NclT");const p=Object(l.a)({avgPool3d_:function(t,e,n,l,p,h="NDHWC",f){null==f?f=[1,1,1]:Object(a.a)("dilations is deprecated, this field will be gone in v3.0.0.");const m=Object(s.a)(t,"x","avgPool3d","float32");let b=m,g=!1;4===m.rank&&(g=!0,b=Object(d.a)(m,[1,m.shape[0],m.shape[1],m.shape[2],m.shape[3]])),i.b(5===b.rank,()=>`Error in avgPool3d: x must be rank 5 but got rank ${b.rank}.`),i.b("NDHWC"===h,()=>"Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of "+h),i.b(c.h(n,f),()=>`Error in avgPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${f}'`),null!=p&&i.b(i.v(l),()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${p} but got pad ${l}.`);let y=r.a.runKernelFunc((t,r)=>{null==f&&(f=[1,1,1]);const a=c.f(b.shape,e,n,f,l,p,h);return r([b]),t.avgPool3d(b,a)},{x:b},null,o.p,{filterSize:e,strides:n,pad:l,dimRoundingMode:p,dataFormat:h,dilations:f});return y=Object(u.a)(y,b.dtype),g?Object(d.a)(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}})},uy0A:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),o=n("dsKV"),s=n("o/e8"),i=n("Um8L"),u=n("VO80");const c=Object(u.a)({greaterEqual_:function(t,e){let n=Object(s.a)(t,"a","greaterEqual"),u=Object(s.a)(e,"b","greaterEqual");return[n,u]=Object(o.b)(n,u),Object(i.a)(n.shape,u.shape),r.a.runKernelFunc((t,e)=>{const r=t.greaterEqual(n,u);return e([n,u]),r},{a:n,b:u},null,a.kb)}})},vGLV:function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("VO80");const i=Object(s.a)({sparseToDense_:function(t,e,n,s=0){const i=Object(o.a)(t,"sparseIndices","sparseToDense","int32"),u=Object(o.a)(e,"sparseValues","sparseToDense"),c=Object(o.a)(s,"defaultValue","sparseToDense",u.dtype);return function(t,e,n,r){if("int32"!==t.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${t.shape}.`);const a=t.rank>0?t.shape[0]:1,o=t.rank>1?t.shape[1]:1;if(n.length!==o)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${o}.`);if(0!==e.rank&&(1!==e.rank||e.size!==a))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${a}]`);if(e.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(i,u,n,c),r.a.runKernelFunc(t=>t.sparseToDense(i,u,n,c),{sparseIndices:i,sparseValues:u,defaultValue:c},null,a.zc,{outputShape:n})}})},"wCH+":function(t,e,n){"use strict";n.d(e,"a",(function(){return d}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("atXS"),i=n("NuWS"),u=n("VO80"),c=n("NclT"),l=n("yRKQ");const d=Object(u.a)({max_:function(t,e=null,n=!1){const u=Object(o.a)(t,"x","max");return r.a.runKernelFunc((t,r)=>{let a=s.I(e,u.shape);const o=i.f(a,u.rank);let d=u;null!=o&&(d=Object(l.a)(u,o),a=i.g(a.length,d.rank));const p=t.max(d,a);null!=o&&d.dispose();let h=p;if(n){const t=i.e(h.shape,s.I(e,u.shape));h=Object(c.a)(h,t),p.dispose()}return r([u,h]),h},{x:u},null,a.Cb,{reductionIndices:e,keepDims:n})}})},wE5H:function(t,e,n){"use strict";n.d(e,"a",(function(){return i})),n.d(e,"c",(function(){return u})),n.d(e,"g",(function(){return c})),n.d(e,"b",(function(){return l})),n.d(e,"e",(function(){return d})),n.d(e,"d",(function(){return p})),n.d(e,"f",(function(){return h}));var r=n("auKK"),a=n("szMd"),o=n("NNfn"),s=n("dsKV");function i(t){Object(a.b)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(t+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function u(){return r.a}function c(t,e){return r.a.tidy(t,e)}function l(t){Object(s.a)(t).forEach(t=>t.dispose())}function d(t){return r.a.keep(t)}function p(){return r.a.backendName}function h(t,e,n=1){return r.a.registerBackend(t,e,n)}Object(o.d)(i)},wFtI:function(t,e,n){"use strict";n.d(e,"a",(function(){return r})),n.d(e,"b",(function(){return a})),n.d(e,"c",(function(){return o})),n.d(e,"d",(function(){return s})),n.d(e,"e",(function(){return i})),n.d(e,"f",(function(){return u})),n.d(e,"g",(function(){return c})),n.d(e,"h",(function(){return l})),n.d(e,"i",(function(){return d})),n.d(e,"j",(function(){return p})),n.d(e,"k",(function(){return h})),n.d(e,"l",(function(){return f})),n.d(e,"n",(function(){return m})),n.d(e,"m",(function(){return b})),n.d(e,"o",(function(){return g})),n.d(e,"r",(function(){return y})),n.d(e,"p",(function(){return x})),n.d(e,"q",(function(){return O})),n.d(e,"s",(function(){return v})),n.d(e,"t",(function(){return w})),n.d(e,"u",(function(){return j})),n.d(e,"v",(function(){return I})),n.d(e,"w",(function(){return C})),n.d(e,"x",(function(){return N})),n.d(e,"y",(function(){return $})),n.d(e,"z",(function(){return E})),n.d(e,"A",(function(){return T})),n.d(e,"B",(function(){return S})),n.d(e,"C",(function(){return k})),n.d(e,"D",(function(){return R})),n.d(e,"E",(function(){return A})),n.d(e,"F",(function(){return F})),n.d(e,"G",(function(){return D})),n.d(e,"H",(function(){return _})),n.d(e,"J",(function(){return M})),n.d(e,"I",(function(){return P})),n.d(e,"K",(function(){return B})),n.d(e,"L",(function(){return L})),n.d(e,"M",(function(){return V})),n.d(e,"N",(function(){return z})),n.d(e,"O",(function(){return W})),n.d(e,"Q",(function(){return U})),n.d(e,"P",(function(){return K})),n.d(e,"R",(function(){return G})),n.d(e,"S",(function(){return H})),n.d(e,"T",(function(){return X})),n.d(e,"V",(function(){return q})),n.d(e,"U",(function(){return Y})),n.d(e,"W",(function(){return Q})),n.d(e,"X",(function(){return J})),n.d(e,"Y",(function(){return Z})),n.d(e,"Z",(function(){return tt})),n.d(e,"ab",(function(){return et})),n.d(e,"bb",(function(){return nt})),n.d(e,"cb",(function(){return rt})),n.d(e,"eb",(function(){return at})),n.d(e,"ib",(function(){return ot})),n.d(e,"hb",(function(){return st})),n.d(e,"jb",(function(){return it})),n.d(e,"kb",(function(){return ut})),n.d(e,"mb",(function(){return ct})),n.d(e,"lb",(function(){return lt})),n.d(e,"nb",(function(){return dt})),n.d(e,"ob",(function(){return pt})),n.d(e,"pb",(function(){return ht})),n.d(e,"qb",(function(){return ft})),n.d(e,"tb",(function(){return mt})),n.d(e,"ub",(function(){return bt})),n.d(e,"vb",(function(){return gt})),n.d(e,"wb",(function(){return yt})),n.d(e,"xb",(function(){return xt})),n.d(e,"zb",(function(){return Ot})),n.d(e,"Ab",(function(){return vt})),n.d(e,"Bb",(function(){return wt})),n.d(e,"yb",(function(){return jt})),n.d(e,"rb",(function(){return It})),n.d(e,"sb",(function(){return Ct})),n.d(e,"Cb",(function(){return Nt})),n.d(e,"Ib",(function(){return $t})),n.d(e,"Db",(function(){return Et})),n.d(e,"Gb",(function(){return Tt})),n.d(e,"Eb",(function(){return St})),n.d(e,"Fb",(function(){return kt})),n.d(e,"Hb",(function(){return Rt})),n.d(e,"Jb",(function(){return At})),n.d(e,"Kb",(function(){return Ft})),n.d(e,"Lb",(function(){return Dt})),n.d(e,"Mb",(function(){return _t})),n.d(e,"Nb",(function(){return Mt})),n.d(e,"Ob",(function(){return Pt})),n.d(e,"Pb",(function(){return Bt})),n.d(e,"Tb",(function(){return Lt})),n.d(e,"Qb",(function(){return Vt})),n.d(e,"Rb",(function(){return zt})),n.d(e,"Sb",(function(){return Wt})),n.d(e,"Vb",(function(){return Ut})),n.d(e,"Ub",(function(){return Kt})),n.d(e,"Wb",(function(){return Gt})),n.d(e,"Xb",(function(){return Ht})),n.d(e,"Yb",(function(){return Xt})),n.d(e,"Zb",(function(){return qt})),n.d(e,"ac",(function(){return Yt})),n.d(e,"bc",(function(){return Qt})),n.d(e,"cc",(function(){return Jt})),n.d(e,"dc",(function(){return Zt})),n.d(e,"fc",(function(){return te})),n.d(e,"ic",(function(){return ee})),n.d(e,"jc",(function(){return ne})),n.d(e,"gc",(function(){return re})),n.d(e,"hc",(function(){return ae})),n.d(e,"ec",(function(){return oe})),n.d(e,"kc",(function(){return se})),n.d(e,"mc",(function(){return ie})),n.d(e,"nc",(function(){return ue})),n.d(e,"oc",(function(){return ce})),n.d(e,"pc",(function(){return le})),n.d(e,"qc",(function(){return de})),n.d(e,"vc",(function(){return pe})),n.d(e,"tc",(function(){return he})),n.d(e,"uc",(function(){return fe})),n.d(e,"sc",(function(){return me})),n.d(e,"rc",(function(){return be})),n.d(e,"xc",(function(){return ge})),n.d(e,"Bc",(function(){return ye})),n.d(e,"Hc",(function(){return xe})),n.d(e,"yc",(function(){return Oe})),n.d(e,"Ac",(function(){return ve})),n.d(e,"wc",(function(){return we})),n.d(e,"Dc",(function(){return je})),n.d(e,"Cc",(function(){return Ie})),n.d(e,"Gc",(function(){return Ce})),n.d(e,"zc",(function(){return Ne})),n.d(e,"Fc",(function(){return $e})),n.d(e,"Ic",(function(){return Ee})),n.d(e,"Jc",(function(){return Te})),n.d(e,"Kc",(function(){return Se})),n.d(e,"Lc",(function(){return ke})),n.d(e,"Mc",(function(){return Re})),n.d(e,"Nc",(function(){return Ae})),n.d(e,"Oc",(function(){return Fe})),n.d(e,"Pc",(function(){return De})),n.d(e,"Qc",(function(){return _e})),n.d(e,"Ec",(function(){return Me})),n.d(e,"db",(function(){return Pe})),n.d(e,"lc",(function(){return Be})),n.d(e,"Rc",(function(){return Le})),n.d(e,"fb",(function(){return Ve})),n.d(e,"gb",(function(){return ze}));const r="Abs",a="Acos",o="Acosh",s="Add",i="AddN",u="All",c="Any",l="ArgMax",d="ArgMin",p="Asin",h="Asinh",f="Atan",m="Atanh",b="Atan2",g="AvgPool",y="AvgPoolBackprop",x="AvgPool3D",O="AvgPool3DBackprop",v="BatchMatMul",w="BatchToSpaceND",j="BroadcastTo",I="Cast",C="Ceil",N="ClipByValue",$="Complex",E="Concat",T="Conv2D",S="Conv2DBackpropFilter",k="Conv2DBackpropInput",R="Conv3D",A="Conv3DBackpropFilterV2",F="Conv3DBackpropInputV2",D="Cos",_="Cosh",M="Cumsum",P="CropAndResize",B="DepthToSpace",L="DepthwiseConv2dNative",V="DepthwiseConv2dNativeBackpropFilter",z="DepthwiseConv2dNativeBackpropInput",W="Dilation2D",U="Dilation2DBackpropInput",K="Dilation2DBackpropFilter",G="Div",H="Elu",X="EluGrad",q="Erf",Y="Equal",Q="Exp",J="Expm1",Z="FFT",tt="Fill",et="FlipLeftRight",nt="Floor",rt="FloorDiv",at="FusedBatchNorm",ot="GatherV2",st="GatherNd",it="Greater",ut="GreaterEqual",ct="Identity",lt="IFFT",dt="Imag",pt="IsFinite",ht="IsInf",ft="IsNan",mt="Less",bt="LessEqual",gt="LinSpace",yt="Log",xt="Log1p",Ot="LogicalAnd",vt="LogicalNot",wt="LogicalOr",jt="LogSoftmax",It="LRN",Ct="LRNBackprop",Nt="Max",$t="Maximum",Et="MaxPool",Tt="MaxPoolBackprop",St="MaxPool3D",kt="MaxPool3DBackprop",Rt="MaxPoolWithArgmax",At="Mean",Ft="Min",Dt="Minimum",_t="MirrorPad",Mt="Mod",Pt="Multiply",Bt="Negate",Lt="NotEqual",Vt="NonMaxSuppressionV3",zt="NonMaxSuppressionV4",Wt="NonMaxSuppressionV5",Ut="OnesLike",Kt="OneHot",Gt="PadV2",Ht="Pow",Xt="Prelu",qt="Prod",Yt="Range",Qt="Real",Jt="Reciprocal",Zt="Relu",te="Reshape",ee="ResizeNearestNeighbor",ne="ResizeNearestNeighborGrad",re="ResizeBilinear",ae="ResizeBilinearGrad",oe="Relu6",se="Reverse",ie="Round",ue="Rsqrt",ce="ScatterNd",le="SelectV2",de="Selu",pe="Slice",he="Sin",fe="Sinh",me="Sign",be="Sigmoid",ge="Softplus",ye="Sqrt",xe="Sum",Oe="SpaceToBatchND",ve="SplitV",we="Softmax",je="SquaredDifference",Ie="Square",Ce="Sub",Ne="SparseToDense",$e="StridedSlice",Ee="Tan",Te="Tanh",Se="Tile",ke="TopK",Re="Transpose",Ae="Unique",Fe="Unpack",De="UnsortedSegmentSum",_e="ZerosLike",Me="Step",Pe="FromPixels",Be="RotateWithOffset",Le="_FusedMatMul",Ve="FusedConv2D",ze="FusedDepthwiseConv2D"},"wI/y":function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("atXS"),i=n("VO80");const u=Object(i.a)({clipByValue_:function(t,e,n){const i=Object(o.a)(t,"x","clipByValue");return s.b(e<=n,()=>`Error in clip: min (${e}) must be less than or equal to max (${n}).`),r.a.runKernelFunc((t,r)=>{const a=t.clip(i,e,n);return r([i]),a},{x:i},null,a.x,{clipValueMin:e,clipValueMax:n})}})},wXC5:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("atXS"),i=n("VO80"),u=n("NclT");const c=Object(i.a)({dilation2d_:function(t,e,n,i,c=[1,1],l="NHWC"){const d=Object(o.a)(t,"x","dilation2d"),p=Object(o.a)(e,"filter","dilation2d");s.b(3===d.rank||4===d.rank,()=>"Error in dilation2d: input must be rank 3 or 4, but got rank "+d.rank+"."),s.b(3===p.rank,()=>"Error in dilation2d: filter must be rank 3, but got rank "+p.rank+"."),s.b("NHWC"===l,()=>"Error in dilation2d: Only NHWC is currently supported, but got dataFormat of "+l);let h=d,f=!1;3===d.rank&&(h=Object(u.a)(d,[1,d.shape[0],d.shape[1],d.shape[2]]),f=!0);const m=r.a.runKernel(a.O,{x:h,filter:p},{strides:n,pad:i,dilations:c});return f?Object(u.a)(m,[m.shape[1],m.shape[2],m.shape[3]]):m}})},waK1:function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("VO80");const i=Object(s.a)({cosh_:function(t){const e=Object(o.a)(t,"x","cosh");return r.a.runKernelFunc((t,n)=>{const r=t.cosh(e);return n([e]),r},{x:e},null,a.H)}})},wion:function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("auKK"),a=n("atXS"),o=n("B3db"),s=n("Wiw4");function i(t,e="float32"){if("complex64"===e){const e=i(t,"float32"),n=Object(s.a)(t,"float32");return Object(o.a)(e,n)}const n=Object(a.D)(Object(a.N)(t),e);return r.a.makeTensor(n,t,e)}},wxQM:function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("U45G"),a=n("o/e8"),o=n("parS"),s=n("O7f5"),i=n("VO80"),u=n("/7N0"),c=n("n/2y");const l=Object(i.a)({logSigmoid_:function(t){const e=Object(a.a)(t,"x","logSigmoid");return Object(r.a)(t=>({value:Object(s.a)(Object(c.a)(Object(s.a)(t))),gradFunc:e=>Object(o.a)(e,Object(u.a)(Object(s.a)(t)))}))(e)}})},x3y4:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),o=n("dsKV"),s=n("o/e8"),i=n("UI8N"),u=n("VO80");const c=Object(u.a)({div_:function(t,e){let n=Object(s.a)(t,"a","div"),u=Object(s.a)(e,"b","div");return[n,u]=Object(o.b)(n,u),"int32"===n.dtype&&"int32"===u.dtype?Object(i.a)(n,u):r.a.runKernelFunc((t,e)=>{const r=t.realDivide(n,u);return e([n,u]),r},{a:n,b:u},null,a.R,{})}})},yRKQ:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),o=n("o/e8"),s=n("atXS"),i=n("VO80");const u=Object(i.a)({transpose_:function(t,e){const n=Object(o.a)(t,"x","transpose");return null==e&&(e=n.shape.map((t,e)=>e).reverse()),s.b(n.rank===e.length,()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${e}.`),e.forEach(t=>{s.b(t>=0&&t<n.rank,()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+" but got "+e)}),n.rank<=1?n.clone():r.a.runKernelFunc(t=>t.transpose(n,e),{x:n},null,a.Mc,{perm:e})}})},yfHJ:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),o=n("dsKV"),s=n("o/e8"),i=n("VO80");const u=Object(i.a)({pow_:function(t,e){let n=Object(s.a)(t,"base","pow"),i=Object(s.a)(e,"exp","pow");return[n,i]=Object(o.b)(n,i),r.a.runKernelFunc((t,e)=>{const r=t.pow(n,i);return e([n,i,r]),r},{a:n,b:i},null,a.Xb)}})},yuCN:function(t,e,n){(function(t){var r;!function(t,a,o){function s(t){var e=this;e.next=function(){var t,n,r=e.x,a=e.i;return t=r[a],n=(t^=t>>>7)^t<<24,n^=(t=r[a+1&7])^t>>>10,n^=(t=r[a+3&7])^t>>>3,n^=(t=r[a+4&7])^t<<7,t=r[a+7&7],r[a]=n^=(t^=t<<13)^t<<9,e.i=a+1&7,n},function(t,e){var n,r=[];if(e===(0|e))r[0]=e;else for(e=""+e,n=0;n<e.length;++n)r[7&n]=r[7&n]<<15^e.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n&&(r[7]=-1),t.x=r,t.i=0,n=256;n>0;--n)t.next()}(e,t)}function i(t,e){return e.x=t.x.slice(),e.i=t.i,e}function u(t,e){null==t&&(t=+new Date);var n=new s(t),r=e&&e.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},a.int32=n.next,a.quick=a,r&&(r.x&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n("kU2C")&&n("QvbP")?void 0===(r=(function(){return u}).call(e,n,e,a))||(a.exports=r):this.xorshift7=u}(0,t,n("kU2C"))}).call(this,n("0SIU")(t))},zLES:function(t,e,n){"use strict";n.d(e,"a",(function(){return b})),n.d(e,"b",(function(){return g})),n.d(e,"c",(function(){return y})),n.d(e,"d",(function(){return x})),n.d(e,"e",(function(){return O})),n.d(e,"f",(function(){return v})),n.d(e,"g",(function(){return w})),n.d(e,"h",(function(){return j})),n.d(e,"i",(function(){return I}));var r=n("wE5H"),a=n("o/e8"),o=n("atXS"),s=n("kRdc"),i=n("x3y4"),u=n("CfTU"),c=n("8OX7"),l=n("RhH0"),d=n("parS"),p=n("VO80"),h=n("yfHJ"),f=n("QYQ3"),m=n("oAkI");const b=Object(p.a)({addStrict_:function(t,e){Object(r.a)("strict variants of ops have been deprecated and will be removed in future");const n=Object(a.a)(t,"a","addStrict"),i=Object(a.a)(e,"b","addStrict");return o.e(n.shape,i.shape,"Error in addStrict: "),Object(s.a)(n,i)}}),g=Object(p.a)({divStrict_:function(t,e){Object(r.a)("strict variants of ops have been deprecated and will be removed in future");const n=Object(a.a)(t,"a","div"),s=Object(a.a)(e,"b","div");return o.e(n.shape,s.shape,"Error in divideStrict: "),Object(i.a)(n,s)}}),y=Object(p.a)({maximumStrict_:function(t,e){Object(r.a)("strict variants of ops have been deprecated and will be removed in future");const n=Object(a.a)(t,"a","maximumStrict"),s=Object(a.a)(e,"b","maximumStrict");return o.e(n.shape,s.shape,"Error in maximumStrict: "),Object(u.a)(n,s)}}),x=Object(p.a)({minimumStrict_:function(t,e){Object(r.a)("strict variants of ops have been deprecated and will be removed in future");const n=Object(a.a)(t,"a","minimumStrict"),s=Object(a.a)(e,"b","minimumStrict");return o.e(n.shape,s.shape,"Error in minimumStrict: "),Object(c.a)(n,s)}}),O=Object(p.a)({modStrict_:function(t,e){Object(r.a)("strict variants of ops have been deprecated and will be removed in future");const n=Object(a.a)(t,"a","modStrict"),s=Object(a.a)(e,"b","modStrict");return o.e(n.shape,s.shape,"Error in modStrict: "),Object(l.a)(n,s)}}),v=Object(p.a)({mulStrict_:function(t,e){Object(r.a)("strict variants of ops have been deprecated and will be removed in future");const n=Object(a.a)(t,"a","mul"),s=Object(a.a)(e,"b","mul");return o.e(n.shape,s.shape,"Error in multiplyStrict: "),Object(d.a)(n,s)}}),w=Object(p.a)({powStrict_:function(t,e){return Object(r.a)("strict variants of ops have been deprecated and will be removed in future"),o.e(t.shape,e.shape,"Error in powStrict: "),Object(h.a)(t,e)}}),j=Object(p.a)({squaredDifferenceStrict_:function(t,e){Object(r.a)("strict variants of ops have been deprecated and will be removed in future");const n=Object(a.a)(t,"a","squaredDifferenceStrict"),s=Object(a.a)(e,"b","squaredDifferenceStrict");return o.e(n.shape,s.shape,"Error in squaredDifferenceStrict: "),Object(f.a)(n,s)}}),I=Object(p.a)({subStrict_:function(t,e){Object(r.a)("strict variants of ops have been deprecated and will be removed in future");const n=Object(a.a)(t,"a","subStrict"),s=Object(a.a)(e,"b","subStrict");return o.e(n.shape,s.shape,"Error in subStrict: "),Object(m.a)(n,s)}})},"zR+/":function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var r=n("o/e8"),a=n("c9N1"),o=n("VO80");const s=Object(o.a)({conv2dTranspose_:function(t,e,n,o,s,i){const u=Object(r.a)(t,"x","conv2dTranspose"),c=Object(r.a)(e,"filter","conv2dTranspose");return Object(a.a)(n,u,c,o,s,"NHWC",i)}})},zvA9:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),o=n("dsKV"),s=n("o/e8"),i=n("Um8L"),u=n("VO80");const c=Object(u.a)({greater_:function(t,e){let n=Object(s.a)(t,"a","greater"),u=Object(s.a)(e,"b","greater");return[n,u]=Object(o.b)(n,u),Object(i.a)(n.shape,u.shape),r.a.runKernelFunc(t=>t.greater(n,u),{a:n,b:u},null,a.jb)}})}}]);